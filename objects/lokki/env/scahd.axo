<objdefs appVersion="1.0.12">
   <obj.normal id="scahd" uuid="f9a271c2-c12f-45cb-b532-39dceb90e573">
      <sDescription>really slow ahd module that can cycle and has a holdtime in cyclemode, the divd control speeds up the decay, so that you can get really slow attacks with moderatly fast decays.</sDescription>
      <author>Simon Iten</author>
      <license>GPL</license>
      <inlets>
         <bool32 name="gate"/>
      </inlets>
      <outlets>
         <frac32.positive name="out"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="a"/>
         <frac32.u.map name="d"/>
         <int32.hradio name="divd">
            <MaxValue i="5"/>
         </int32.hradio>
         <bool32.tgl name="cycle"/>
         <frac32.u.map name="h"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int val;
bool has_peaked;
int holdcount;]]></code.declaration>
      <code.init><![CDATA[val = 0;
has_peaked = 0;
holdcount = 0;]]></code.init>
      <code.krate><![CDATA[if (inlet_gate) {
	if (val < 1<<27 && !has_peaked) {
		val = val+(1 +  (((1<<27) - param_a) >> 14));
		if (val >= 1<<27) {
			val = (1<<27) - 1;
			if (param_cycle) has_peaked = true;
		}
	}
	
	if (val>0 && has_peaked && param_cycle) {
		if (holdcount < (param_h >> 11)) holdcount++;
		else {
		val = val = val - (1 + (((1<<27) - param_d) >> (14 - param_divd)));
		if (val < 0) val = 0;
		if (!val) {
			has_peaked = false;	
			holdcount = 0;
			}
		}
	}
}
if (!inlet_gate && val > 0) {
	val = val - (1 + (((1<<27) - param_d) >> (14 - param_divd)));
	if (val < 0) val = 0;
	has_peaked = false;
}

outlet_out = val;]]></code.krate>
   </obj.normal>
</objdefs>