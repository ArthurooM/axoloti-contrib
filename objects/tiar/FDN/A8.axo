<objdefs appVersion="1.0.12">
   <obj.normal id="A8" uuid="a8c8f8a7-a7de-4c03-ada5-137f1a497344">
      <sDescription>8x8 Householder reflection matrix</sDescription>
      <author>Smashed Transistors</author>
      <license>LGPL</license>
      <helpPatch>test\\A8.axh</helpPatch>
      <inlets>
         <frac32buffer name="in0"/>
         <frac32buffer name="in1"/>
         <frac32buffer name="in2"/>
         <frac32buffer name="in3"/>
         <frac32buffer name="in4"/>
         <frac32buffer name="in5"/>
         <frac32buffer name="in6"/>
         <frac32buffer name="in7"/>
      </inlets>
      <outlets>
         <frac32buffer name="out0"/>
         <frac32buffer name="out1"/>
         <frac32buffer name="out2"/>
         <frac32buffer name="out3"/>
         <frac32buffer name="out4"/>
         <frac32buffer name="out5"/>
         <frac32buffer name="out6"/>
         <frac32buffer name="out7"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[
// +-------
// -+------
// --+-----
// ---+----
// ----+---
// -----+--
// ------+-
// -------+
//2/8 = 1/4

int32_t y[BUFSIZE];
for(int i = 0; i < BUFSIZE; i++){
  y[i] = (inlet_in0[i] + inlet_in1[i] + inlet_in2[i] + inlet_in3[i] + inlet_in4[i] + inlet_in5[i] + inlet_in6[i] + inlet_in7[i])>>2;
}
for(int i = 0; i < BUFSIZE; i++){
  outlet_out0[i] = inlet_in0[i] - y[i];
  outlet_out1[i] = inlet_in1[i] - y[i];
}
for(int i = 0; i < BUFSIZE; i++){
  outlet_out2[i] = inlet_in2[i] - y[i];
  outlet_out3[i] = inlet_in3[i] - y[i];
}
for(int i = 0; i < BUFSIZE; i++){
  outlet_out4[i] = inlet_in4[i] - y[i];
  outlet_out5[i] = inlet_in5[i] - y[i];
}
for(int i = 0; i < BUFSIZE; i++){
  outlet_out6[i] = inlet_in6[i] - y[i];
  outlet_out7[i] = inlet_in7[i] - y[i];
}


]]></code.krate>
   </obj.normal>
</objdefs>