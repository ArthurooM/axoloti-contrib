<objdefs appVersion="1.0.12">
   <obj.normal id="O2fractalII" uuid="e8875de3-7757-4e39-849c-12790dc6de92">
      <sDescription>O2 Fractal II.
For use with O2 objects (oversampling x2 using interleaved audio signal pairs).
8x internal oversampling with triangular window decimation.</sDescription>
      <author>Smashed Transistors</author>
      <license>LGPL</license>
      <helpPatch>O2fractalII.axh</helpPatch>
      <inlets>
         <frac32buffer.bipolar name="in1"/>
         <frac32buffer.bipolar name="in0"/>
      </inlets>
      <outlets>
         <frac32buffer.bipolar name="out1"/>
         <frac32buffer.bipolar name="out0"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[int32_t na, x;
int32_t f(int32_t x){
  return x ^ x >> 1; // Gray code
}]]></code.declaration>
<code.init><![CDATA[
na = x = 0;
]]></code.init>
      <code.srate><![CDATA[// 8x internal oversampling with triangular window decimation
int32_t dx = (inlet_in1 - x) / 8;
int32_t a;
{ int32_t y = f(x += dx); a = ___SMMLA((8<<25), y, na); na = ___SMMUL((1<<25), y);     }
{ int32_t y = f(x += dx); a = ___SMMLA((7<<25), y,  a); na = ___SMMLA((2<<25), y, na); }
{ int32_t y = f(x += dx); a = ___SMMLA((6<<25), y,  a); na = ___SMMLA((3<<25), y, na); }
{ int32_t y = f(x += dx); a = ___SMMLA((5<<25), y,  a); na = ___SMMLA((4<<25), y, na); }
{ int32_t y = f(x += dx); a = ___SMMLA((4<<25), y,  a); na = ___SMMLA((5<<25), y, na); }
{ int32_t y = f(x += dx); a = ___SMMLA((3<<25), y,  a); na = ___SMMLA((6<<25), y, na); }
{ int32_t y = f(x += dx); a = ___SMMLA((2<<25), y,  a); na = ___SMMLA((7<<25), y, na); }
{ int32_t y = f(x += dx); a = ___SMMLA((1<<25), y,  a); na = ___SMMLA((8<<25), y, na); }
outlet_out1 = x > 0 ? a : -a;
dx = (inlet_in0 - x) / 8;
{ int32_t y = f(x += dx); a = ___SMMLA((8<<25), y, na); na = ___SMMUL((1<<25), y);     }
{ int32_t y = f(x += dx); a = ___SMMLA((7<<25), y,  a); na = ___SMMLA((2<<25), y, na); }
{ int32_t y = f(x += dx); a = ___SMMLA((6<<25), y,  a); na = ___SMMLA((3<<25), y, na); }
{ int32_t y = f(x += dx); a = ___SMMLA((5<<25), y,  a); na = ___SMMLA((4<<25), y, na); }
{ int32_t y = f(x += dx); a = ___SMMLA((4<<25), y,  a); na = ___SMMLA((5<<25), y, na); }
{ int32_t y = f(x += dx); a = ___SMMLA((3<<25), y,  a); na = ___SMMLA((6<<25), y, na); }
{ int32_t y = f(x += dx); a = ___SMMLA((2<<25), y,  a); na = ___SMMLA((7<<25), y, na); }
{ int32_t y = f(x += dx); a = ___SMMLA((1<<25), y,  a); na = ___SMMLA((8<<25), y, na); }
outlet_out0 = x > 0 ? a : -a;]]></code.srate>
   </obj.normal>
</objdefs>