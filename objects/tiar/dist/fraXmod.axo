<objdefs appVersion="1.0.12">
   <obj.normal id="fraXmod" uuid="3d325de0-7757-4e39-849c-12790dc6de92">
      <sDescription>fraXmod.
8x oversampling with triangular window decimation.</sDescription>
      <author>Smashed Transistors</author>
      <license>LGPL</license>
      <helpPatch>fraXmod.axh</helpPatch>
      <inlets>
         <frac32buffer.bipolar name="x"/>
         <frac32buffer.bipolar name="y"/>
         <frac32buffer.bipolar name="z"/>
      </inlets>
      <outlets>
         <frac32buffer name="out" description="out"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[int32_t na = 0, x = 0, y = 0, z = 0;
int32_t f(int32_t x,int32_t y,int32_t z){
  return x ^ (y & 0x55555555) ^ (z ^ (z >> 1));
}]]></code.declaration>
      <code.srate><![CDATA[// 8x oversampling with triangular window decimation

int32_t dx = (abs(inlet_x) - x) / 8;
int32_t dy = (abs(inlet_y) - y) / 8;
int32_t dz = (abs(inlet_z) - z) / 8;
int32_t a;
{ x += dx; y += dy; z += dz; int32_t w = f(x,y,z);a = ___SMMLA((8<<25), w, na); na = ___SMMUL((1<<25), w);     }
{ x += dx; y += dy; z += dz; int32_t w = f(x,y,z);a = ___SMMLA((7<<25), w,  a); na = ___SMMLA((2<<25), w, na); }
{ x += dx; y += dy; z += dz; int32_t w = f(x,y,z);a = ___SMMLA((6<<25), w,  a); na = ___SMMLA((3<<25), w, na); }
{ x += dx; y += dy; z += dz; int32_t w = f(x,y,z);a = ___SMMLA((5<<25), w,  a); na = ___SMMLA((4<<25), w, na); }
{ x += dx; y += dy; z += dz; int32_t w = f(x,y,z);a = ___SMMLA((4<<25), w,  a); na = ___SMMLA((5<<25), w, na); }
{ x += dx; y += dy; z += dz; int32_t w = f(x,y,z);a = ___SMMLA((3<<25), w,  a); na = ___SMMLA((6<<25), w, na); }
{ x += dx; y += dy; z += dz; int32_t w = f(x,y,z);a = ___SMMLA((2<<25), w,  a); na = ___SMMLA((7<<25), w, na); }
{ x += dx; y += dy; z += dz; int32_t w = f(x,y,z);a = ___SMMLA((1<<25), w,  a); na = ___SMMLA((8<<25), w, na); }

outlet_out = ((inlet_x >= 0) == (inlet_y >= 0)) == (inlet_z >= 0) ? a : -a;


]]></code.srate>
   </obj.normal>
</objdefs>