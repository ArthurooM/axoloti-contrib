<objdefs appVersion="1.0.12">
   <obj.normal id="FractalRingSgnX" uuid="6027222c-bfca-42ad-81f0-e85fca6f34cc">
      <sDescription>FractalRing.
8x oversampling with triangular window decimation.</sDescription>
      <author>Smashed Transistors</author>
      <license>LGPL</license>
      <helpPatch>fractalRing.axh</helpPatch>
      <inlets>
         <frac32buffer.bipolar name="x"/>
         <frac32buffer.bipolar name="y"/>
      </inlets>
      <outlets>
         <frac32buffer name="out" description="out"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[int32_t na = 0, x = 0, y = 0;
int32_t f(int32_t x, int32_t y){
  return (x^(y>>1))&(y^(x>>1));
}]]></code.declaration>
      <code.srate><![CDATA[// 8x oversampling with triangular window decimation
int32_t dx = (abs(inlet_x) - x) / 8;
int32_t dy = (abs(inlet_y) - y) / 8;
int32_t a;
{ x += dx; y += dy; int32_t z = f(x,y); a = ___SMMLA((8<<25), z, na); na = ___SMMUL((1<<25), z);     }
{ x += dx; y += dy; int32_t z = f(x,y); a = ___SMMLA((7<<25), z,  a); na = ___SMMLA((2<<25), z, na); }
{ x += dx; y += dy; int32_t z = f(x,y); a = ___SMMLA((6<<25), z,  a); na = ___SMMLA((3<<25), z, na); }
{ x += dx; y += dy; int32_t z = f(x,y); a = ___SMMLA((5<<25), z,  a); na = ___SMMLA((4<<25), z, na); }
{ x += dx; y += dy; int32_t z = f(x,y); a = ___SMMLA((4<<25), z,  a); na = ___SMMLA((5<<25), z, na); }
{ x += dx; y += dy; int32_t z = f(x,y); a = ___SMMLA((3<<25), z,  a); na = ___SMMLA((6<<25), z, na); }
{ x += dx; y += dy; int32_t z = f(x,y); a = ___SMMLA((2<<25), z,  a); na = ___SMMLA((7<<25), z, na); }
{ x += dx; y += dy; int32_t z = f(x,y); a = ___SMMLA((1<<25), z,  a); na = ___SMMLA((8<<25), z, na); }

outlet_out = inlet_x>=0? a:-a ;]]></code.srate>
   </obj.normal>
</objdefs>