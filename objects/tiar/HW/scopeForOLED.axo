<objdefs appVersion="1.0.12">
   <obj.normal id="scopeForOLED" uuid="070f2d96-ebbb-40e4-b870-0c5aa01dc8e7">
      <sDescription>bipolar audio rate signal oscilloscope (time domain), showing 128 consecutive samples after the signal becomes positive.</sDescription>
      <author>Johannes Taelman mod Smashed Transistors</author>
      <license>BSD</license>
      <helpPatch>scope.axh</helpPatch>
      <rotatedParams>true</rotatedParams>
      <inlets>
         <frac32buffer.bipolar name="in" description="input"/>
      </inlets>
      <outlets/>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[int8_t t[128];
int index;
int32_t pval;
float dc,lp1,lp2,lp3;
float tlp[16];
int32_t pin;]]></code.declaration>
      <code.init><![CDATA[int i;
for(i = 0; i < 128; i++)
  t[i] = 0;
index = 0;
pval = 0;
lp1 = lp2 = lp3 = dc = 0.0f;
pin = 0;
for(i = 0; i < 16; i++) tlp[i] = 0.0f;]]></code.init>
      <code.krate><![CDATA[int i;
for(i=0;i<16;i++){
	if(inlet_in[i]>0){
	  tlp[i]=inlet_in[i];
	}else{
       tlp[i]=0.5f*inlet_in[i];
	}
}
for(i=0;i<16;i++){
	dc += 0.01f * (tlp[i] - dc);
	lp1 += 0.01f * (tlp[i]-dc - lp1);
	lp2 += 0.01f * (lp1 - lp2);
	lp3 += 0.01f * (lp2 - lp3);
	tlp[i] = lp3;
}

if (index<0) {
   for(i=0;i<16;i++){
      int32_t val = (tlp[i])>0;
      if (val&&(!pval)){
         index=0; break;
      }
      pval = val;
   }
   if (index == 0){
      for(;i<16;i++){
         t[index++]=(uint8_t)(inlet_in[i]>>21);
      }
   }
} else {    for(i=0;i<16;i++){
      if(index==128) {
         index=-1;
         break;
      }
      t[index++]=(uint8_t)(inlet_in[i]>>21);
   }
   if (index==-1){
     pval = (tlp[BUFSIZE-1])>0;
   }
}]]></code.krate>
   </obj.normal>
</objdefs>