<objdefs appVersion="1.0.12">
   <obj.normal id="SK35" uuid="3c3a7486-0fdf-47b6-9fb1-cd6c0927defa">
      <author>Smashed Transistors</author>
      <license>LGPL</license>
      <helpPatch>ZDF SVF 1.axh</helpPatch>
      <inlets>
         <frac32buffer name="x" description="filter input"/>
         <frac32 name="pitch" description="pitch"/>
         <frac32 name="reso" description="filter resonance"/>
      </inlets>
      <outlets>
         <frac32buffer name="lp12" description="filter output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.pitch name="pitch"/>
         <frac32.u.map name="Q"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[float a,  k,  u,y;]]></code.declaration>
      <code.init><![CDATA[u=y=0;]]></code.init>
      <code.krate><![CDATA[k = __USAT(param_Q + inlet_reso, 27) * (15.0f/(1<<27));
k=2.0f-1.0f/(0.1*k*k+0.5)  +0.00003*k*k*k;

uint32_t alpha;
MTOFEXTENDED(param_pitch + inlet_pitch-(530<<14), alpha);
a= arm::q_to_float(alpha,32);]]></code.krate>
      <code.srate><![CDATA[float x = arm::q_to_float(inlet_x,27);
// _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
if(y>2)y=2;
else if(y<-1.5)y=-1.5;
if(u>3)u=3;
else if(u<-8)u=-8;
for(int i=0;i<8;i++){
  u += a * (x - u -      k  * y);
  y += a * (    u + (k - 1) * y);
}
outlet_lp12 = arm::float_to_q(y, 27);]]></code.srate>
   </obj.normal>
</objdefs>