<objdefs appVersion="1.0.12">
   <obj.normal id="string1" uuid="9696178e-650d-49d8-b6fb-3d7fc1cd2ba5">
      <author>Smashed Transistors</author>
      <license>LGPL</license>
      <helpPatch>string1.axh</helpPatch>
      <inlets>
         <frac32buffer.bipolar name="in"/>
      </inlets>
      <outlets>
         <frac32buffer.bipolar name="out"/>
      </outlets>
      <displays/>
      <params>
         <int32 name="Preset" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="5"/>
         </int32>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t d[256];
uint8_t w = 0;]]></code.declaration>
      <code.init><![CDATA[for(int i = 0; i < 256; i++){ d[i] = 0; }]]></code.init>
      <code.krate><![CDATA[if(param_Preset == 1){
  for(int i = 0; i < BUFSIZE; i++){
    w--;
    outlet_out[i] = (d[w] = inlet_in[i]>>2) 
    + d[(uint8_t)(w+((uint8_t)53))] 
    - d[(uint8_t)(w+((uint8_t)62))] 
    - d[(uint8_t)(w+((uint8_t)71))] 
    - d[(uint8_t)(w+((uint8_t)73))] 
    - d[(uint8_t)(w+((uint8_t)147))] 
    + d[(uint8_t)(w+((uint8_t)233))] 
    + d[(uint8_t)(w+((uint8_t)252))];
  }
} else if(param_Preset == 2){
  for(int i = 0; i < BUFSIZE; i++){
    w--;
    outlet_out[i] = (d[w] = inlet_in[i]>>2) 
    + d[(uint8_t)(w+((uint8_t)37))] 
    - d[(uint8_t)(w+((uint8_t)43))] 
    - d[(uint8_t)(w+((uint8_t)48))] 
    - d[(uint8_t)(w+((uint8_t)61))] 
    - d[(uint8_t)(w+((uint8_t)124))] 
    + d[(uint8_t)(w+((uint8_t)148))] 
    + d[(uint8_t)(w+((uint8_t)155))];
  }
} else if(param_Preset == 3){
  for(int i = 0; i < BUFSIZE; i++){
    w--;
    outlet_out[i] = (d[w] = inlet_in[i]>>2) 
    - d[(uint8_t)(w+((uint8_t)3))] 
    + d[(uint8_t)(w+((uint8_t)32))] 
    + d[(uint8_t)(w+((uint8_t)35))] 
    - d[(uint8_t)(w+((uint8_t)87))] 
    - d[(uint8_t)(w+((uint8_t)117))] 
    - d[(uint8_t)(w+((uint8_t)249))] 
    + d[(uint8_t)(w+((uint8_t)255))];
  }

} else if(param_Preset == 4){
  for(int i = 0; i < BUFSIZE; i++){
    w--;
    outlet_out[i] = (d[w] = (inlet_in[i]>>2) & 0xFFFFF000) 
    + d[(uint8_t)(w+((uint8_t)23))] 
    - d[(uint8_t)(w+((uint8_t)28))] 
    - d[(uint8_t)(w+((uint8_t)83))] 
    + d[(uint8_t)(w+((uint8_t)87))] 
    + d[(uint8_t)(w+((uint8_t)177))] 
    - d[(uint8_t)(w+((uint8_t)183))] 
    - d[(uint8_t)(w+((uint8_t)227))]
    ;
    d[w] += (
    - d[(uint8_t)(w+((uint8_t)17))] 
    + d[(uint8_t)(w+((uint8_t)35))]
    - d[(uint8_t)(w+((uint8_t)59))] 
    + d[(uint8_t)(w+((uint8_t)65))]
    - d[(uint8_t)(w+((uint8_t)73))] 
    + d[(uint8_t)(w+((uint8_t)83))]
    + d[(uint8_t)(w+((uint8_t)117))] 
    - d[(uint8_t)(w+((uint8_t)153))]
    + d[(uint8_t)(w+((uint8_t)175))] 
    - d[(uint8_t)(w+((uint8_t)181))]
    + d[(uint8_t)(w+((uint8_t)243))] 
    - d[(uint8_t)(w+((uint8_t)255))]    
    )>>3;
  }
} else if(param_Preset == 5){
  for(int i = 0; i < BUFSIZE; i++){
    w--;
    outlet_out[i] = (d[w] = inlet_in[i]>>1)  
    - d[(uint8_t)(w+((uint8_t)47))]
    - d[(uint8_t)(w+((uint8_t)137))]
    + d[(uint8_t)(w+((uint8_t)255))] ;

  }

} else{
  for(int i = 0; i < BUFSIZE; i++){
    w--;
    d[w] = inlet_in[i]>>2;
    outlet_out[i] = inlet_in[i];
  }
}]]></code.krate>
   </obj.normal>
</objdefs>