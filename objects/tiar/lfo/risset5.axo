<objdefs appVersion="1.0.12">
   <obj.normal id="risset5" uuid="55552ec2-064a-4805-a37d-3e0db695511e">
      <sDescription>5 output ramps and enveloppes for Risset type effects</sDescription>
      <author>Smashed Transistors</author>
      <license>LGPL</license>
      <helpPatch>risset5.axh</helpPatch>
      <inlets>
         <frac32.bipolar name="pitch" description="pitch"/>
      </inlets>
      <outlets>
         <frac32 name="env1"/>
         <frac32 name="ramp1"/>
         <frac32 name="env2"/>
         <frac32 name="ramp2"/>
         <frac32 name="env3"/>
         <frac32 name="ramp3"/>
         <frac32 name="env4"/>
         <frac32 name="ramp4"/>
         <frac32 name="env5"/>
         <frac32 name="ramp5"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.lfopitch name="pitch" noLabel="true"/>
         <frac32.s.map name="v1"/>
         <frac32.s.map name="v0"/>
      </params>
      <attribs>
         <combo name="rampType">
            <MenuEntries>
               <string>saw</string>
               <string>pow2</string>
               <string>pow4</string>
               <string>rev pow2</string>
               <string>rev pow4</string>
            </MenuEntries>
            <CEntries>
               <string>1</string>
               <string>2</string>
               <string>3</string>
               <string>4</string>
               <string>5</string>
            </CEntries>
         </combo>
      </attribs>
      <code.declaration><![CDATA[uint32_t p;

#define REVERSE (attr_rampType>3)
#define POWER2 (attr_rampType==2 || attr_rampType==4)
#define POWER4 (attr_rampType==3 || attr_rampType==5)

int32_t v0, v1;
int32_t calcRamp(uint32_t p){

	int32_t r = (int32_t)(p>>(32-27)); //q27
	if(REVERSE){
		r = 0x07FFFFFF - r;
	}
	if(POWER2){
		r = ___SMMUL(r, r)<<5;
	}
	if(POWER4){
		r = ___SMMUL(r, r)<<5;
		r = ___SMMUL(r, r)<<5;
	}
	return ___SMMLA(r, v1 - v0, v0>>5)<<5;
}
int32_t calcEnv(uint32_t p){
	//return abs((int32_t)p)>>(31-27);
	int32_t e = abs((int32_t)p); //q31
	// shaping 3x2-2x3 = x2(3-2x)
	//                q30    q31q31    q29     2eq29
	return ___SMMUL(___SMMUL(e, e), (3<<29) - (e>>1)); //q27
}]]></code.declaration>
      <code.init><![CDATA[
	  p = 0;
	  ]]></code.init>
      <code.krate><![CDATA[
int32_t dp;
MTOFEXTENDED(param_pitch + inlet_pitch, dp);
p += dp>>2;

v0 = param_v0;
v1 = param_v1;

outlet_ramp1 = calcRamp(p);
outlet_env1  = calcEnv(p);

p += 858993459L;
outlet_ramp2 = calcRamp(p);
outlet_env2  = calcEnv(p);

p += 858993459L;
outlet_ramp3 = calcRamp(p);
outlet_env3  = calcEnv(p);

p += 858993459L;
outlet_ramp4 = calcRamp(p);
outlet_env4  = calcEnv(p);

p += 858993459L;
outlet_ramp5 = calcRamp(p);
outlet_env5  = calcEnv(p);

p += 858993460L;

]]></code.krate>
   </obj.normal>
</objdefs>