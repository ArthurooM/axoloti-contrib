<objdefs appVersion="1.0.12">
   <obj.normal id="KWSync.axo" uuid="97212d6e-773d-459f-bb89-b9dddd3775f4">
      <sDescription>Advanced version with built-in Master oscillator. See help patch for usage !!
</sDescription>
      <author>Smashed Transistors</author>
      <license>LGPL</license>
      <helpPatch>DevilSync.axh</helpPatch>
      <inlets>
         <frac32.bipolar name="pitch slave" description="pitch_slave"/>
         <frac32.bipolar name="pitch master"/>
      </inlets>
      <outlets>
         <frac32buffer.bipolar name="out" description=""/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.pitch name="pitch slave" noLabel="true"/>
         <frac32.s.map.pitch name="pitch master"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[//dissym picky sqr
float F(float p){
float x = p + 16;
x = (x - ((int)x) - 0.5f); //  x[-0.5, 0.5]
float x2 = x * x;
if(x > 0){
  if(x <  0.25f) return x2 * ( 3 - 8 * x2);
  else           return  0.3125f - 0.625f * x;
} else {
  if(x > -0.25f) return x2 * (-3 + 8 * x2);
  else           return -0.3125f - 0.625f * x;
}
}



float pM = 0, pS = 0, dpM, _dpM, dpS, _dpS, f, FpS=0;]]></code.declaration>
      <code.krate><![CDATA[int32_t idp;
MTOFEXTENDED(param_pitch_space_slave + inlet_pitch_space_slave, idp);
dpS = (idp*(0.25f/(1<<30)));
_dpS = 1.0f / dpS;

// _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
MTOFEXTENDED(param_pitch_space_master + inlet_pitch_space_master, idp);
dpM = (idp*(0.25f/(1<<30)));
_dpM = 1 / dpM;]]></code.krate>
      <code.srate><![CDATA[pM += dpM;
if(pM > 1){
  pM -= 1;
  float a = pM * _dpM;
  
  f = F(pS + (1 - a) * dpS) - FpS;
  pS = a * dpS;
  FpS = F(pS);
  f += FpS - F(0);
  f *= _dpS;
} else {
  f = FpS;
  pS += dpS;
  if(pS > 1)
    pS -= 1;
  FpS = F(pS);
  f = (FpS - f) * _dpS;
}
outlet_out = (int32_t)((1 << 27) * f);]]></code.srate>
   </obj.normal>
</objdefs>