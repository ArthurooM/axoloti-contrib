<objdefs appVersion="1.0.12">
   <obj.normal id="wf_16Steps" uuid="23b7bb32-3349-44c5-a22c-298698ebc5ed">
      <sDescription>For use with 16Steps(Sync)
Conveniently packs DISCONTINUOUS 16 steps in a &quot;audio rate output&quot;.</sDescription>
      <author>Thierry Smashed Transistors</author>
      <license>LGPL</license>
      <rotatedParams>true</rotatedParams>
      <inlets>
         <bool32 name="update"/>
      </inlets>
      <outlets>
         <frac32buffer.bipolar name="wf16"/>
         <bool32 name="update"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.mapvsl name="s0" noLabel="true">
            <MinValue v="-62.9"/>
            <MaxValue v="62.9"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e0" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s1" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e1" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s2" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e2" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s3" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e3" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s4" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e4" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s5" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e5" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s6" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e6" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s7" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e7" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s8" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e8" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s9" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e9" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s10" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e10" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s11" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e11" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s12" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e12" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s13" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e13" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s14" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e14" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="s15" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
         <frac32.s.mapvsl name="e15" noLabel="true">
            <MinValue v="0.0"/>
            <MaxValue v="64.0"/>
         </frac32.s.mapvsl>
      </params>
      <attribs/>
      <code.declaration><![CDATA[static const int16_t c(const int32_t x){
  if(x>0x07FFFFFF) return 32767;
  else return (int16_t)(x >> 12);
};
int16_t v[32];
bool firstTime = true;]]></code.declaration>
      <code.init><![CDATA[for(int i=0;i<32;i++) 
  v[i] = 0;]]></code.init>
      <code.krate><![CDATA[// Note: send a trig on first exec or on param change.
if(firstTime || inlet_update){
  firstTime = false;
  // 12 = 27 - 15 : q27 -> q15
  v[0] = c(param_s0);
  v[1] = c(param_e0);
  
  v[2] = c(param_s1);
  v[3] = c(param_e1);
  
  v[4] = c(param_s2);
  v[5] = c(param_e2);
  
  v[6] = c(param_s3);
  v[7] = c(param_e3);
  
  v[8] = c(param_s4);
  v[9] = c(param_e4);
  
  v[10] = c(param_s5);
  v[11] = c(param_e5);
  
  v[12] = c(param_s6);
  v[13] = c(param_e6);
  
  v[14] = c(param_s7);
  v[15] = c(param_e7);
  
  v[16] = c(param_s8);
  v[17] = c(param_e8);
  
  v[18] = c(param_s9);
  v[19] = c(param_e9);
  
  v[20] = c(param_s10);
  v[21] = c(param_e10);
  
  v[22] = c(param_s11);
  v[23] = c(param_e11);
  
  v[24] = c(param_s12);
  v[25] = c(param_e12);
  
  v[26] = c(param_s13);
  v[27] = c(param_e13);
  
  v[28] = c(param_s14);
  v[29] = c(param_e14);
  
  v[30] = c(param_s15);
  v[31] = c(param_e15);
  outlet_update = true;
} else {
  outlet_update = false;
}

int16_t* xStartEnd = (int16_t*)outlet_wf16;
for(int i=0;i<32;i++) 
  xStartEnd[i] = v[i];]]></code.krate>
   </obj.normal>
</objdefs>