<objdefs appVersion="1.0.12">
   <obj.normal id="DPtrisaw" uuid="1491aec2-1d4a-470b-be0a-af388bcf1aee">
      <sDescription>aliased limited triangle - sawtooth osc</sDescription>
      <author>Smashed Transistors</author>
      <license>LGPL</license>
      <helpPatch>dptrisaw.axh</helpPatch>
      <inlets>
         <frac32.bipolar name="pitch" description="pitch"/>
         <frac32.bipolar name="sym"/>
      </inlets>
      <outlets>
         <frac32buffer.bipolar name="wave" description="sine wave"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.pitch name="pitch" noLabel="true"/>
         <frac32.s.map name="sym"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t p, x1;]]></code.declaration>
      <code.init><![CDATA[p = x1 = 0;]]></code.init>
      <code.krate><![CDATA[int32_t dp;
MTOFEXTENDED(inlet_pitch + param_pitch, dp);
int32_t m = 0x7FFFFFFF - (__USAT(abs(inlet_sym + param_sym), 27)<<4);
if(m < (1<<20)) m = 1<<20; //min ratio 1/128

float g = (0.5f + arm::q_to_float(m, 32))
       / arm::q_to_float(___SMMUL(m, dp), 25);
       
if(inlet_sym + param_sym < 0)
  m = -m;       
//                  q31      q30       q29 
x1 = ___SMMLS(p, ___SMMUL(p, p), p>>2);
int32_t pm = p + m;
x1 -= ___SMMLS(pm, ___SMMUL(pm, pm), pm>>2);]]></code.krate>
      <code.srate><![CDATA[p += dp;
//                  q31      q30       q29 
int32_t x0 = ___SMMLS(p, ___SMMUL(p, p), p>>2);
int32_t pm = p + m;
x0 -= ___SMMLS(pm, ___SMMUL(pm, pm), pm>>2);
outlet_wave = (int32_t)((x0 - x1) * g);
x1 = x0;]]></code.srate>
   </obj.normal>
</objdefs>