<objdefs appVersion="1.0.11">
   <obj.normal id="smooth8" uuid="6c5d08c282bb08bff24af85n4891447f99bcbc97">
      <sDescription> eight exponential smooth</sDescription>
      <author>Johannes Taelman,philoop</author>
      <license>BSD</license>
      <helpPatch>math.axh</helpPatch>
      <inlets>
         <frac32 name="in1" description="input"/>
         <frac32 name="in2" description="input"/>
         <frac32 name="in3" description="input"/>
         <frac32 name="in4" description="input"/>
         <frac32 name="in5" description="input"/>
         <frac32 name="in6" description="input"/>
         <frac32 name="in7" description="input"/>
         <frac32 name="in8" description="input"/>
      </inlets>
      <outlets>
         <frac32 name="out1" description="output"/>
         <frac32 name="out2" description="output"/>
         <frac32 name="out3" description="output"/>
         <frac32 name="out4" description="output"/>
         <frac32 name="out5" description="output"/>
         <frac32 name="out6" description="output"/>
         <frac32 name="out7" description="output"/>
         <frac32 name="out8" description="output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="time1" noLabel="true"/>
         <frac32.u.map name="time2" noLabel="true"/>
         <frac32.u.map name="time3" noLabel="true"/>
         <frac32.u.map name="time4" noLabel="true"/>
         <frac32.u.map name="time5" noLabel="true"/>
         <frac32.u.map name="time6" noLabel="true"/>
         <frac32.u.map name="time7" noLabel="true"/>
         <frac32.u.map name="time8" noLabel="true"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t val1;
int32_t val2;
int32_t val3;
int32_t val4;
int32_t val5;
int32_t val6;
int32_t val7;
int32_t val8;]]></code.declaration>
      <code.init><![CDATA[   
	  val1 = 0;
	  val2 = 0;
	  val3 = 0;
	  val4 = 0;
	  val5 = 0;
	  val6 = 0;
	  val7 = 0;
	  val8 = 0;
]]></code.init>
      <code.krate><![CDATA[   
	  val1 = ___SMMLA(val1-inlet_in1,(-1<<26)+(param_time1>>1),val1);
      outlet_out1= val1;
	  val2 = ___SMMLA(val2-inlet_in2,(-1<<26)+(param_time2>>1),val2);
      outlet_out2= val2;
	  val3 = ___SMMLA(val3-inlet_in3,(-1<<26)+(param_time3>>1),val3);
      outlet_out3= val3;
	  val4 = ___SMMLA(val4-inlet_in4,(-1<<26)+(param_time4>>1),val4);
      outlet_out4= val4;
	  val5 = ___SMMLA(val5-inlet_in5,(-1<<26)+(param_time5>>1),val5);
      outlet_out5= val5;
	  val6 = ___SMMLA(val6-inlet_in6,(-1<<26)+(param_time6>>1),val6);
      outlet_out6= val6;
	  val7 = ___SMMLA(val7-inlet_in7,(-1<<26)+(param_time7>>1),val7);
      outlet_out7= val7;
	  val8 = ___SMMLA(val8-inlet_in8,(-1<<26)+(param_time8>>1),val8);
      outlet_out8= val8;
]]></code.krate>
   </obj.normal>
</objdefs>