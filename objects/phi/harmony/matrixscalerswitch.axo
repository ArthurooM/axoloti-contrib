<objdefs>
   <obj.normal 
   id="matrixscalerswitch" uuid="363d17ef-2be8-4231-b497-fcece6163b50">
   <sDescription>matrix scaler </sDescription>  
   <inlets>
      <int32.positive name="in" description="select"/>
	  <int32.bipolar name="seq"/>
      <int32.bipolar name="octave"/>
      <int32.bipolar name="keyafter"/>
      <int32.bipolar name="transafter"/>
   </inlets>
   <outlets>
      <int32.bipolar name="o"/>
   </outlets>
   <displays/>
   <params> 
      <bool32.tgl name="in"/>
      <bool32.tgl name="seq"/>
      <bool32.tgl name="oct"/>
	  <int32 name="transpose" noLabel="false">
            <MinValue i="-60"/>
            <MaxValue i="+60"/>
         </int32>
      <bool32.tgl name="on"/>
     
     <int32.hradio name="C" noLabel="true">
         <MaxValue i="12"/>
      </int32.hradio>
      <int32.hradio name="Cis" noLabel="true">
         <MaxValue i="12"/>
      </int32.hradio>
      <int32.hradio name="D" noLabel="true">
         <MaxValue i="12"/>
      </int32.hradio>
      <int32.hradio name="Dis" noLabel="true">
         <MaxValue i="12"/>
      </int32.hradio>
      <int32.hradio name="E" noLabel="true">
         <MaxValue i="12"/>
      </int32.hradio>
      <int32.hradio name="F" noLabel="true">
         <MaxValue i="12"/>
      </int32.hradio>
      <int32.hradio name="Fis" noLabel="true">
         <MaxValue i="12"/>
      </int32.hradio>
      <int32.hradio name="G" noLabel="true">
         <MaxValue i="12"/>
      </int32.hradio>
      <int32.hradio name="Gis" noLabel="true">
         <MaxValue i="12"/>
      </int32.hradio>
      <int32.hradio name="A" noLabel="true">
         <MaxValue i="12"/>
      </int32.hradio>
      <int32.hradio name="Ais" noLabel="true">
         <MaxValue i="12"/>
      </int32.hradio>
      <int32.hradio name="B" noLabel="true">
         <MaxValue i="12"/>
      </int32.hradio>
      
   </params>
   <attribs/>
   <includes/>
   <code.declaration><![CDATA[int32_t val;
int ins;
int rem;
int oct;
int scl;
   ]]></code.declaration>
   <code.init><![CDATA[val = (int32_t)(GenerateRandomNumber())>>4;
      ins = 0;
      rem = 0;
      oct = 0;
      scl = 0;
	  ]]></code.init>
   <code.dispose><![CDATA[]]></code.dispose>
   <code.krate><![CDATA[
      ins = ((param_seq)?inlet_seq*0.094:0)+((param_oct)?inlet_octave:0)+((param_in)?inlet_in:0);
 int r;
      if (ins >=0)
      r = ((unsigned int)ins)/12;
else  r = -(((unsigned int)(12-ins))/12);
rem = ins-(r*12);
oct = ((r*12)-4);

      switch(rem>0?rem:0){
      case 0: scl = (param_C)+oct;break;
      case 1: scl = (param_Cis)+oct;break;
      case 2: scl = (param_D)+oct;break;
      case 3: scl = (param_Dis)+oct;break;
      case 4: scl = (param_E)+oct;break;
      case 5: scl = (param_F)+oct;break;
      case 6: scl = (param_Fis)+oct;break;
      case 7: scl = (param_G)+oct;break;
      case 8: scl = (param_Gis)+oct;break;
      case 9: scl = (param_A)+oct;break;
      case 10: scl = (param_Ais)+oct;break;
      case 11: scl = (param_B)+oct;break;          
      default: scl = (param_C)+oct;break;	  
}
outlet_o= param_on?(scl+(param_transpose-12)+inlet_keyafter+inlet_transafter):
(ins+param_transpose+inlet_keyafter+inlet_transafter);
]]></code.krate>
</obj.normal>
</objdefs>


   
  

  