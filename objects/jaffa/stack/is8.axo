<objdefs appVersion="1.0.12">
   <obj.normal id="is8" uuid="3ae46c2e-fe67-4115-8355-9125e0dfc7ca">
      <sDescription>See help patch for usage !!

Advanced version of the SixSteps oscillator:
* it have a built-in Master oscillator for sync sounds.
* 12 steps instead of 6 (use tiar/osc/wf_12Steps on waveform inlet)
* oversampling by 2 (use tiar/conv/O2_to_SR_59 on the output) 


The waveform of the12Steps oscillator is controlled by 12 parameters: the 12 steps levels.
These 12 steps levels must be provided by a tiar/osc/wf_12Steps object connected to the waveform inlet.


This object allows to generate waveforms reminiscent of old pseudo digital synths (such as the RMI and it&apos;s digit harmonics based on Walsh functions).

It is **anti aliased** with an algorithm that is based on both BLEPs and DPWs... i think it is quite original and efficient with this kind of waveforms. 

(the steppy signal goes through a second order leaky &quot;analytic&quot; integrator, when a transient occurs the state variable of the integrator is updated taking account of the subsample time of the transient - much like BLEPs -... at the end the signal is high passed with a second order differentiator - like a second order DPW...)</sDescription>
      <author>T.Rochebois</author>
      <license>LGPL</license>
      <helpPatch>O2_12stepsSync.axh</helpPatch>
      <inlets>
         <int32 name="i1"/>
         <int32 name="i2"/>
         <int32 name="i3"/>
         <int32 name="i4"/>
         <int32 name="i5"/>
         <int32 name="i6"/>
         <int32 name="i7"/>
         <int32 name="i8"/>
      </inlets>
      <outlets>
         <frac32buffer name="o"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[/*
 * You can send/receive up to 16 k-rate signals
 * over one s-rate cable.
 */

outlet_o[0] = inlet_i1;
outlet_o[1] = inlet_i2;
outlet_o[2] = inlet_i3;
outlet_o[3] = inlet_i4;
outlet_o[4] = inlet_i5;
outlet_o[5] = inlet_i6;
outlet_o[6] = inlet_i7;
outlet_o[7] = inlet_i8;]]></code.krate>
   </obj.normal>
</objdefs>