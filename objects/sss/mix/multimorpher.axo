<objdefs appVersion="1.0.10">
   <obj.normal id="multimorpher" uuid="a08747c0-db3b-42d5-befc-0d9bdf2c1661">
      <sDescription>Smooth input rotator. Smoothly rotates the 8 inputs along with their negative counterparts to the 16 outputs
This new version has a quantize-knob to set how many inputs will be selected when the mix goes from low to high, step sets the stepsize, skipping intermediate inputs and start sets the selected input when mix is all the way down (a start-offset for the selector)</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>mux.axh</helpPatch>
      <inlets>
         <frac32 name="i0" description="input 0"/>
         <frac32 name="i1" description="input 1"/>
         <frac32 name="i2" description="input 2"/>
         <frac32 name="i3" description="input 3"/>
         <frac32 name="i4"/>
         <frac32 name="i5"/>
         <frac32 name="i6"/>
         <frac32 name="i7"/>
         <frac32.positive name="mix"/>
      </inlets>
      <outlets>
         <frac32 name="o00" description="output"/>
         <frac32 name="o01"/>
         <frac32 name="o02"/>
         <frac32 name="o03"/>
         <frac32 name="o04"/>
         <frac32 name="o05"/>
         <frac32 name="o06"/>
         <frac32 name="o07"/>
         <frac32 name="o08"/>
         <frac32 name="o09"/>
         <frac32 name="o10"/>
         <frac32 name="o11"/>
         <frac32 name="o12"/>
         <frac32 name="o13"/>
         <frac32 name="o14"/>
         <frac32 name="o15"/>
      </outlets>
      <displays/>
      <params>
         <int32 name="quant01">
            <MinValue i="1"/>
            <MaxValue i="64"/>
         </int32>
         <int32 name="step01">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="start01">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="quant02">
            <MinValue i="1"/>
            <MaxValue i="64"/>
         </int32>
         <int32 name="step02">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="start02">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="quant03">
            <MinValue i="1"/>
            <MaxValue i="64"/>
         </int32>
         <int32 name="step03">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="start03">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="quant04">
            <MinValue i="1"/>
            <MaxValue i="64"/>
         </int32>
         <int32 name="step04">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="start04">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="quant05">
            <MinValue i="1"/>
            <MaxValue i="64"/>
         </int32>
         <int32 name="step05">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="start05">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="quant06">
            <MinValue i="1"/>
            <MaxValue i="64"/>
         </int32>
         <int32 name="step06">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="start06">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="quant07">
            <MinValue i="1"/>
            <MaxValue i="64"/>
         </int32>
         <int32 name="step07">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="start07">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="quant08">
            <MinValue i="1"/>
            <MaxValue i="64"/>
         </int32>
         <int32 name="step08">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="start08">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="quant09">
            <MinValue i="1"/>
            <MaxValue i="64"/>
         </int32>
         <int32 name="step09">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="start09">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="quant10">
            <MinValue i="1"/>
            <MaxValue i="64"/>
         </int32>
         <int32 name="step10">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="start10">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="quant11">
            <MinValue i="1"/>
            <MaxValue i="64"/>
         </int32>
         <int32 name="step11">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="start11">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="quant12">
            <MinValue i="1"/>
            <MaxValue i="64"/>
         </int32>
         <int32 name="step12">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="start12">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="quant13">
            <MinValue i="1"/>
            <MaxValue i="64"/>
         </int32>
         <int32 name="step13">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="start13">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="quant14">
            <MinValue i="1"/>
            <MaxValue i="64"/>
         </int32>
         <int32 name="step14">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="start14">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="quant15">
            <MinValue i="1"/>
            <MaxValue i="64"/>
         </int32>
         <int32 name="step15">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="start15">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="quant16">
            <MinValue i="1"/>
            <MaxValue i="64"/>
         </int32>
         <int32 name="step16">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
         <int32 name="start16">
            <MinValue i="0"/>
            <MaxValue i="15"/>
         </int32>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t mix[16];
int32_t MIX[17];
int32_t P[32];
int32_t input[16];
int32_t quant[16];
int32_t start[16];
int32_t step[16];
int32_t F;
int i;

//bound mix input
int32_t MX(int32_t T)
{
	T=T>0?T:-T;
	T=T&((1<<28)-1);
	F=T>(1<<27)?(1<<28)-T:T;
}

//mix
int32_t inputmix(int32_t inst,int32_t WaveA,int32_t WaveB,int32_t Mix)
{
	mix[inst]=___SMMUL(((1<<27)-Mix)<<3,WaveA<<2)+___SMMUL(Mix<<3,WaveB<<2);
}


]]></code.declaration>
      <code.krate><![CDATA[input[0]=inlet_i0;
input[1]=inlet_i1;
input[2]=inlet_i2;
input[3]=inlet_i3;
input[4]=inlet_i4;
input[5]=inlet_i5;
input[6]=inlet_i6;
input[7]=inlet_i7;

for(i=0;i<8;i++){
input[i+8]=-input[i];}

quant[0]=param_quant01;
quant[1]=param_quant02;
quant[2]=param_quant03;
quant[3]=param_quant04;
quant[4]=param_quant05;
quant[5]=param_quant06;
quant[6]=param_quant07;
quant[7]=param_quant08;
quant[8]=param_quant09;
quant[9]=param_quant10;
quant[10]=param_quant11;
quant[11]=param_quant12;
quant[12]=param_quant13;
quant[13]=param_quant14;
quant[14]=param_quant15;
quant[15]=param_quant16;
step[0]=param_step01;
step[1]=param_step02;
step[2]=param_step03;
step[3]=param_step04;
step[4]=param_step05;
step[5]=param_step06;
step[6]=param_step07;
step[7]=param_step08;
step[8]=param_step09;
step[9]=param_step10;
step[10]=param_step11;
step[11]=param_step12;
step[12]=param_step13;
step[13]=param_step14;
step[14]=param_step15;
step[15]=param_step16;
start[0]=param_start01;
start[1]=param_start02;
start[2]=param_start03;
start[3]=param_start04;
start[4]=param_start05;
start[5]=param_start06;
start[6]=param_start07;
start[7]=param_start08;
start[8]=param_start09;
start[9]=param_start10;
start[10]=param_start11;
start[11]=param_start12;;
start[12]=param_start13;
start[13]=param_start14;
start[14]=param_start15;
start[15]=param_start16;
MX(inlet_mix);
MIX[0]=F;

for(i=0;i<16;i++){
P[i]=(MIX[0]*quant[i])>>27;
MIX[i+1]=(MIX[0]-(P[i]<<27)/quant[i])*quant[i];
P[i]=P[i]*step[i];
P[i+16]=P[i]+step[i]+start[i]; 
P[i]+=start[i];
inputmix(i,input[P[i]&15],input[P[i+16]&15],MIX[i+1]);}

outlet_o00=mix[0];
outlet_o01=mix[1];
outlet_o02=mix[2];
outlet_o03=mix[3];
outlet_o04=mix[4];
outlet_o05=mix[5];
outlet_o06=mix[6];
outlet_o07=mix[7];
outlet_o08=mix[8];
outlet_o09=mix[9];
outlet_o10=mix[10];
outlet_o11=mix[11];
outlet_o12=mix[12];
outlet_o13=mix[13];
outlet_o14=mix[14];
outlet_o15=mix[15];]]></code.krate>
   </obj.normal>
</objdefs>