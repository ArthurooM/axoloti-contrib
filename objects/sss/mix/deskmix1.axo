<objdefs appVersion="1.0.10">
   <obj.normal id="deskmix1" uuid="a597e192-3883-44e9-948f-09c1f27f981d">
      <sDescription>8 input s-rate mixer, square gain scale
controlled with the deskCtrl1 module (load as many as the deskCtrl1 modules as that you need channels!)</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <inlets>
         <frac32buffer name="bus_in" description="input with unity gain"/>
         <frac32buffer name="1"/>
         <frac32buffer name="2"/>
         <frac32buffer name="3"/>
         <frac32buffer name="4"/>
         <frac32buffer name="5"/>
         <frac32buffer name="6"/>
         <frac32buffer name="7"/>
         <frac32buffer name="8"/>
      </inlets>
      <outlets>
         <frac32buffer name="out" description="mix out"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="volume" noLabel="true"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t gain[32];
int solo[32];
int32_t in[32];
int Solo;
int mod;
int i;]]></code.declaration>
      <code.krate><![CDATA[int Solo=0;
for(i=0;i<mod;i++){
Solo+=solo[i];
Solo=Solo>0?1:0;
}
]]></code.krate>
      <code.srate><![CDATA[in[0]=inlet_1;
in[1]=inlet_2;
in[2]=inlet_3;
in[3]=inlet_4;
in[4]=inlet_5;
in[5]=inlet_6;
in[6]=inlet_7;
in[7]=inlet_8;
int32_t accum=0;
for(i=0;i<mod;i++){accum = ___SMMLA(in[i],((Solo>0)&(!solo[i]))?0:gain[i],accum);}
outlet_out=  ___SMMUL(__SSAT(inlet_bus__in + (accum<<1),28)<<3,param_volume<<2);
]]></code.srate>
   </obj.normal>
</objdefs>