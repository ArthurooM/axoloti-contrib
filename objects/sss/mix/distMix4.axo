<objdefs appVersion="1.0.12">
   <obj.normal id="distMix4" uuid="31e7fc55-0de9-4ce6-a52b-3482258648f7">
      <sDescription>4 input s-rate mixer, square gain scale with a nasty distortion
Pairs very well with the sss/edrum/DR5 module!</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <inlets>
         <frac32buffer name="in1" description="input 1"/>
         <frac32buffer name="in2" description="input 2"/>
         <frac32buffer name="in3" description="input 3"/>
         <frac32buffer name="in4" description="input 4"/>
      </inlets>
      <outlets>
         <frac32buffer name="out" description="mix out"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map.squaregain name="gain1">
            <DefaultValue v="32.0"/>
         </frac32.u.map.squaregain>
         <frac32.u.map.squaregain name="gain2">
            <DefaultValue v="32.0"/>
         </frac32.u.map.squaregain>
         <frac32.u.map.squaregain name="gain3">
            <DefaultValue v="32.0"/>
         </frac32.u.map.squaregain>
         <frac32.u.map.squaregain name="gain4">
            <DefaultValue v="32.0"/>
         </frac32.u.map.squaregain>
         <frac32.s.map.pitch name="center"/>
         <frac32.s.map name="modC"/>
         <frac32.s.map name="shelf"/>
         <frac32.s.map name="modS"/>
         <bool32.tgl name="absD1"/>
         <bool32.tgl name="absD2"/>
         <bool32.tgl name="absC"/>
         <bool32.tgl name="absS"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t SOFT(int32_t in){
	int32_t ts = __SSAT(in,28);
int32_t tsq31 = ts<<3;
int32_t tsq31p3 = ___SMMUL(tsq31,___SMMUL(tsq31,tsq31));
return ts = ts + (ts>>1) - (tsq31p3);
}
int32_t lp;]]></code.declaration>
      <code.srate><![CDATA[int32_t a1=___SMMUL(__SSAT(inlet_in1,28)<<3,__USAT(param_gain1,29));
a1+=___SMMUL(__SSAT(inlet_in2,28)<<3,__USAT(param_gain2,29));
a1+=___SMMUL(__SSAT(inlet_in3,28)<<3,__USAT(param_gain3,29));
a1+=___SMMUL(__SSAT(inlet_in4,28)<<3,__USAT(param_gain4,29));
   int32_t in1 = SOFT(___SMMUL(__SSAT(inlet_in1,28)<<3,param_gain1));
   int32_t in2 = SOFT(___SMMUL(__SSAT(inlet_in2,28)<<3,param_gain2));
   int32_t in3 = SOFT(___SMMUL(__SSAT(inlet_in3,28)<<3,param_gain3));
   int32_t in4 = SOFT(___SMMUL(__SSAT(inlet_in4,28)<<3,param_gain4));
   in1+=in2+in3+in4-a1;
if(param_absD2>0){
	in1=in1>0?in1:-in1;
}
   int32_t frq;
   int32_t m1=a1;
   if(param_absC>0){
   	m1=m1>0?m1:-m1;
   }
MTOF(param_center+((___SMMUL(param_modC,m1)<<6)),frq)

   lp=___SMMLA(in1-lp<<1,frq,lp);
   in2=(lp<<1)-(in1);
   if(param_absD1>0){
   	in2=in2>0?in2:-in2;
   }
   int32_t m2=a1;
   if(param_absS>0){
   	m2=m2>0?m2:-m2;
   }
   int32_t accum=SOFT(a1+in1+(___SMMUL(param_shelf+(___SMMUL(param_modS,m2)<<5),in2)<<6));
   
   outlet_out=  accum;]]></code.srate>
   </obj.normal>
</objdefs>