<objdefs appVersion="1.0.10">
   <obj.normal id="4x8bit_del_write" uuid="a08bbd85-f781-4f08-8c7d-4bdebf9207e2">
      <sDescription>4channel 8bit delayline.
Incoming audio gets filtered and then coded into 8bit, shifted, summed and recorded to the table.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>delay.axh</helpPatch>
      <inlets>
         <frac32buffer name="1"/>
         <frac32buffer name="2"/>
         <frac32buffer name="3"/>
         <frac32buffer name="4"/>
      </inlets>
      <outlets/>
      <displays/>
      <params/>
      <attribs>
         <combo name="size">
            <MenuEntries>
               <string>256 (5.33ms)</string>
               <string>512 (10.66ms)</string>
               <string>1024 (21.33ms)</string>
               <string>2048 (42.66ms)</string>
               <string>4096 (85.33ms)</string>
               <string>8192 (170ms)</string>
               <string>16384 (341ms)</string>
               <string>32768 (682ms)</string>
               <string>65536 (1.36s)</string>
               <string>131072 (2.73s)</string>
               <string>262144 (5.46s)</string>
               <string>524288 (10.9s)</string>
               <string>1048576 (21.8s)</string>
               <string>2097152 (43.7s)</string>
            </MenuEntries>
            <CEntries>
               <string>8</string>
               <string>9</string>
               <string>10</string>
               <string>11</string>
               <string>12</string>
               <string>13</string>
               <string>14</string>
               <string>15</string>
               <string>16</string>
               <string>17</string>
               <string>18</string>
               <string>19</string>
               <string>20</string>
               <string>21</string>
            </CEntries>
         </combo>
      </attribs>
      <code.declaration><![CDATA[static const uint32_t LENGTHPOW = (attr_size);
static const uint32_t LENGTH = (1<<attr_size);
static const uint32_t LENGTHMASK = ((1<<attr_size)-1);
int64_t *array;
uint32_t writepos;
int32_t val1;
int32_t val2;
int32_t val3;
int32_t val4;]]></code.declaration>
      <code.init><![CDATA[static int64_t _array[attr_poly][1<<attr_size]  __attribute__ ((section (".sdram")));
array = &_array[parent->polyIndex][0];
   int i;
   writepos = 0;
   for(i=0;i<LENGTH;i++) array[i] = 0;
val1=0;
val2=0;
val3=0;
val4=0;]]></code.init>
      <code.srate><![CDATA[

val1=val1+(((inlet_1<<4)-val1)>>2);
val2=val2+(((inlet_2<<4)-val2)>>2);
val3=val3+(((inlet_3<<4)-val3)>>2);
val4=val4+(((inlet_4<<4)-val4)>>2);
int8_t in1=val1>>24;
int8_t in2=(val2>>24);
int8_t in3=(val3>>24);
int8_t in4=(val4>>24);
int32_t an1=in1;
int32_t an2=in2;
int32_t an3=in3;
int32_t an4=in4;
an2=an2<<8;
an3=an3<<16;
an4=an4<<24;


int32_t sum=an1+an2+an3+an4;  
  
  writepos = (writepos + 1)&LENGTHMASK;
  array[writepos] = sum;
]]></code.srate>
   </obj.normal>
</objdefs>