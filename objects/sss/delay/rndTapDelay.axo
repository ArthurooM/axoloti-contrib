<objdefs appVersion="1.0.10">
   <obj.normal id="rndTapDelay" uuid="678ac7a6-6aca-4897-b0bb-91a8856601f4">
      <sDescription>random multi-tap delay/early reflections with controllable tap-amount.
length sets the amount of taps.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>delay.axh</helpPatch>
      <inlets/>
      <outlets>
         <frac32buffer name="out" description="wave"/>
      </outlets>
      <displays/>
      <params>
         <int32 name="length">
            <MinValue i="1"/>
            <MaxValue i="16"/>
         </int32>
         <bool32.mom name="random"/>
      </params>
      <attribs>
         <objref name="delayname"/>
      </attribs>
      <code.declaration><![CDATA[int32_t _val[16];
int32_t _vol[16];
int ntrig;
int8_t lng;
int i;
uint32_t _delay[16];
int32_t sum;]]></code.declaration>
      <code.init><![CDATA[for(i=0;i<16;i++) _val[i] = (GenerateRandomNumber())>>4;{}
for(i=0;i<16;i++) _vol[i] = (GenerateRandomNumber())>>4;{}
ntrig=0;]]></code.init>
      <code.krate><![CDATA[lng=param_length;
if((param_random>0)&&(!(ntrig)))
{
for(i=0;i<lng;i++) _val[i] = ((GenerateRandomNumber())>>5)+(1<<26); _vol[i] = ((GenerateRandomNumber())>>4);
{}
ntrig=1;
}
else if(!(param_random>0))
{ntrig=0;}
   for(i=0;i<lng;i++) 
   {_delay[i] = attr_delayname.writepos - (__USAT(_val[i],27)>>(27-attr_delayname.LENGTHPOW)) - BUFSIZE;
   }
]]></code.krate>
      <code.srate><![CDATA[  sum=0;
  for(i=0;i<lng;i++) 
  sum+= ___SMMUL((attr_delayname.array[(_delay[i]++) & attr_delayname.LENGTHMASK]<<14)<<3,_vol[i]<<2);
  outlet_out=sum/((1+lng)/2);
]]></code.srate>
   </obj.normal>
</objdefs>