<objdefs appVersion="1.0.12">
   <obj.normal id="stereoread" uuid="796a1f62-a5b4-4e9c-9f7c-b71ee512d2ec">
      <sDescription>stereo delay read, non-interpolated.
Use with &quot;stereowrite&quot; module and reference to the name of that instance.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>delay.axh</helpPatch>
      <inlets>
         <frac32 name="time" description="delay time (fraction of total delayline size)"/>
         <frac32 name="diff"/>
      </inlets>
      <outlets>
         <frac32buffer name="out1" description="wave"/>
         <frac32buffer name="out2"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="time" noLabel="true"/>
         <frac32.s.map name="diff"/>
      </params>
      <attribs>
         <objref name="delayname"/>
      </attribs>
      <code.declaration><![CDATA[int32_t vi16=(1<<16)-1;
uint16_t v15=1<<15;]]></code.declaration>
      <code.krate><![CDATA[int32_t t1 = __USAT(param_time + inlet_time,27);
int32_t t2 = __SSAT(param_diff + inlet_diff,28)<<3;
int32_t t3 = __USAT(t1-___SMMUL(t1<<2,t2),27);
int32_t t4 = __USAT(t1+___SMMUL(t1<<2,t2),27);
uint32_t delay1 = attr_delayname.writepos - (t3>>(27-attr_delayname.LENGTHPOW)) - BUFSIZE;
uint32_t delay2 = attr_delayname.writepos - (t4>>(27-attr_delayname.LENGTHPOW)) - BUFSIZE;]]></code.krate>
      <code.srate><![CDATA[outlet_out1=((attr_delayname.array[(delay1++) & attr_delayname.LENGTHMASK]&vi16)-v15)<<14;
outlet_out2=(((attr_delayname.array[(delay2++) & attr_delayname.LENGTHMASK]>>16)&vi16)-v15)<<14;]]></code.srate>
   </obj.normal>
</objdefs>