<objdefs appVersion="1.0.10">
   <obj.normal id="simpleTable" uuid="5c5bdf5c-e12b-49bd-b135-07b25c52f350">
      <sDescription>simple wavetable oscillator
loads wavetables created with the &quot;TheCreator&quot; module.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>osc.axh</helpPatch>
      <inlets>
         <frac32.bipolar name="pitch" description="pitch"/>
         <frac32buffer name="linFM" description="frequency"/>
         <frac32buffer name="expFM"/>
         <frac32buffer name="phase" description="phase"/>
         <frac32buffer name="sync"/>
         <int32 name="waveform"/>
         <frac32 name="mixSine"/>
      </inlets>
      <outlets>
         <frac32buffer.bipolar name="wave" description="sine wave"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.pitch name="pitch" noLabel="true"/>
         <int32 name="octSine">
            <MinValue i="0"/>
            <MaxValue i="7"/>
         </int32>
         <frac32.u.map name="mixSine"/>
         <int32 name="waveform">
            <MinValue i="0"/>
            <MaxValue i="1023"/>
         </int32>
         <frac32.s.map.pitch name="LP"/>
      </params>
      <attribs>
         <objref name="table"/>
      </attribs>
      <code.declaration><![CDATA[uint32_t Phase;
int32_t mix1;
int32_t mix2;
int32_t mix3;
int32_t MIX1;
int32_t MIX2;
int32_t MIX3;
int32_t read1;
int32_t read2;
int32_t read3;
int32_t read4;
int i;
int Strig;
int32_t wave;
int32_t smooth;
int32_t mixSine;]]></code.declaration>
      <code.init><![CDATA[
Phase = 0;]]></code.init>
      <code.krate><![CDATA[
int16_t preset1=(param_waveform+inlet_waveform)&1023;
int32_t f;
MTOF(param_LP,f)]]></code.krate>
      <code.srate><![CDATA[   int32_t freq;
   MTOFEXTENDED(param_pitch + inlet_pitch+inlet_expFM,freq);
int32_t Freq=freq + ___SMMUL(inlet_linFM<<3,freq<<3);
if((inlet_sync>0)&&!Strig){
Phase=0;
Strig=1;}
else if (inlet_sync<1){Strig=0;}

mixSine=mixSine+(((param_mixSine+inlet_mixSine)-mixSine)>>8);

Phase+= Freq;
int32_t r;
int32_t p2 = Phase+inlet_phase;
SINE2TINTERP((p2)<<param_octSine,r)
read1=attr_table.array[(((p2>>22)&1023)+(preset1<<10))&attr_table.LENGTHMASK];
wave=(___SMMUL(mixSine<<3,read1<<2)+___SMMUL(r,(1<<27)-mixSine));
smooth=__SMMLA((wave-smooth)<<1,f,smooth);
outlet_wave=smooth;]]></code.srate>
   </obj.normal>
</objdefs>