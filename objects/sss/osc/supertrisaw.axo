<objdefs appVersion="1.0.12">
   <obj.normal id="supertrisaw" uuid="31e8d693-1278-4188-9a99-372253b95d5f">
      <sDescription>super triangle/saw-morpher
up to 8 voices</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <inlets>
         <frac32 name="pitch"/>
         <frac32.bipolar name="FMW"/>
         <frac32buffer name="freq"/>
         <frac32buffer name="phase"/>
         <frac32.positive name="slope"/>
         <bool32 name="active"/>
      </inlets>
      <outlets>
         <frac32buffer name="out"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.pitch name="pitch"/>
         <frac32.s.map name="FM"/>
         <frac32.u.map name="slope"/>
         <int32 name="voices">
            <MinValue i="1"/>
            <MaxValue i="8"/>
         </int32>
         <frac32.s.map name="detune"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[uint32_t phase[8];
uint32_t Phase[8];
float32_t slope1n[8];
uint64_t slope1d[8];
uint64_t slope1e[8];
int32_t out[8];
int32_t Slope;
int32_t Fmw;
int32_t FMW;
int i;
int32_t freq;
int32_t fmw;
int32_t slape;]]></code.declaration>
      <code.krate><![CDATA[
if(inlet_active>0){


MTOF(param_pitch+inlet_pitch,freq)
slape=__SSAT(param_slope+inlet_slope,28);
fmw=__SSAT(param_FM+inlet_FMW,29);
}]]></code.krate>
      <code.srate><![CDATA[if(inlet_active>0){
int32_t sum=0;
Slope=Slope+((slape-Slope)>>6);
Fmw=Fmw+((fmw-Fmw)>>6);
FMW=___SMMUL(inlet_freq<<4,(Fmw)<<2);

for(i=0;i<param_voices;i++)
{
phase[i]+=freq*(1+i)+___SMMUL(FMW<<4,(freq*(1+i))<<4)+i*(param_detune>>6);
Phase[i]=phase[i]+(inlet_phase<<5);
slope1d[i]=(1<<27)-Slope;
if(Phase[i]<(Slope<<5))
{slope1n[i]=((float)((1<<31)))/((float)(Slope));
out[i]=((Phase[i]>>5)*slope1n[i])+(1<<30);
}
else
{slope1n[i]=((float)((1<<31)))/((float)(slope1d[i]));
out[i]=-(((Phase[i]-(Slope<<5))>>5)*slope1n[i])-(1<<30);
}
sum+=(out[i]>>4)/(1+i/2);
}
outlet_out=sum>>1;
}
else{outlet_out=0;}]]></code.srate>
   </obj.normal>
</objdefs>