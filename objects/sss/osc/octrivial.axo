<objdefs appVersion="1.0.11">
   <obj.normal id="octrivial" uuid="fbf31485-c39d-4323-a9ef-7096f38f5c39">
      <sDescription>sine oscillator with controls to create &quot;weird&quot; scalings.
&quot;octaving&quot; sets the octave-size. Normal would be 2 (octave is twice as high as the precious octave). Setting it to 3 will force each next &quot;octave&quot; to be 3 times higher.

&quot;steps&quot; sets the amount of steps/notes each octave will have.

notes follow equal temperament based on the settings set by these controls.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <inlets>
         <int32 name="pitch"/>
      </inlets>
      <outlets>
         <frac32buffer name="out"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map name="pitch"/>
         <frac32.s.map.pitch name="root"/>
         <int32 name="octaving">
            <MinValue i="2"/>
            <MaxValue i="10"/>
         </int32>
         <int32 name="steps">
            <MinValue i="5"/>
            <MaxValue i="61"/>
         </int32>
      </params>
      <attribs/>
      <code.declaration><![CDATA[uint32_t phase;]]></code.declaration>
      <code.krate><![CDATA[int32_t freq;
MTOFEXTENDED(param_root,freq)

float32_t pitch=param_pitch+(inlet_pitch<<21);
pitch=powf(param_octaving,pitch/(param_steps<<21));
freq=pitch*freq;]]></code.krate>
      <code.srate><![CDATA[phase+=freq;
int32_t sine;
SINE2TINTERP(phase,sine)
outlet_out=sine>>5;]]></code.srate>
   </obj.normal>
</objdefs>