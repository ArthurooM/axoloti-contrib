<objdefs appVersion="1.0.11">
   <obj.normal id="subSine" uuid="70fe7740-2d08-464f-a418-519af310021b">
      <sDescription>sub-sine wave oscillator
Generates 2 sines that can be overdriven into square-waves.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>osc.axh</helpPatch>
      <inlets>
         <frac32.bipolar name="pitch" description="pitch"/>
         <frac32buffer name="freq" description="frequency"/>
         <frac32 name="phase"/>
      </inlets>
      <outlets>
         <frac32buffer.bipolar name="wave" description="sine wave"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.pitch name="pitch" noLabel="true"/>
         <frac32.u.map name="drive1"/>
         <frac32.u.map name="drive2"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[uint32_t Phase;]]></code.declaration>
      <code.init><![CDATA[Phase = 0;]]></code.init>
      <code.krate><![CDATA[   int32_t freq;
   MTOFEXTENDED(param_pitch + inlet_pitch,freq);
]]></code.krate>
      <code.srate><![CDATA[Phase += freq + inlet_freq;
int32_t r;
int32_t p2 = Phase + (inlet_phase<<4);
SINE2TINTERP(Phase,r)
r=(r>>5);
int32_t ts = __SSAT(r+___SMMUL(r<<3,param_drive1<<3),28);
int32_t tsq31 = ts<<3;
int32_t tsq31p3 = ___SMMUL(tsq31,___SMMUL(tsq31,tsq31));
r= __SSAT(ts + (ts>>1) - (tsq31p3),28);
ts = __SSAT(r+___SMMUL(r<<3,param_drive1<<3),28);
tsq31 = ts<<3;
tsq31p3 = ___SMMUL(tsq31,___SMMUL(tsq31,tsq31));
int32_t wave;
outlet_wave = __SSAT(ts + (ts>>1) - (tsq31p3)>>2,26);

SINE2TINTERP(p2<<1,r)
r=(r>>5);
int32_t Ts = __SSAT(r+___SMMUL(r<<3,param_drive2<<3),28);
int32_t Tsq31 = Ts<<3;
int32_t Tsq31p3 = ___SMMUL(Tsq31,___SMMUL(Tsq31,Tsq31));
r= __SSAT(Ts + (Ts>>1) - (Tsq31p3),28);
Ts = __SSAT(r+___SMMUL(r<<3,param_drive2<<3),28);
Tsq31 = Ts<<3;
Tsq31p3 = ___SMMUL(Tsq31,___SMMUL(Tsq31,Tsq31));

outlet_wave += __SSAT(Ts + (Ts>>1) - (Tsq31p3)>>2,26);]]></code.srate>
   </obj.normal>
</objdefs>