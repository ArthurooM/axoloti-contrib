<objdefs appVersion="1.0.12">
   <obj.normal id="pads" uuid="f4e451cf-bace-4587-a4f8-0da69d1650cb">
      <sDescription>Receives Midi messages from 4 quneo midi controller pads (3 cc&apos;s per pad-&gt;pressure,X,Y)
Also generates a slewed gate/mix when pad is pressed.
(my own row start CC&apos;s: 23,35,47,59)</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>midi_in.axh</helpPatch>
      <inlets>
         <frac32 name="rate" description="sets gate/mix slew rate"/>
      </inlets>
      <outlets>
         <frac32 name="1g" description="slewed gate/mix output"/>
         <frac32 name="1p" description="pressure output"/>
         <frac32 name="1x" description="x position output"/>
         <frac32 name="1y" description="y position output"/>
         <frac32 name="2g" description="slewed gate/mix output"/>
         <frac32 name="2p" description="pressure output"/>
         <frac32 name="2x" description="x position output"/>
         <frac32 name="2y" description="y position output"/>
         <frac32 name="3g" description="slewed gate/mix output"/>
         <frac32 name="3p" description="pressure output"/>
         <frac32 name="3x" description="x position output"/>
         <frac32 name="3y" description="y position output"/>
         <frac32 name="4g" description="slewed gate/mix output"/>
         <frac32 name="4p" description="pressure output"/>
         <frac32 name="4x" description="x position output"/>
         <frac32 name="4y" description="y position output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <spinner name="ch" description="sets midi channel" MinValue="1" MaxValue="16" DefaultValue="3"/>
         <spinner name="cc" description="sets first cc (from here, next 12 cc&apos;s will be used: 0,3,6,9=pressure. 1,4,7,10=X.  2,5,8,11=Y.)" MinValue="0" MaxValue="115" DefaultValue="23"/>
      </attribs>
      <code.declaration><![CDATA[uint8_t value[12];
int32_t gate[4];
int32_t v27=1<<27;]]></code.declaration>
      <code.krate><![CDATA[int32_t rate;
MTOF(inlet_rate,rate)
rate=rate>>3;
for(int i=0;i<4;i++){
	gate[i]=__USAT((value[i*3]>0?rate:-rate)+gate[i],27);
}

outlet_1g=gate[0];
outlet_1p=value[0]<<20;
outlet_1x=value[1]<<20;
outlet_1y=value[2]<<20;

outlet_2g=gate[1];
outlet_2p=value[3]<<20;
outlet_2x=value[4]<<20;
outlet_2y=value[5]<<20;

outlet_3g=gate[2];
outlet_3p=value[6]<<20;
outlet_3x=value[7]<<20;
outlet_3y=value[8]<<20;

outlet_4g=gate[3];
outlet_4p=value[9]<<20;
outlet_4x=value[10]<<20;
outlet_4y=value[11]<<20;]]></code.krate>
      <code.midihandler><![CDATA[if ((status == attr_ch-1 + MIDI_CONTROL_CHANGE)&&(data1 >= attr_cc)&&(data1<(attr_cc+12))) { value[data1-attr_cc] = data2; }]]></code.midihandler>
   </obj.normal>
</objdefs>