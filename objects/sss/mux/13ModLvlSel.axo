<objdefs appVersion="1.0.10">
   <obj.normal id="13ModLvlSel" uuid="143b7784-4007-45a1-acba-b19ffef1406f">
      <sDescription>select from 13 incoming modulators for the 8 mod outputs and set their level</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>mux.axh</helpPatch>
      <inlets>
         <frac32 name="i0" description="input 0"/>
         <frac32 name="i1" description="input 1"/>
         <frac32 name="i2" description="input 2"/>
         <frac32 name="i3" description="input 3"/>
         <frac32 name="i4" description="input 4"/>
         <frac32 name="i5" description="input 5"/>
         <frac32 name="i6" description="input 6"/>
         <frac32 name="i7"/>
         <frac32 name="i8"/>
         <frac32 name="i9"/>
         <frac32 name="i10"/>
         <frac32 name="i11"/>
         <frac32 name="i12"/>
         <int32.positive name="s1" description="select"/>
         <frac32.bipolar name="A1"/>
         <int32.positive name="s2"/>
         <frac32.bipolar name="A2"/>
         <int32.positive name="s3"/>
         <frac32.bipolar name="A3"/>
         <int32.positive name="s4"/>
         <frac32.bipolar name="A4"/>
         <int32.positive name="s5"/>
         <frac32.bipolar name="A5"/>
         <int32.positive name="s6"/>
         <frac32.bipolar name="A6"/>
         <int32.positive name="s7"/>
         <frac32.bipolar name="A7"/>
         <int32 name="s8"/>
         <frac32.bipolar name="A8"/>
      </inlets>
      <outlets>
         <frac32 name="o1" description="output"/>
         <frac32 name="o2"/>
         <frac32 name="o3"/>
         <frac32 name="o4"/>
         <frac32 name="o5"/>
         <frac32 name="o6"/>
         <frac32 name="o7"/>
         <frac32 name="o8"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.krate><![CDATA[   int32_t a;
   switch(inlet_s1>0?inlet_s1:0){
      case 0: a= inlet_i0;break;
      case 1: a= inlet_i1;break;
      case 2: a= inlet_i2;break;
      case 3: a= inlet_i3;break;
      case 4: a= inlet_i4;break;
      case 5: a= inlet_i5;break;
      case 6: a= inlet_i6;break;
      case 7: a= inlet_i7;break;
      case 8: a= inlet_i8;break;
      case 9: a= inlet_i9;break;
      case 10: a= inlet_i10;break;
      case 11: a= inlet_i11;break;
      case 12: a= inlet_i12;break;
      default: a= inlet_i12;break;
      
}
outlet_o1= ___SMMUL(a<<3,inlet_A1<<2);

   switch(inlet_s2>0?inlet_s2:0){
      case 0: a= inlet_i0;break;
      case 1: a= inlet_i1;break;
      case 2: a= inlet_i2;break;
      case 3: a= inlet_i3;break;
      case 4: a= inlet_i4;break;
      case 5: a= inlet_i5;break;
      case 6: a= inlet_i6;break;
      case 7: a= inlet_i7;break;
      case 8: a= inlet_i8;break;
      case 9: a= inlet_i9;break;
      case 10: a= inlet_i10;break;
      case 11: a= inlet_i11;break;
      case 12: a= inlet_i12;break;
      default: a= inlet_i12;break;
      
}
outlet_o2= ___SMMUL(a<<3,inlet_A2<<2);

   switch(inlet_s3>0?inlet_s3:0){
      case 0: a= inlet_i0;break;
      case 1: a= inlet_i1;break;
      case 2: a= inlet_i2;break;
      case 3: a= inlet_i3;break;
      case 4: a= inlet_i4;break;
      case 5: a= inlet_i5;break;
      case 6: a= inlet_i6;break;
      case 7: a= inlet_i7;break;
      case 8: a= inlet_i8;break;
      case 9: a= inlet_i9;break;
      case 10: a= inlet_i10;break;
      case 11: a= inlet_i11;break;
      case 12: a= inlet_i12;break;
      default: a= inlet_i12;break;
      
}
outlet_o3= ___SMMUL(a<<3,inlet_A3<<2);

   switch(inlet_s4>0?inlet_s4:0){
      case 0: a= inlet_i0;break;
      case 1: a= inlet_i1;break;
      case 2: a= inlet_i2;break;
      case 3: a= inlet_i3;break;
      case 4: a= inlet_i4;break;
      case 5: a= inlet_i5;break;
      case 6: a= inlet_i6;break;
      case 7: a= inlet_i7;break;
      case 8: a= inlet_i8;break;
      case 9: a= inlet_i9;break;
      case 10: a= inlet_i10;break;
      case 11: a= inlet_i11;break;
      case 12: a= inlet_i12;break;
      default: a= inlet_i12;break;
      
}
outlet_o4= ___SMMUL(a<<3,inlet_A4<<2);

   switch(inlet_s5>0?inlet_s5:0){
      case 0: a= inlet_i0;break;
      case 1: a= inlet_i1;break;
      case 2: a= inlet_i2;break;
      case 3: a= inlet_i3;break;
      case 4: a= inlet_i4;break;
      case 5: a= inlet_i5;break;
      case 6: a= inlet_i6;break;
      case 7: a= inlet_i7;break;
      case 8: a= inlet_i8;break;
      case 9: a= inlet_i9;break;
      case 10: a= inlet_i10;break;
      case 11: a= inlet_i11;break;
      case 12: a= inlet_i12;break;
      default: a= inlet_i12;break;
      
}
outlet_o5= ___SMMUL(a<<3,inlet_A5<<2);

   switch(inlet_s6>0?inlet_s6:0){
      case 0: a= inlet_i0;break;
      case 1: a= inlet_i1;break;
      case 2: a= inlet_i2;break;
      case 3: a= inlet_i3;break;
      case 4: a= inlet_i4;break;
      case 5: a= inlet_i5;break;
      case 6: a= inlet_i6;break;
      case 7: a= inlet_i7;break;
      case 8: a= inlet_i8;break;
      case 9: a= inlet_i9;break;
      case 10: a= inlet_i10;break;
      case 11: a= inlet_i11;break;
      case 12: a= inlet_i12;break;
      default: a= inlet_i12;break;
      
}
outlet_o6= ___SMMUL(a<<3,inlet_A6<<2);

   switch(inlet_s7>0?inlet_s7:0){
      case 0: a= inlet_i0;break;
      case 1: a= inlet_i1;break;
      case 2: a= inlet_i2;break;
      case 3: a= inlet_i3;break;
      case 4: a= inlet_i4;break;
      case 5: a= inlet_i5;break;
      case 6: a= inlet_i6;break;
      case 7: a= inlet_i7;break;
      case 8: a= inlet_i8;break;
      case 9: a= inlet_i9;break;
      case 10: a= inlet_i10;break;
      case 11: a= inlet_i11;break;
      case 12: a= inlet_i12;break;
      default: a= inlet_i12;break;
      
}
outlet_o7= ___SMMUL(a<<3,inlet_A7<<2);

   switch(inlet_s8>0?inlet_s8:0){
      case 0: a= inlet_i0;break;
      case 1: a= inlet_i1;break;
      case 2: a= inlet_i2;break;
      case 3: a= inlet_i3;break;
      case 4: a= inlet_i4;break;
      case 5: a= inlet_i5;break;
      case 6: a= inlet_i6;break;
      case 7: a= inlet_i7;break;
      case 8: a= inlet_i8;break;
      case 9: a= inlet_i9;break;
      case 10: a= inlet_i10;break;
      case 11: a= inlet_i11;break;
      case 12: a= inlet_i12;break;
      default: a= inlet_i12;break;
      
}
outlet_o8= ___SMMUL(a<<3,inlet_A8<<2);]]></code.krate>
   </obj.normal>
</objdefs>