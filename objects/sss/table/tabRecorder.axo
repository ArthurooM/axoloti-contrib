<objdefs appVersion="1.0.10">
   <obj.normal id="tabRecorder" uuid="2256bad5-18d3-4b87-8bf8-7412517805ad">
      <sDescription>records value input (to be used with &quot;singleTouch&quot; module to record aftertouch)
The recorded automation won&apos;t be reset to 0 when axoloti is restarted. 

set the desired maximum table size with the &quot;size&quot; selector attribute.

For the &quot;size&quot; input:
Use a &quot;ratioVCAI&quot; module to set a desired ratio to host tempo, using the &quot;clock2timing&quot; module to provide the amount of samples (ksamples output).

A gate high at the &quot;delete&quot; input, WHILE rec is high, will set the currently recorded value to 0.

A gate high at the &quot;delALL&quot; input, WHILE rec is high, will set all position in the table to 0.

A gate high at the &quot;reset&quot; input will reset the internal readout position to 0.

outputs:
&quot;gate&quot; goes high when recorded readout value is above zero.
&quot;mix&quot; outputs a smoothed gate high to use with crossfaders
&quot;out&quot; outputs the recorded readout value</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>table.axh</helpPatch>
      <inlets>
         <bool32 name="rec"/>
         <frac32 name="val"/>
         <bool32 name="delete"/>
         <bool32 name="delALL"/>
         <int32 name="size"/>
         <bool32 name="reset"/>
      </inlets>
      <outlets>
         <bool32 name="gate"/>
         <frac32 name="mix"/>
         <frac32 name="out"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <combo name="size">
            <MenuEntries>
               <string>2</string>
               <string>4</string>
               <string>8</string>
               <string>16</string>
               <string>32</string>
               <string>64</string>
               <string>128</string>
               <string>256</string>
               <string>512</string>
               <string>1024</string>
               <string>2048</string>
               <string>4096</string>
               <string>8192</string>
               <string>16384</string>
               <string>32768</string>
               <string>65536</string>
               <string>131072</string>
               <string>262144</string>
               <string>524288</string>
               <string>1048576</string>
               <string>2097152</string>
               <string>4194304</string>
            </MenuEntries>
            <CEntries>
               <string>1</string>
               <string>2</string>
               <string>3</string>
               <string>4</string>
               <string>5</string>
               <string>6</string>
               <string>7</string>
               <string>8</string>
               <string>9</string>
               <string>10</string>
               <string>11</string>
               <string>12</string>
               <string>13</string>
               <string>14</string>
               <string>15</string>
               <string>16</string>
               <string>17</string>
               <string>18</string>
               <string>19</string>
               <string>20</string>
               <string>21</string>
               <string>22</string>
            </CEntries>
         </combo>
      </attribs>
      <code.declaration><![CDATA[static const uint32_t LENGTHPOW = (attr_size);
static const uint32_t LENGTH = (1<<attr_size);
static const uint32_t LENGTHMASK = ((1<<attr_size)-1);
static const uint32_t BITS = 8;
static const uint32_t GAIN = 20;
uint8_t *array;
int32_t position;
int32_t val;
int32_t mix;
int reset;
int i;
int trig;]]></code.declaration>
      <code.init><![CDATA[static uint8_t _array[attr_poly][LENGTH] __attribute__ ((section (".sdram")));
array = &_array[parent->polyIndex][0];

]]></code.init>
      <code.krate><![CDATA[if((inlet_reset>0)&&!trig)
{trig=1;
position=0;}
else if (!(inlet_reset>0)){trig=0;}

if((inlet_delALL>0)&&(!reset)&&inlet_rec){
	reset=1;
	for(i=0;i<LENGTH;i++){array[i]=0;}
}
else if (!(inlet_delALL)){reset=0;}

int32_t in=inlet_delete>0?0:inlet_val;
position=(position+1)&LENGTHMASK;
position=position>inlet_size?0:position;
if(!(inlet_rec>0))
{val=val+(((array[position]<<19)-val)>>7);}

if(inlet_rec>0){
val=val+((in-val)>>7);
array[position]=val>>19;}

outlet_out=val;
outlet_gate=array[position]>0?1:0;
mix=mix+(((outlet_gate<<27)-mix)>>7);
outlet_mix=mix;]]></code.krate>
   </obj.normal>
</objdefs>