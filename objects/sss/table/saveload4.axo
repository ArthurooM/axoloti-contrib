<objdefs appVersion="1.0.12">
   <obj.normal id="saveload4" uuid="98639d81-0cf4-4e95-9988-4453f8982d51">
      <sDescription>load table from sdcard</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>table.axh</helpPatch>
      <inlets>
         <charptr32 name="filename" description="file name"/>
         <bool32.rising name="trig" description="trigger"/>
         <int32 name="sample"/>
      </inlets>
      <outlets>
         <int32 name="MaxSampleAmount"/>
      </outlets>
      <displays/>
      <params>
         <int32 name="samplelength" noLabel="true">
            <MinValue i="12"/>
            <MaxValue i="20"/>
         </int32>
      </params>
      <attribs>
         <objref name="table"/>
      </attribs>
      <includes>
         <include>chibios/ext/fatfs/src/ff.h</include>
      </includes>
      <depends>
         <depend>fatfs</depend>
      </depends>
      <code.declaration><![CDATA[  int ntrig;
int32_t samplelength;]]></code.declaration>
      <code.init><![CDATA[  ntrig = 0;
]]></code.init>
      <code.krate><![CDATA[samplelength=1<<param_samplelength-1;
  if ((inlet_trig>0) && !ntrig) {
    ntrig=1;
    FIL FileObject;
    FRESULT err;
    UINT bytes_read;
    err = f_open(&FileObject, inlet_filename, FA_READ | FA_OPEN_EXISTING);
    if (err != FR_OK) { report_fatfs_error(err,inlet_filename); return;}
    int rem_sz = sizeof(*attr_table.array)*samplelength;
    int offset = 0;
    while (rem_sz>0) {
      if (rem_sz>sizeof(fbuff)) {
        err = f_read(&FileObject, fbuff, sizeof(fbuff),&bytes_read);
        if (bytes_read == 0) break;
        memcpy((char *)(&attr_table.array[inlet_sample*samplelength]) + offset,(char *)fbuff,bytes_read);
        rem_sz -= bytes_read;
        offset += bytes_read;
      } else {
        err = f_read(&FileObject, fbuff, rem_sz,&bytes_read);
        memcpy((char *)(&attr_table.array[inlet_sample*samplelength]) + offset,(char *)fbuff,bytes_read);
        rem_sz = 0;
      }
    }    if (err != FR_OK) { report_fatfs_error(err,inlet_filename); return;};
    err = f_close(&FileObject);
    if (err != FR_OK) { report_fatfs_error(err,inlet_filename); return;};
  }
  else if (!(inlet_trig>0)) ntrig=0;


outlet_MaxSampleAmount=256>>param_samplelength-12;]]></code.krate>
   </obj.normal>
</objdefs>