<objdefs appVersion="1.0.11">
   <obj.normal id="touchrec" uuid="ca7825da-ac6c-4479-afe4-07f345df1558">
      <sDescription>(aftertouch) automation recorder

-records only when &quot;rec&quot; is high.
-when &quot;gate&quot; is high, records CV onto current position and send incoming CV directly to output
-when &quot;gate&quot; goes low (recorded/live), holds last CV value.
-when &quot;delete&quot; is high, deletes gate/CV at current position when &quot;gate&quot; goes high
-when &quot;deleteSEQ&quot; is high, deletes the whole sequence when &quot;gate&quot; goes high
-when &quot;clear&quot; goes high, deletes the whole sequence immidiatly

-clear should be used as the main reset-control, resetting multiple automation modules to zero.
-connect gate and CV inputs to the gate/touch-outputs of my &quot;noteTV&quot; module (midi folder)

-delete and deleteSEQ should be used to only delete certain CV-positions or certain sequences.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>table.axh</helpPatch>
      <inlets>
         <bool32 name="gate"/>
         <int32 name="position"/>
         <frac32 name="CV"/>
         <bool32 name="rec"/>
         <bool32 name="delete"/>
         <bool32 name="deleteSEQ"/>
         <bool32 name="clear"/>
         <int32 name="length"/>
      </inlets>
      <outlets>
         <bool32 name="gate"/>
         <frac32 name="CV"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <combo name="size">
            <MenuEntries>
               <string>2</string>
               <string>4</string>
               <string>8</string>
               <string>16</string>
               <string>32</string>
               <string>64</string>
               <string>128</string>
               <string>256</string>
               <string>512</string>
               <string>1024</string>
               <string>2048</string>
               <string>4096</string>
               <string>8192</string>
               <string>16384</string>
               <string>32768</string>
               <string>65536</string>
               <string>131072</string>
               <string>262144</string>
               <string>524288</string>
               <string>1048576</string>
               <string>2097152</string>
            </MenuEntries>
            <CEntries>
               <string>1</string>
               <string>2</string>
               <string>3</string>
               <string>4</string>
               <string>5</string>
               <string>6</string>
               <string>7</string>
               <string>8</string>
               <string>9</string>
               <string>10</string>
               <string>11</string>
               <string>12</string>
               <string>13</string>
               <string>14</string>
               <string>15</string>
               <string>16</string>
               <string>17</string>
               <string>18</string>
               <string>19</string>
               <string>20</string>
               <string>21</string>
            </CEntries>
         </combo>
      </attribs>
      <code.declaration><![CDATA[static const uint32_t LENGTHPOW = attr_size;
static const uint32_t LENGTH = 1<<attr_size;
static const uint32_t LENGTHMASK = (1<<attr_size)-1;
int16_t *array;
int ctrig;
int i;
int dtrig;
int32_t CV;
int get;
int32_t temp;]]></code.declaration>
      <code.init><![CDATA[static int16_t _array[LENGTH] __attribute__ ((section (".sdram")));
array = &_array[0];]]></code.init>
      <code.krate><![CDATA[int32_t position;
position=inlet_position;
position=position-(position/inlet_length)*inlet_length;


int rec=inlet_gate&&inlet_rec;
if(((inlet_deleteSEQ>0)&&(inlet_gate>0))&&!dtrig){
	dtrig=1;
	for(i=0;i<LENGTH;i++){
		array[i]=0;
	}
}
else if (!(inlet_gate&&inlet_deleteSEQ)){dtrig;}

if((inlet_delete>0)&&(inlet_gate>0)){array[position]=0;}
int Delete=inlet_delete+inlet_deleteSEQ;

if((inlet_clear>0)&&!ctrig){
	ctrig=1;
	for(i=0;i<LENGTH;i++){
		array[i]=0;
	}
}
else if (inlet_clear==0){ctrig=0;}


if((rec>0)&&!(Delete))
{
	array[position&LENGTHMASK]=inlet_CV>>12;
	
}
if(rec==0)
{
	
	outlet_gate=array[position&LENGTHMASK]>0?1:0;
	if(outlet_gate>0){
		outlet_CV=array[(position)&LENGTHMASK]<<12;
		CV=array[(position-5)&LENGTHMASK]<<12;
	}
     else{outlet_CV=CV;}
}

if((inlet_gate>0)&&!(Delete)){
outlet_CV=inlet_CV;
CV=inlet_CV;
outlet_gate=1;	
}]]></code.krate>
   </obj.normal>
</objdefs>