<objdefs appVersion="1.0.12">
   <obj.normal id="countStp" uuid="c5162ef4-93f7-49e2-af30-12e9218af0ec">
      <sDescription>cyclic up counter with modifiable stepsize and maximum output.
IMPORTANT:
Counter-length is set by &quot;max&quot; INPUT.
Output-value is wrapped between 0 and &quot;maximum&quot; SELECTOR.

Made be used with the &quot;gateSpreader&quot; module, but whatever, use it for anything</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>counter.axh</helpPatch>
      <inlets>
         <bool32.rising name="trig" description="trigger"/>
         <bool32.rising name="r" description="reset"/>
         <int32 name="max"/>
         <frac32 name="stepsize"/>
      </inlets>
      <outlets>
         <int32 name="o" description="output"/>
         <bool32.pulse name="c" description="carry pulse"/>
         <int32 name="max"/>
      </outlets>
      <displays/>
      <params>
         <int32 name="maximum" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="65536"/>
         </int32>
         <frac32.u.map.gain name="stepsize"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[   int ntrig;
   int rtrig;
   int count;
]]></code.declaration>
      <code.init><![CDATA[    count=0;
   ntrig = 0;
   rtrig = 0;
]]></code.init>
      <code.krate><![CDATA[outlet_c=0;
int max=inlet_max;
if ((inlet_trig>0) && !ntrig) {
   count += 1; if (count>=max) {count = 0; outlet_c = 1;}
   ntrig=1;
}
else if (!(inlet_trig>0)) ntrig=0;
if ((inlet_r>0) && !rtrig) {count=0; rtrig = 1;}
else if (!(inlet_r>0)) rtrig=0;
int cnt=count;
int32_t stepsize=param_stepsize+(inlet_stepsize<<4);
stepsize=stepsize>0?stepsize:-stepsize;
cnt=count*(___SMMUL(stepsize,param_maximum)<<1);
cnt=cnt-cnt/param_maximum*param_maximum;
outlet_o= cnt;
outlet_max=param_maximum;]]></code.krate>
   </obj.normal>
</objdefs>