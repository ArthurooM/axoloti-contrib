<objdefs appVersion="1.0.11">
   <obj.normal id="pattCount" uuid="7c8a2c15-363b-46cc-8bac-5a247bc7236f">
      <sDescription>pattern Counter</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>counter.axh</helpPatch>
      <inlets>
         <bool32.rising name="trig" description="trigger"/>
         <bool32.rising name="r" description="reset"/>
         <bool32 name="pendulum"/>
         <int32 name="start"/>
         <int32 name="steps"/>
         <int32 name="restart"/>
         <int32 name="loop"/>
         <int32 name="size"/>
         <int32 name="range"/>
      </inlets>
      <outlets>
         <int32 name="o" description="output"/>
         <bool32.pulse name="c" description="carry pulse"/>
      </outlets>
      <displays/>
      <params>
         <int32 name="start">
            <MinValue i="0"/>
            <MaxValue i="32"/>
         </int32>
         <int32 name="steps">
            <MinValue i="0"/>
            <MaxValue i="32"/>
         </int32>
         <int32 name="loop">
            <MinValue i="1"/>
            <MaxValue i="32"/>
         </int32>
         <int32 name="restart">
            <MinValue i="0"/>
            <MaxValue i="32"/>
         </int32>
         <int32 name="size">
            <MinValue i="0"/>
            <MaxValue i="128"/>
         </int32>
         <int32 name="chgstep">
            <MinValue i="0"/>
            <MaxValue i="128"/>
         </int32>
         <int32 name="chgsize">
            <MinValue i="0"/>
            <MaxValue i="128"/>
         </int32>
         <int32 name="range">
            <MinValue i="1"/>
            <MaxValue i="128"/>
         </int32>
         <bool32.tgl name="pendulum"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int ntrig;
   int rtrig;
   int32_t count;
   int dir;
int32_t caunt;
int32_t ciunt;]]></code.declaration>
      <code.init><![CDATA[count=0;
   ntrig = 0;
   rtrig = 0;
   dir=1;]]></code.init>
      <code.krate><![CDATA[outlet_c=0;
if ((inlet_trig>0) && !ntrig) {
   if(caunt==0){ciunt+=param_restart+inlet_restart;}
   if (param_pendulum+inlet_pendulum>0){
   if (count>=param_steps+inlet_steps) {dir=-1; outlet_c = 1;}
   if (count<=0) {dir=1; outlet_c = 1;count = param_start+inlet_start;}}
   else if (count>=param_steps+inlet_steps) {dir=1;count = param_start+inlet_start>0?count+param_start+inlet_start:0; outlet_c = 1;}
   count += 1*dir;
   int32_t offset=((count+ciunt)/(param_loop+inlet_loop));
   caunt=count+ciunt-((count+ciunt)/(param_loop+inlet_loop))*(param_loop+inlet_loop)+offset*param_chgstep;
   caunt= caunt*(param_size+inlet_size+offset*param_chgsize)-((caunt*(param_size+inlet_size+offset*param_chgsize))/(param_range+inlet_range))*(param_range+inlet_range);
   ntrig=1;
}
else if (!(inlet_trig>0)) ntrig=0;
if ((inlet_r>0) && !rtrig) {count=0;ciunt=0; rtrig = 1;}
else if (!(inlet_r>0)) {rtrig=0;}



outlet_o=caunt;]]></code.krate>
   </obj.normal>
</objdefs>