<objdefs appVersion="1.0.12">
   <obj.normal id="kickCalc2" uuid="481089ce-7928-40e4-9749-c55a4916a8a7">
      <sDescription>Basskick modulator
Takes 2 envelopes for hit and tail pitch modulation and uses them to fade between the pitch of the hit, the &quot;sub&quot; midsection for the &quot;oompf&quot; and a bassnote/modulation in the tail.</sDescription>
      <author>Remco van der most</author>
      <license>BSD</license>
      <helpPatch>math.axh</helpPatch>
      <inlets>
         <frac32 name="volEnv"/>
         <frac32 name="hitEnv" description="in1"/>
         <frac32 name="tailEnv"/>
         <frac32 name="bassEnv"/>
         <frac32 name="pitchHit"/>
         <frac32 name="pitchSub"/>
         <frac32 name="pitchTail"/>
      </inlets>
      <outlets>
         <frac32 name="pitch" description="out"/>
         <frac32 name="vol"/>
         <frac32 name="bassMod"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.pitch name="pitchHit"/>
         <frac32.s.map.pitch name="pitchSub"/>
         <frac32.s.map.pitch name="pitchTail"/>
      </params>
      <attribs/>
      <code.krate><![CDATA[int32_t tail=param_pitchTail+inlet_pitchTail;
int32_t pitchSub=param_pitchSub+inlet_pitchSub;
int32_t pitchHit=param_pitchHit+inlet_pitchHit;
int32_t base=pitchSub   +___SMMUL(tail-pitchSub<<2,(1<<27)-inlet_tailEnv<<3);
int32_t pitch=base+___SMMUL(pitchHit-base<<2,inlet_hitEnv<<3);
outlet_pitch= pitch;
int32_t bs1=
outlet_vol=inlet_volEnv+___SMMUL(inlet_bassEnv-inlet_volEnv<<2,(1<<27)-___SMMUL(inlet_tailEnv<<3,inlet_volEnv<<2)<<3);
outlet_bassMod=___SMMUL(inlet_bassEnv<<2,(1<<27)-___SMMUL(inlet_tailEnv<<3,inlet_volEnv<<2)<<3);]]></code.krate>
   </obj.normal>
</objdefs>