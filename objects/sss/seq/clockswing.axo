<objdefs appVersion="1.0.10">
   <obj.normal id="clockswing" uuid="2ac8d454-2036-485f-ae58-00e60a13635e">
      <sDescription>adds swing to a trigger signal
First gate/trigger is let through as a short trigger
Second gate/trigger resets the internal counter and only generates a short trigger if the internal counter passes the swing value. Internal counter is at krate. Most swing values will be between 0 (no swing) and 200. If the swing value is so high that the counter will be reset before it has generated a trigger, it won&apos;t generate a trigger. So it&apos;s useful to add a reset signal (once every 64 steps? or more?) to both the swing module and the sequencer that you&apos;re providing the swing to.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <inlets>
         <bool32.rising name="trigIn" description="uses a gate/trigger signal (eg for sequencers)"/>
         <bool32 name="reset" description="resets internal 1st/2nd trigger counter"/>
         <int32 name="swing" description="sets swing position (the higher the value, the later the 2nd trigger will be generated)"/>
      </inlets>
      <outlets>
         <bool32.pulse name="trigOut"/>
      </outlets>
      <displays/>
      <params>
         <int32 name="swing" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="999"/>
         </int32>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int array1[64];
int16_t cnt;
int cot;
int ttrig;
int dtrig;
int swingOn;
int gtrig;
int16_t swingsize;]]></code.declaration>
      <code.init><![CDATA[cnt=999;]]></code.init>
      <code.krate><![CDATA[outlet_trigOut=0;
cnt+=1;
cnt=cnt>999?999:cnt;
if((inlet_trigIn>0) && (!(ttrig)))
{
swingsize=inlet_swing+param_swing;
ttrig=1;
cot+=1;
cot=cot&1;
if(cot==1)
{cnt=0;}
else if(cot==0){outlet_trigOut=1;}
}
else if (!(inlet_trigIn>0)){ttrig=0;}


swingOn=(cnt>(swingsize));
if(swingOn &&(!(dtrig)))
{dtrig=1;
gtrig=1;}
else
{
	gtrig=0;
	if(!(swingOn>0)) dtrig=0;
}
outlet_trigOut+=gtrig;
]]></code.krate>
   </obj.normal>
</objdefs>