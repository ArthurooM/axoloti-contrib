<objdefs appVersion="1.0.12">
   <obj.normal id="continuousCC16" uuid="71e50008-cf81-44f2-b7d2-217989b69fda">
      <sDescription>Sends out a continuous stream of midi messages for 16 CC numbers starting from the &quot;cc&quot; attribute (0-15, 1-16, etc)
Useful in combination with the &quot;ctrlRec16&quot; module and the doepfer MTV16 to create a 16-channel knob recorder for your modular!</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>midi_out.axh</helpPatch>
      <inlets>
         <frac32 name="i1"/>
         <frac32 name="i2"/>
         <frac32 name="i3"/>
         <frac32 name="i4"/>
         <frac32 name="i5"/>
         <frac32 name="i6"/>
         <frac32 name="i7"/>
         <frac32 name="i8"/>
         <frac32 name="i9"/>
         <frac32 name="i10"/>
         <frac32 name="i11"/>
         <frac32 name="i12"/>
         <frac32 name="i13"/>
         <frac32 name="i14"/>
         <frac32 name="i15"/>
         <frac32 name="i16"/>
      </inlets>
      <outlets/>
      <displays/>
      <params>
         <frac32.s.map name="rate" noLabel="true"/>
      </params>
      <attribs>
         <combo name="device">
            <MenuEntries>
               <string>din</string>
               <string>usb host port 1</string>
               <string>usb host port 2</string>
               <string>usb host port 3</string>
               <string>usb host port 4</string>
               <string>internal port 1</string>
               <string>internal port 2</string>
               <string>usb device port 1</string>
            </MenuEntries>
            <CEntries>
               <string>MIDI_DEVICE_DIN, 1</string>
               <string>MIDI_DEVICE_USB_HOST, 1</string>
               <string>MIDI_DEVICE_USB_HOST, 2</string>
               <string>MIDI_DEVICE_USB_HOST, 3</string>
               <string>MIDI_DEVICE_USB_HOST, 4</string>
               <string>MIDI_DEVICE_INTERNAL, 1</string>
               <string>MIDI_DEVICE_INTERNAL, 2</string>
               <string>MIDI_DEVICE_USB_DEVICE, 1</string>
            </CEntries>
         </combo>
         <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="0"/>
         <spinner name="cc" MinValue="0" MaxValue="127" DefaultValue="0"/>
      </attribs>
      <code.declaration><![CDATA[int ntrig;
int32_t phase;
int32_t chnl;
int32_t in[16];]]></code.declaration>
      <code.init><![CDATA[chnl=0;]]></code.init>
      <code.krate><![CDATA[int32_t rate;
MTOFEXTENDED(param_rate,rate)
rate=rate;
//phase+=rate;


in[0]=inlet_i1;
in[1]=inlet_i2;
in[2]=inlet_i3;
in[3]=inlet_i4;
in[4]=inlet_i5;
in[5]=inlet_i6;
in[6]=inlet_i7;
in[7]=inlet_i8;
in[8]=inlet_i9;
in[9]=inlet_i10;
in[10]=inlet_i11;
in[11]=inlet_i12;
in[12]=inlet_i13;
in[13]=inlet_i14;
in[14]=inlet_i15;
in[15]=inlet_i16;
/*
if ((phase>0) && !ntrig) 
{
	chnl=(chnl+1)&15;
	MidiSend3((midi_device_t) attr_device, MIDI_CONTROL_CHANGE + (attr_channel-1),chnl,__USAT(in[chnl]>>20,7));  ntrig=1;
}
if (phase<0) {ntrig=0;}
*/
phase=(phase+1)&3;
if(phase==0){
chnl=(chnl+1)&15;
MidiSend3((midi_device_t) attr_device, MIDI_CONTROL_CHANGE + (attr_channel-1),chnl,__USAT(in[chnl]>>20,7));
}]]></code.krate>
   </obj.normal>
</objdefs>