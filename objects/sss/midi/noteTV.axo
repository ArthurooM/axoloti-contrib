<objdefs appVersion="1.0.11">
   <obj.normal id="noteTV" uuid="b6b2117e-8493-43fe-95e3-6c29436ef878">
      <sDescription>Monophonic MIDI keyboard note input. Only responding to a single note, with polyphonic aftertouch and gate output.
When gate goes low, holds velocity of initial impact.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>midi_in.axh</helpPatch>
      <inlets/>
      <outlets>
         <bool32 name="gate"/>
         <frac32.positive name="touch" description="polyphonic aftertouch"/>
      </outlets>
      <displays/>
      <params>
         <int32 name="Note" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int8_t _note;
uint8_t _gate;
uint8_t _velo;
uint8_t _rvelo;
uint8_t _touch;
int Note;]]></code.declaration>
      <code.init><![CDATA[_gate = 0;
_note = 0;
_touch = 0;]]></code.init>
      <code.krate><![CDATA[outlet_gate=_gate<<27;
Note=param_Note;
if(_gate>0){outlet_touch = ___SMMUL(_touch<<23,_touch<<22);}
if(_gate==0){outlet_touch=___SMMUL(_velo<<23,_velo<<22);}]]></code.krate>
      <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + attr_midichannel) && (data2)) {
  if ((data1 >= Note)&&(data1 <= Note)) {
    if(!(_gate)){	
    _touch = data2;
    _velo = data2;
    }
    _note = data1-64;
    _gate = 1;
  }
} else if (((status == MIDI_NOTE_ON + attr_midichannel) && (!data2))||          (status == MIDI_NOTE_OFF + attr_midichannel)) {
  if (_note == data1-64) {
    _gate = 0;
  }
} else if ((status == attr_midichannel + MIDI_POLY_PRESSURE)&&(data1-64 == _note)) {
  _touch = data2;
} else if ((status == attr_midichannel + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
   _gate = 0;
}]]></code.midihandler>
   </obj.normal>
</objdefs>