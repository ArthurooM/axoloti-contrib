<objdefs appVersion="1.0.12">
   <obj.normal id="liveRecord" uuid="db6e6b98-773e-4ee2-8324-f01ae7398379">
      <sDescription>live samplerecorder to be used with the livePlayer.
Uses a 32bit &quot;starts&quot; table and a 16bit &quot;samples&quot; table.
Autoclear resets the entire buffer when the recorder goes over the maximum time.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>delay.axh</helpPatch>
      <inlets>
         <frac32buffer name="in" description="wave input"/>
         <bool32 name="rec" description="when high, records input into the table at next start position"/>
         <bool32 name="clear" description="when high, clears buffer and start positions"/>
      </inlets>
      <outlets/>
      <displays/>
      <params>
         <bool32.tgl name="autoclear" noLabel="true"/>
      </params>
      <attribs>
         <objref name="samples" description="this should refer to a 16bit table allocator (sdram)"/>
         <objref name="starts" description="this should refer to a 32bit table allocator"/>
      </attribs>
      <code.declaration><![CDATA[uint32_t writepos;
bool rec;
bool clear;
int i;
bool clr;]]></code.declaration>
      <code.init><![CDATA[writepos=0;]]></code.init>
      <code.krate><![CDATA[if(((inlet_clear||clr>0)&&!clear)||((param_autoclear>0)&&(attr_starts.array[0]==63))){
	clear=1;
	for(i=0;i<attr_samples.LENGTH;i++){
		attr_samples.array[i]=0;
	}
	for(i=0;i<attr_starts.LENGTH;i++){
		attr_starts.array[i]=0;
	}
	clr=0;
}
else if(inlet_clear||clr<1){clear=0;}]]></code.krate>
      <code.srate><![CDATA[if((inlet_rec>0)&&(writepos<attr_samples.LENGTH)&&(attr_starts.array[0]<63)){
if(!rec){rec=1;}
writepos = (writepos + 1);
if(writepos>attr_samples.LENGTHMASK){
clr=1;
}
writepos=writepos&attr_samples.LENGTHMASK;
attr_samples.array[writepos] = __SSAT(inlet_in>>14,16);
}
else if((inlet_rec<1)&&(rec==1)){rec=0;attr_starts.array[0]+=1;attr_starts.array[attr_starts.array[0]]=writepos;}]]></code.srate>
   </obj.normal>
</objdefs>