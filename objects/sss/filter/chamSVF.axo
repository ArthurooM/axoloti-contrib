<objdefs appVersion="1.0.12">
   <obj.normal id="chamSVF" uuid="2931d78d-7314-44a9-8437-43c055fcf9c6">
      <sDescription>multimode chamberlin based svf filter
2 extra parameters: drop&amp;spread
-drop can remove the volume drop in the passband when resonance is high
-spread spreads the upper and lower cutoff bands
-for notch, use a low resonance value to have a noticable dip in the audio spectrum</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>filter.axh</helpPatch>
      <inlets>
         <frac32buffer name="in" description="filter input"/>
         <frac32 name="pitch" description="pitch"/>
         <frac32 name="reso" description="resonance"/>
         <frac32 name="drop"/>
         <frac32 name="spread"/>
      </inlets>
      <outlets>
         <frac32buffer name="lp" description="filter output"/>
         <frac32buffer name="hp"/>
         <frac32buffer name="bp1"/>
         <frac32buffer name="bp2"/>
         <frac32buffer name="no1"/>
         <frac32buffer name="no2"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.pitch name="pitch"/>
         <frac32.u.map.filterq name="reso"/>
         <frac32.u.map name="drop"/>
         <frac32.s.map name="spread"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t low;
int32_t band;
int32_t prv;]]></code.declaration>
      <code.init><![CDATA[low = 0;
band = 0;]]></code.init>
      <code.krate><![CDATA[int32_t drop=__USAT(inlet_drop+param_drop,27)<<4;
int32_t res=(__USAT(inlet_reso + param_reso,27)<<4);
int32_t spread=__SSAT(inlet_spread+param_spread,28);
int32_t damp = (0x80<<24) - res;
damp = ___SMMUL(damp,damp);
res=___SMMUL(res,res)<<1;
int32_t alpha;
int32_t freq1,freq2;
MTOFEXTENDED(__SSAT(param_pitch + inlet_pitch+spread,28),alpha);
SINE2TINTERP(alpha,freq1);
MTOFEXTENDED(__SSAT(param_pitch + inlet_pitch-spread,28),alpha);
SINE2TINTERP(alpha,freq2);
drop=___SMMUL(drop,res)<<1;]]></code.krate>
      <code.srate><![CDATA[int32_t in = inlet_in+___SMMUL(drop,inlet_in<<1);
int32_t dif=in-prv>>1;
prv+=dif;
int32_t high;
for(int i=0;i<2;i++){
prv+=i*dif;
low = low + (___SMMUL(freq1,band)<<1);
high  =    (___SMMUL(damp,prv-band)<<1)-low+___SMMUL(drop,prv);
band = (___SMMUL(freq2,high)<<1) + band-(___SMMUL(band,___SMMUL(band,band)<<5)<<2);
}

outlet_lp = low;
outlet_bp1= band;
outlet_bp2=inlet_in+band;
outlet_hp = high;
outlet_no1 = inlet_in-band>>1;
outlet_no2 = low+high;

prv=in;]]></code.srate>
   </obj.normal>
</objdefs>