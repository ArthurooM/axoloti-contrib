<objdefs appVersion="1.0.12">
   <obj.normal id="armBPsvf" uuid="dfd6bf8c-611b-49a3-8ad7-392ffdede0ee">
      <sDescription>Bandpass filter, state-variable type, audiorate modulation inputs (use with complexSH oscillator and armMOD for complex filtering)</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>filter.axh</helpPatch>
      <inlets>
         <frac32buffer name="in" description="filter input"/>
         <frac32buffer name="pitch"/>
         <frac32buffer name="reso"/>
      </inlets>
      <outlets>
         <frac32buffer name="out" description="filter output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.pitch name="pitch"/>
         <frac32.u.map.filterq name="reso"/>
         <int32 name="mode">
            <MinValue i="0"/>
            <MaxValue i="3"/>
         </int32>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t low;
int32_t band;
int32_t hp;]]></code.declaration>
      <code.init><![CDATA[low = 0;
band = 0;]]></code.init>
      <code.srate><![CDATA[int32_t damp = (0x80<<24) - (__USAT(inlet_reso + param_reso,27)<<4);
damp = ___SMMUL(damp,damp);
int32_t alpha;
int32_t freq;
MTOFEXTENDED(param_pitch + inlet_pitch,alpha);
SINE2TINTERP(alpha,freq);

int32_t in1 = inlet_in;
int32_t notch = inlet_in - (___SMMUL(damp,band)<<1);
low = low + (___SMMUL(freq,band)<<1);
int32_t high  = notch - low;
band = (___SMMUL(freq,high)<<1) + band-(___SMMUL(band<<1,___SMMUL(band<<1,band<<1)<<4));
switch(param_mode){
case 0: outlet_out = low; break;
case 1: outlet_out = band; break;
case 2: outlet_out = high; break;
case 3: outlet_out = notch; break;
}
hp+=outlet_out-hp>>9;
outlet_out-=hp;]]></code.srate>
   </obj.normal>
</objdefs>