<objdefs appVersion="1.0.10">
   <obj.normal id="mostFilter2" uuid="43f262f6-e823-42da-8a05-1b97ae2eee84">
      <sDescription>Custom designed 2-stage filter with crossfade between LP, BP and HP using the &quot;mode&quot; control.
2nd input is an inversed input with inversed filter effects: HP, NOTCH and LP respectively.
The &quot;mod&quot; control is an extra filter control, softening the sound, though distorting at higher mod and resonance settings with higher frequencies. It came as a possible extra control within the design..</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>filter.axh</helpPatch>
      <inlets>
         <frac32buffer name="in"/>
         <frac32buffer name="iv"/>
         <frac32 name="pitch"/>
         <frac32 name="env"/>
         <frac32buffer name="freq"/>
         <frac32 name="resonance"/>
         <frac32 name="mode"/>
         <frac32 name="Mod"/>
      </inlets>
      <outlets>
         <frac32buffer name="out" description="output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map name="freq"/>
         <frac32.u.map name="resonance"/>
         <frac32.u.map name="mode"/>
         <frac32.u.map name="Mod"/>
         <frac32.s.map name="env"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t val;
int32_t rate;
int32_t diff;
int32_t Res;]]></code.declaration>
      <code.init><![CDATA[val = 0;
rate=0;
]]></code.init>
      <code.krate><![CDATA[
int32_t resonance=(1<<27)-__USAT(param_resonance+inlet_resonance,28);
resonance=___SMMUL(resonance<<2,resonance<<2);
int32_t mode=param_mode+inlet_mode&((1<<28)-1);
mode=mode>(1<<27)?(1<<28)-mode:mode;
int32_t Mod=param_Mod+inlet_Mod&((1<<28)-1);
Mod=Mod>(1<<27)?(1<<28)-Mod:Mod;
]]></code.krate>
      <code.srate><![CDATA[   int32_t in;
   in=(inlet_in-inlet_iv);
   diff=in-val;
   int32_t f;
   MTOF(param_freq+inlet_pitch+___SMMUL(inlet_env<<4,param_env<<2)+inlet_freq-___SMMUL(((diff>0?diff:-diff))<<3,Mod<<1),f);
   
   
   rate = ___SMMLA((diff)<<1,f,rate);
   int32_t temp=___SMMUL(rate<<3,((1<<20)+resonance)<<2);
   Res = ___SMMLA((temp-Res)<<1,f>>2,Res);
   rate=rate-(temp-Res);
   val += rate;
   outlet_out= (val-___SMMUL(in<<3,mode<<2)+(inlet_iv))>>1;
   ]]></code.srate>
   </obj.normal>
</objdefs>