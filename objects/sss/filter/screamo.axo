<objdefs appVersion="1.0.12">
   <obj.normal id="screamo" uuid="00cbc8c5-6d26-4589-bb22-e8dc600ba220">
      <sDescription>Screaming resonance lowpass filter with low-boost control.
This is not a normal &quot;take away all those frequencies&quot; filter,
but depending on resonance and low amounts, the resonance will scream with lots of overtones, the low might be completely overdriven or, in case of inverse low, a kind of a bandpass/highpass can be created.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>filter.axh</helpPatch>
      <inlets>
         <frac32buffer name="in" description="input"/>
         <frac32 name="cutoff"/>
      </inlets>
      <outlets>
         <frac32buffer name="out" description="output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.pitch name="freq" noLabel="true"/>
         <frac32.u.map name="res"/>
         <frac32.s.map name="low"/>
         <frac32.s.map name="mod"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t val;
int32_t hp;
int32_t feed;]]></code.declaration>
      <code.init><![CDATA[val = 0;]]></code.init>
      <code.srate><![CDATA[int32_t f;
int32_t tmp=inlet_in-val;
   MTOF(param_freq+inlet_cutoff+(___SMMUL(param_mod,tmp>0?tmp:-tmp)<<5),f);

int32_t diff=-___SMMUL(__SSAT(feed-inlet_in*0,27),param_res)<<6;
int32_t ts = __SSAT(diff,28);
int32_t tsq31 = ts<<3;
int32_t tsq31p3 = ___SMMUL(tsq31,___SMMUL(tsq31,tsq31));
ts = ts + (ts>>1) - (tsq31p3);
int32_t tv1=val;
int32_t tv2=val;
   tv1 = ___SMMLA((__SSAT(inlet_in+ts+___SMMUL(param_low<<4,tv2<<1),28)-tv1)<<1,f,tv1);
   tv2 = ___SMMLA((inlet_in-tv2)<<1,f,tv2);
   val=tv1;
   outlet_out= val;
   hp=___SMMLA((val-hp)<<1,f>>1,hp);
   feed=hp-val;
  // hp=val;]]></code.srate>
   </obj.normal>
</objdefs>