<objdefs appVersion="1.0.11">
   <obj.normal id="LPHQOS" uuid="63b369d1-b70d-403c-b1f5-2453c7c67fe3">
      <sDescription>multi-oversampled and multi-pole lowpass filter.
&quot;Spread&quot; spreads out the cutoff frequencies a bit of the various poles.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <inlets>
         <frac32buffer name="in"/>
         <frac32 name="pitch"/>
         <frac32 name="res"/>
      </inlets>
      <outlets>
         <frac32buffer name="out"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map.pitch name="pitch"/>
         <frac32.u.map name="res"/>
         <frac32.s.map name="spread"/>
         <int32 name="OS">
            <MinValue i="2"/>
            <MaxValue i="16"/>
         </int32>
         <int32 name="poles">
            <MinValue i="2"/>
            <MaxValue i="8"/>
         </int32>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int i;
int j;
int32_t val[8];
int32_t prev[8];
int32_t diff[8];
int32_t Prev;
float32_t step;]]></code.declaration>
      <code.init><![CDATA[for(i=0;i<8;i++){
	val[i]=0;
	prev[i]=0;
}]]></code.init>
      <code.krate><![CDATA[int32_t freq;
MTOFEXTENDED(param_pitch+(inlet_pitch<<1),freq)
freq=freq/(param_OS>>1);
int32_t spread=___SMMUL(param_spread<<1,freq<<1);
int32_t res=__USAT(param_res+inlet_res,27);
   step = ((freq - Prev)>>4)/param_OS;
   int32_t Freq = Prev;
   int32_t FReq = Prev;
   Prev = freq;]]></code.krate>
      <code.srate><![CDATA[int32_t in=inlet_in+__SSAT(___SMMUL(val[param_poles-1]-val[param_poles-2]<<3,-res<<4),27);
diff[0]=(in-prev[0])/param_OS;
for(i=0;i<param_OS;i++){
Freq+=step;
val[0]=___SMMLA((prev[0]+diff[0]*i-val[0])<<1,Freq,val[0]);}


if(param_poles>0){
for(i=1;i<param_poles;i++){
diff[i]=(val[i-1]-prev[i])/param_OS;
FReq=Prev;
for(j=0;j<param_OS;j++){
FReq+=step;
val[i]=___SMMLA((prev[i]+diff[i]*j-val[i])<<1,FReq+spread*i,val[i]);}
prev[i]=val[i-1];
}}
outlet_out=val[param_poles-1];
prev[0]=in;]]></code.srate>
   </obj.normal>
</objdefs>