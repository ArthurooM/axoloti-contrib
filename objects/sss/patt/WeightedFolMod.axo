<objdefs appVersion="1.0.11">
   <obj.normal id="WeightedFolMod" uuid="678561c3-e16c-47b9-8cc4-caa316855ab1">
      <sDescription>Records the weights for each note-follow-up and copies it into the internal array of the &quot;WeightedFollow module&quot; when you hit &quot;copy&quot;.

Connect a midi module note and gate outputs to the note and gate inputs and play a melody. Make sure your last played note makes a connection back to another note played before.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <rotatedParams>true</rotatedParams>
      <inlets>
         <bool32 name="gate"/>
         <int32 name="note"/>
      </inlets>
      <outlets/>
      <displays/>
      <params>
         <bool32.mom name="copy"/>
         <bool32.mom name="reset"/>
      </params>
      <attribs>
         <objref name="core"/>
      </attribs>
      <code.declaration><![CDATA[static const uint32_t LENGTH = 48*48;
int32_t prev;
int i;
int gtrig;
int16_t *array;
int j;
int ctrig;
int rtrig;]]></code.declaration>
      <code.init><![CDATA[static int16_t _array[LENGTH] __attribute__ ((section (".sdram")));
array = &_array[0];

for(i=0;i<LENGTH;i++){
	array[i]=0;
}
int prev=0;]]></code.init>
      <code.krate><![CDATA[if((param_reset>0)&&!rtrig){
	rtrig=1;
	for(i=0;i<LENGTH;i++){
	array[i]=0;
}
}
else if (param_reset==0){rtrig=0;}

if((inlet_gate>0)&&!gtrig){
	gtrig=1;
int32_t NOTE=inlet_note;
NOTE=NOTE-NOTE/48*48;
NOTE=NOTE>=0?NOTE:NOTE+48;
array[prev+NOTE]+=1;
prev=NOTE*48;}
else if(inlet_gate==0){gtrig=0;}

if((param_copy>0)&&!ctrig){
	ctrig=1;
	for(i=0;i<48;i++){
	for(j=0;j<48;j++){
		attr_core.array[i*48+j]=array[i*48+j];
		if(j>0){
		attr_core.array[i*48+j]+=attr_core.array[i*48+j-1];}
	}
}}
else if(param_copy==0){ctrig=0;}]]></code.krate>
   </obj.normal>
</objdefs>