<objdefs appVersion="1.0.12">
   <obj.normal id="syncPulsDel" uuid="05795cd7-b4e9-4782-9c46-16f89b1d6360">
      <sDescription>Generates a delayable synced pulse after a rising trigger on the trig input
The pulse-length depends on the time in-between triggers on the &quot;sync&quot; input, the &quot;steps&quot; input and the &quot;stop&quot; knob.
The time of the sync is multiplied with the steps to set the maximum trigger length, the &quot;stop&quot; knob sets the amount of that time the gate will be high.

This pulse is given after a synced delay time. The &quot;start&quot; knob sets a maximum of four times the &quot;sync time&quot;</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <helpPatch>pulselength.axh</helpPatch>
      <inlets>
         <bool32.rising name="trig" description="trigger"/>
         <bool32 name="sync"/>
         <int32 name="steps"/>
      </inlets>
      <outlets>
         <bool32 name="out" description="pulse output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="start"/>
         <frac32.u.map name="stop"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[uint32_t val1;
uint32_t val2;
bool ntrig;
bool trg;
uint32_t timer;]]></code.declaration>
      <code.init><![CDATA[val1 = 0;
val2=0;
ntrig = 0;]]></code.init>
      <code.krate><![CDATA[if ((inlet_sync > 0) && !ntrig) {
ntrig = 1;
timer=val1*0.9;
val1=0;
}
else if (!(inlet_sync > 0)){ntrig = 0;}

if ((inlet_trig > 0) && !trg) {
trg = 1;
val2=-___SMMUL(param_start<<3,timer<<4);
}
else if (!(inlet_trig > 0)){trg = 0;}
val1+=1;
val2+=1;
outlet_out=((val2/inlet_steps)<___SMMUL(param_stop<<3,timer<<2))&&((val2)>0);]]></code.krate>
   </obj.normal>
</objdefs>