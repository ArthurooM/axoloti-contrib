<objdefs appVersion="1.0.12">
   <obj.normal id="quadrant" uuid="a0bb3861-a422-4e17-95be-6a73aa13beaa">
      <sDescription>Quadrant distortion that imposes an offsets to the signal when changing:
mod1: direction (signal going up/down)
mod2: positive/negative (signal being +/-.... well duh ;) )

Damp control the filter cutoff the filters the offset-generator.
Rate linearly limits the change-rate of the offset-generator.
So these are non-linear and linear filter-modes that can be combined to your own taste.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <inlets>
         <frac32buffer name="in"/>
      </inlets>
      <outlets>
         <frac32buffer name="out"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="mod1"/>
         <frac32.u.map name="mod2"/>
         <frac32.s.map.pitch name="damp"/>
         <frac32.u.map name="rate"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t O1;
int32_t prev;
int32_t cap1;
int32_t cap2;]]></code.declaration>
      <code.init><![CDATA[SINE2TINTERP(1<<30,O1)]]></code.init>
      <code.krate><![CDATA[int32_t damp;
MTOF(param_damp,damp)]]></code.krate>
      <code.srate><![CDATA[int32_t in=inlet_in;
int32_t comp;
int32_t offs;
comp=in>prev?-param_mod1:param_mod1;

offs=in>0?-param_mod2:param_mod2;
int32_t rate=(comp+offs-cap1)<<1;
rate=rate>param_rate?param_rate:rate;
rate=rate<-param_rate?-param_rate:rate;
cap1=___SMMLA(rate,damp,cap1);

outlet_out=in+cap1;
prev=inlet_in;]]></code.srate>
   </obj.normal>
</objdefs>