<objdefs appVersion="1.0.12">
   <obj.normal id="transRate" uuid="c75c59de-3d2a-4881-9a5d-47192ed6a3e3">
      <sDescription>Quantized maximum change-rate distortion
Based on a lowpass filter, this module clamps the rate at which the input may change before sending it to the filter. This rate is related to the current amplitude of the signal and the change can be quantized as if it is an amplifier with different transistor-stages, each having a different maximum change-rate.
So:
mod1: sets the size of the stages, fully clockwise would be 1 stage only-&gt;no change. Lowering the control will make the stages smaller and smaller, adding more and more stages and overtones.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <inlets>
         <frac32buffer name="in"/>
      </inlets>
      <outlets>
         <frac32buffer name="out"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="mod1"/>
         <frac32.s.map.pitch name="damp"/>
         <frac32.u.map name="rate"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t O1;
int32_t prev;
int32_t cap1;
int32_t cap2;]]></code.declaration>
      <code.init><![CDATA[SINE2TINTERP(1<<30,O1)]]></code.init>
      <code.krate><![CDATA[int32_t damp;
MTOF(param_damp,damp)]]></code.krate>
      <code.srate><![CDATA[int32_t in=inlet_in;
int32_t comp;
int32_t offs;
comp=in/(param_mod1+1)*(param_mod1+1);

int32_t rate=(comp-cap1)<<1;
rate=rate>param_rate?param_rate:rate;
rate=rate<-param_rate?-param_rate:rate;
cap1=___SMMLA(rate,damp,cap1);

outlet_out=in-cap1;
prev=inlet_in;]]></code.srate>
   </obj.normal>
</objdefs>