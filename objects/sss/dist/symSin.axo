<objdefs appVersion="1.0.12">
   <obj.normal id="symSin" uuid="c4faa7a3-ede5-477d-8b65-e341a199da52">
      <sDescription>Symmetrical sineshaper with treshold.
Above the value set by the knob, the signal will turn into a sine-shape. At this treshold the sineshaper will be at 45degrees, thus at a 1:1 ratio, before curving the signal.
This module is alike the sinelord module, but only has a single control for both positive and negative treshold.
Use &quot;asymSin&quot; for asymmetrical distortion.</sDescription>
      <author>Remco van der Most</author>
      <license>BSD</license>
      <inlets>
         <frac32buffer name="in"/>
         <frac32 name="mod"/>
      </inlets>
      <outlets>
         <frac32buffer name="out"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map name="mod" noLabel="true"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t O1;]]></code.declaration>
      <code.init><![CDATA[SINE2TINTERP(1<<30,O1)]]></code.init>
      <code.krate><![CDATA[int32_t mod1a=param_mod+inlet_mod;
int32_t mod1b=mod1a<0?-mod1a:0;
mod1a=mod1a>0?mod1a:0;]]></code.krate>
      <code.srate><![CDATA[int32_t in=inlet_in;
in+=___SMMUL(mod1b<<4,in<<4);
int32_t clip=in>mod1a?mod1a:in;
clip=clip<-mod1a?-mod1a:clip;
int32_t over=in-clip;
if(over>0){
SINE2TINTERP((-over<<4)+(1<<30),over)
over=over>>5;
over-=O1>>5;
}
else{SINE2TINTERP((-over<<4)-(1<<30),over)
over=over>>5;
over+=O1>>5;
}
outlet_out=clip+over;]]></code.srate>
   </obj.normal>
</objdefs>