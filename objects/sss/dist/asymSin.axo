<objdefs appVersion="1.0.12">
   <obj.normal id="asymSin" uuid="0331cc5c-7826-4de9-989f-4d2be4ab8039">
      <license>GPL</license>
      <inlets>
         <frac32buffer name="in"/>
      </inlets>
      <outlets>
         <frac32buffer name="out"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map name="mod1"/>
         <frac32.s.map name="mod2"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t O1;]]></code.declaration>
      <code.init><![CDATA[SINE2TINTERP(1<<30,O1)]]></code.init>
      <code.krate><![CDATA[int32_t mod1=param_mod1+1;
int32_t mod2=mod1<0?-mod1:0;
mod1=mod1>0?mod1:0;
int32_t mod3=param_mod2+1;
int32_t mod4=mod3<0?-mod3:0;
mod3=mod3>0?mod3:0;]]></code.krate>
      <code.srate><![CDATA[int32_t in=inlet_in;
if(in>0){
in+=___SMMUL(mod2<<4,in<<4);}
else{
in+=___SMMUL(mod4<<4,in<<4);}
int32_t clip=in>mod1?mod1:in;
clip=clip<-mod3?-mod3:clip;
int32_t over=in-clip;
if(over>0){
SINE2TINTERP((-over<<4)+(1<<30),over)
over=over>>5;
over-=(O1>>5);
}
else{SINE2TINTERP((-over<<4)-(1<<30),over)
over=over>>5;
over+=(O1>>5);
}
outlet_out=clip+(over);]]></code.srate>
   </obj.normal>
</objdefs>