<objdefs appVersion="1.0.9">
   <obj.normal id="dtmf_code" uuid="f3e63695-e1df-4e1c-a5c0-cba350af8400">
      <sDescription>decodes ouput of a dmtf converter chip MT8870 connected to four gpio input pins.</sDescription>
      <author>Crococode</author>
      <license>BSD</license>
      <helpPatch>math.axh</helpPatch>
      <inlets>
         <frac32 name="i1" description="in1"/>
         <frac32 name="i2"/>
         <frac32 name="i3"/>
         <frac32 name="i4"/>
         <int32 name="shift"/>
         <bool32 name="trig"/>
      </inlets>
      <outlets>
         <frac32 name="out"/>
         <bool32 name="tone"/>
         <bool32 name="code"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <text name="code"/>
      </attribs>
      <code.declaration><![CDATA[const int32_t thr = (43<<20);
int32_t out;
int32_t hit;
int32_t trigged;
int32_t val1;
int32_t val2;
int32_t val3;
uint8_t timeout;
uint8_t success;]]></code.declaration>
      <code.init><![CDATA[out = 0;
trigged = 0;
hit = 0;
timeout = 0;
success = 0;]]></code.init>
      <code.krate><![CDATA[if ((inlet_trig==1) && (trigged == 0))
{
		
	if (inlet_i4<thr)
	{
	if (inlet_i3<thr)
	{
	if (inlet_i2<thr && inlet_i1>thr){out = ((36-inlet_shift)<<20);}
	if (inlet_i2>thr && inlet_i1<thr){out = ((37-inlet_shift)<<20);}
	if (inlet_i2>thr && inlet_i1>thr){out = ((38-inlet_shift)<<20);}
	}
	else
	{
	if (inlet_i2<thr && inlet_i1<thr){out = ((39-inlet_shift)<<20);}
	if (inlet_i2<thr && inlet_i1>thr){out = ((40-inlet_shift)<<20);}
	if (inlet_i2>thr && inlet_i1<thr){out = ((41-inlet_shift)<<20);}
	if (inlet_i2>thr && inlet_i1>thr){out = ((42-inlet_shift)<<20);}
	}
	}
	else
	{
	if (inlet_i3<thr)
	{
	if (inlet_i2<thr && inlet_i1<thr){out = ((43-inlet_shift)<<20);}
	if (inlet_i2<thr && inlet_i1>thr){out = ((44-inlet_shift)<<20);}
	if (inlet_i2>thr && inlet_i1<thr){out = ((45-inlet_shift)<<20);}
	if (inlet_i2>thr && inlet_i1>thr){out = ((46-inlet_shift)<<20);}
	}
	else
	{
	if (inlet_i2<thr && inlet_i1<thr){out = ((47-inlet_shift)<<20);}	
	}
	}
	timeout++;
	if(timeout > 100)
	{
		trigged = 1;
		timeout = 0;
		attr_code;
		switch(hit)
		{
			case 0:
				if(out == ((val1+35+inlet_shift)<<20)){hit++;}
				else{hit=0;}
				break;
			case 1:
				if(out == ((val2+35+inlet_shift)<<20)){hit++;}
				else{hit=0;}
				break;
			case 2:
				hit=0;
				if(out == ((val3+35+inlet_shift)<<20))
				{
					LogTextMessage("Code %d%d%d unlocked",val1,val2,val3);
					success=1;
				}
				break;
		}
	}
}

outlet_out = out;
outlet_code=success;
if (trigged == 1)
{
	outlet_tone = 1;
	if(inlet_trig != 1)
	{
		trigged = 0;
		success = 0;
	}
}
else
{
	outlet_tone = 0;
}
]]></code.krate>
   </obj.normal>
</objdefs>