<objdefs appVersion="1.0.10">
   <obj.normal id="joystick" uuid="f1579513-23fe-45b7-ae9f-5ed803aebb2d">
      <sDescription>Axoloti Control (AxoC) - Joystick control</sDescription>
      <author>Mark Harris</author>
      <license>GPL</license>
      <helpPatch>axoc.axh</helpPatch>
      <inlets>
         <bool32 name="led1"/>
      </inlets>
      <outlets>
         <frac32 name="x"/>
         <frac32 name="y"/>
         <bool32 name="s"/>
      </outlets>
      <displays>
         <frac32.u.dial name="x"/>
         <frac32.u.dial name="y"/>
         <bool32 name="s"/>
      </displays>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[static const unsigned int SIZE = 2;
static const int32_t F_FREQ = 1 << 23;
int32_t o[SIZE];]]></code.declaration>
      <code.init><![CDATA[int i;
for(i=0;i<SIZE;i++)
{
	o[i] = 0;
}

palSetPadMode(GPIOC,0,PAL_MODE_INPUT_PULLDOWN);
palSetPadMode(GPIOB,0,PAL_MODE_OUTPUT_PUSHPULL);]]></code.init>
      <code.krate><![CDATA[int i=0;
for(int i=0;i<SIZE;i++) 
{
	o[i] = ___SMMLA(((adcvalues[i+0] <<15 )-o[i])<<1,F_FREQ,o[i]) ;
}

outlet_x= o[1];
outlet_y= o[0];

int32_t s = palReadPad(GPIOC,0);


palWritePad(GPIOB,0,(inlet_led1>0));

disp_x = o[1];
disp_y = o[0];
disp_s = s;
outlet_s = s;]]></code.krate>
   </obj.normal>
</objdefs>