<objdefs appVersion="1.0.12">
   <obj.normal id="kick drum" uuid="a719b004-4233-482e-8fe9-830d546a80c0">
      <sDescription>Consistent kick drum object</sDescription>
      <author>Sputnki</author>
      <license>BSD</license>
      <inlets>
         <bool32.rising name="t" description="trigger"/>
         <frac32 name="pitch" description="pitch modulation"/>
      </inlets>
      <outlets>
         <frac32buffer name="out" description="audio output"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map name="decay" description="amplitude decay"/>
         <frac32.u.map name="pitchdecay" description="pitch envelope decay"/>
         <frac32.u.map name="pitchenvamt" description="pitch envelope amount"/>
         <frac32.s.map.pitch name="basepitch" description="basic tuning"/>
         <frac32.u.map.gain name="click" description="amount of click at the beginning of the kick"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t envcounter =0;
int32_t pitchenvcounter =0;

int32_t k_decay;
int32_t k_pitchdecay;
int32_t k_pitchenv;
int32_t k_basepitch;

int32_t pitch;
int32_t phasor =0;
int32_t r;


bool ttrig = 0;]]></code.declaration>
      <code.krate><![CDATA[k_decay = ((8500000 - (param_decay>>4)));
k_pitchdecay = ((8500000 - (param_pitchdecay>>4)));
k_pitchenv = (param_pitchenvamt<<4);
MTOF(param_basepitch+inlet_pitch,k_basepitch);

if (inlet_t && !ttrig)
{
envcounter=(1<<27);
pitchenvcounter=(1<<27);
phasor = param_click>>1;
ttrig = 1;
}
else if (!inlet_t)
ttrig = 0;]]></code.krate>
      <code.srate><![CDATA[envcounter = ___SMMLS(envcounter,k_decay,envcounter);
pitchenvcounter = ___SMMLS(pitchenvcounter,k_pitchdecay,pitchenvcounter);

SINE2TINTERP(phasor,r);
r=___SMMUL(r,envcounter);

pitch = ___SMMLA(pitchenvcounter,k_pitchenv,k_basepitch);
phasor += pitch;
outlet_out=r;]]></code.srate>
   </obj.normal>
</objdefs>