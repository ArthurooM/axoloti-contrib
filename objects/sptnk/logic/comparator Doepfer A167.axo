<objdefs appVersion="1.0.9">
   <obj.normal id="comparator Doepfer A167" uuid="c69a40e8-59fa-414a-b8f4-75d118ec6bf0">
      <sDescription>Doepfer A167 like comparator.

Compares two inlets after scaling + offsetting them (remember to set gain 1 and gain 2 to some number, otherwise you&apos;ll get no output!

outlet 1 outputs a bool signal if signal 1&gt;signal 2 (+all subsequent offsetting and hysteresing)
Outlet 2 is the inverted of outlet 1</sDescription>
      <author>Sputnki</author>
      <license>BSD</license>
      <helpPatch>math.axh</helpPatch>
      <inlets>
         <frac32 name="in1" description="in1"/>
         <frac32 name="in2" description="in2"/>
      </inlets>
      <outlets>
         <bool32 name="out"/>
         <bool32 name="inv"/>
         <frac32 name="sum"/>
      </outlets>
      <displays>
         <bool32 name="cmp" noLabel="true"/>
      </displays>
      <params>
         <frac32.u.map.gain name="Gain1"/>
         <frac32.u.map.gain name="Gain2"/>
         <frac32.s.map name="Offset"/>
         <frac32.u.map name="Hysteresis"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[int32_t diff;
int32_t hyst;
bool prevstate;
bool state;
]]></code.declaration>
      <code.init><![CDATA[prevstate=0;
state=0;]]></code.init>
      <code.krate><![CDATA[diff=(___SMMUL(param_Gain1,inlet_in1)<<1)-(___SMMUL(param_Gain2,inlet_in2)<<1)+param_Offset;

if (!prevstate) //if previous state is zero (signal1<signal2)
	hyst=param_Hysteresis; //set the comparation term to the positive value
else
	hyst=-param_Hysteresis; //set te comparation term to the negative value

prevstate=state;

if (diff>hyst)
state=1;
else
state=0;

disp_cmp=state;
outlet_out=state;
outlet_inv=!state;
outlet_sum=diff;]]></code.krate>
   </obj.normal>
</objdefs>