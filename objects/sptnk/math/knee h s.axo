<objdefs appVersion="1.0.9">
   <obj.normal id="knee h s" uuid="7d5ef61ere6d651ee6bbd8437ef3612125dfb225">
      <sDescription>Continuous slope with two angular coefficients (knee shape). Knob determines the horizontal position of the knee. Mod input allows to edit the position live. S-rate</sDescription>
      <author>Sputnki</author>
      <license>BSD</license>
      <inlets>
         <frac32buffer.positive name="in"/>
         <frac32.bipolar name="mod"/>
      </inlets>
      <outlets>
         <frac32buffer.positive name="out"/>
      </outlets>
      <displays/>
      <params>
         <frac32.u.map.gain name="amp" noLabel="true"/>
      </params>
      <attribs/>
      <code.declaration><![CDATA[uint32_t param;]]></code.declaration>
      <code.krate><![CDATA[/*
 * inlet_in=x
 * outlet_out=y
 * 
 * param_amp= knob value ( ParameterFrac32UMapGain type)
 * inlet_mod= additional mod input value ( inletFrac32Bipolar type )
 * the param_amp and inlet_mod are then added to provide the K parameter
*/

param = param_amp + (inlet_mod<<4); // this is K
float fparam = (param>>4);
]]></code.krate>
      <code.srate><![CDATA[float temp;
float input = (inlet_in);

if (inlet_in< (param>>4)) //if x<K -> output the first part of the ramp (this one works as intended)
{
	temp=(281474976710656.f/(fparam)); 
	outlet_out= ___SMMUL((int)(temp/2),inlet_in)<<11;
}
else //if x>K -> output the second part of the ramp (and here comes the trouble, it does not work as expected at all)

{	
	temp=(281474976710656.f/((1<<27)-fparam)); 
	outlet_out=(___SMMUL((int)(temp/2),inlet_in-(param>>4))<<11) +(1<<26); 
}
]]></code.srate>
   </obj.normal>
</objdefs>