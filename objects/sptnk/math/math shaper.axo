<objdefs appVersion="1.0.11">
   <obj.normal id="math shaper" uuid="cee49a06-9d0c-4464-a2ff-2ea87d2f8cb9">
      <sDescription>A waveshaper object based on the division of two 4th-order polynomials, real radices only.</sDescription>
      <author>Sputnki</author>
      <license>BSD</license>
      <inlets>
         <frac32buffer name="in"/>
         <frac32 name="z0"/>
         <frac32 name="z1"/>
         <frac32 name="z2"/>
         <frac32 name="z3"/>
         <frac32 name="p0"/>
         <frac32 name="p1"/>
         <frac32 name="p2"/>
         <frac32 name="p3"/>
      </inlets>
      <outlets>
         <frac32buffer name="out"/>
      </outlets>
      <displays/>
      <params>
         <frac32.s.map name="z0"/>
         <frac32.s.map name="z1"/>
         <frac32.s.map name="z2"/>
         <frac32.s.map name="z3"/>
         <frac32.s.map name="p0"/>
         <frac32.s.map name="p1"/>
         <frac32.s.map name="p2"/>
         <frac32.s.map name="p3"/>
      </params>
      <attribs>
         <spinner name="zeros" MinValue="0" MaxValue="4" DefaultValue="4"/>
         <spinner name="poles" MinValue="0" MaxValue="4" DefaultValue="4"/>
      </attribs>
      <code.declaration><![CDATA[int32_t coefs_z[4];
int32_t coefs_p[4];
int32_t n;
int32_t d;]]></code.declaration>
      <code.krate><![CDATA[coefs_z[0]=param_z0 + inlet_z0;
coefs_z[1]=param_z1 + inlet_z1;
coefs_z[2]=param_z2 + inlet_z2;
coefs_z[3]=param_z3 + inlet_z3;

coefs_p[0]=param_p0 + inlet_p0;
coefs_p[1]=param_p1 + inlet_p1;
coefs_p[2]=param_p2 + inlet_p2;
coefs_p[3]=param_p3 + inlet_p3;



for(int i=0;i<BUFSIZE;i++)
{
	n=1<<27;
	d=1<<27;
	for(int j=0;j<attr_zeros;j++)
		n = ___SMMUL(inlet_in[i]-coefs_z[j]<<2,n<<3);
	for(int j=0;j<attr_poles;j++)
		d = ___SMMUL(inlet_in[i]-coefs_p[j]<<2,d<<3);
	
	float temp = (float) n/d;
	temp*=134217728.0f;
	outlet_out[i]=temp;
}]]></code.krate>
   </obj.normal>
</objdefs>