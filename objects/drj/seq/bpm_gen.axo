<objdefs appVersion="1.0.11">
  <obj.normal id="bpm_gen" uuid="97d28f7343f81131b3a46af2af5eb6271132bb43">
    <sDescription>BPM generator</sDescription>
    <author>Are Leistad</author>
    <license>BSD</license>
    <inlets>
      <bool32.rising  name="reset" description="Reset phase"/>
    </inlets>
    <outlets>
      <bool32         name="out" description="BPM clock output"/>
    </outlets>
    <displays/>
    <params>
      <int32 name="bpm" noLabel="false">
        <MinValue i="1"/>
        <MaxValue i="1000"/>
      </int32>
      <int32 name="tenth" noLabel="false">
        <MinValue i="0"/>
        <MaxValue i="9"/>
      </int32>
      <int32 name="hundredth" noLabel="false">
        <MinValue i="0"/>
        <MaxValue i="9"/>
      </int32>
    </params>
    <attribs/>
    <code.declaration><![CDATA[

      uint32_t  phase;
      int32_t   old_reset;

    ]]></code.declaration>
    <code.init><![CDATA[

      phase     = 0;
      old_reset = 0;

    ]]></code.init>
    <code.krate><![CDATA[

      float bpm;
      uint32_t pacc;

      bpm = param_bpm + param_tenth * 0.1f + param_hundredth * 0.01f;
      //pacc = (uint32_t) ( bpm/3000.0f/60.0f * 4294967296 );
      pacc = (uint32_t) (bpm * 23860.92942222222);

      if( inlet_reset && !old_reset )
        {
          phase = 0;
        }
      else
        {
          phase += pacc;
        }
      old_reset = inlet_reset;

      if( phase > 0x80000000 )
        {
          outlet_out = 1;
        }
      else
        {
          outlet_out = 0;
        }

    ]]></code.krate>
  </obj.normal>
  <obj.normal id="bpm_gen" uuid="93a46af2af5eb62ac132bb7d28f7343f81131b43">
    <sDescription>BPM generator, external inputs</sDescription>
    <author>Are Leistad</author>
    <license>BSD</license>
    <inlets>
      <bool32.rising   name="reset"     description="Reset phase"/>
      <int32.positive  name="bpm"       description="BPM, integer"/>
      <int32.positive  name="tenth"     description="BPM, tenths"/>
      <int32.positive  name="hundredth" description="BPM, hundredths"/>
    </inlets>
    <outlets>
      <bool32 name="out" description="BPM clock output"/>
    </outlets>
    <displays/>
    <params/>
    <attribs/>
    <code.declaration><![CDATA[

      uint32_t  phase;
      int32_t   old_reset;

    ]]></code.declaration>
    <code.init><![CDATA[

      phase     = 0;
      old_reset = 0;

    ]]></code.init>
    <code.krate><![CDATA[

      float bpm;
      uint32_t pacc;

      bpm = inlet_bpm + inlet_tenth * 0.1f + inlet_hundredth * 0.01f;
      //pacc = (uint32_t) ( bpm / 3000.0f / 60.0f * 4294967296 );
      pacc = (uint32_t) (bpm * 23860.92942222222);

      if( inlet_reset && !old_reset )
        {
          phase = 0;
        }
      else
        {
          phase += pacc;
        }
      old_reset = inlet_reset;

      if( phase > 0x80000000 )
        {
          outlet_out = 1;
        }
      else
        {
          outlet_out = 0;
        }

    ]]></code.krate>
  </obj.normal>
</objdefs>