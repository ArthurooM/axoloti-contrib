<objdefs appVersion="1.0.12">
  <obj.normal id="radio_switch_2" uuid="bw21b756123291015a22d33cbb0267f775af0a4e">
    <sDescription>2 way radio switch</sDescription>
    <author>Are Leistad</author>
    <license>BSD</license>
    <inlets>
      <bool32.rising name="i0" description="Input 0"/>
      <bool32.rising name="i1" description="Input 1"/>
    </inlets>
    <outlets>
      <bool32 name="o0" description="Output 0"/>
      <bool32 name="o1" description="Output 1"/>
      <int32  name="out" description="Output number"/>
    </outlets>
    <attribs>
      <combo name="default">
         <MenuEntries>
            <string>0</string>
            <string>1</string>
         </MenuEntries>
         <CEntries>
            <string>0</string>
            <string>1</string>
         </CEntries>
      </combo>
    </attribs>
    <code.declaration><![CDATA[
      int32_t n;
    ]]></code.declaration>
    <code.init><![CDATA[
      n = attr_default;
    ]]></code.init>
    <code.krate><![CDATA[
      int32_t new_n = -1;
           if( n != 0 && inlet_i0 ) { new_n = 0; }
      else if( n != 1 && inlet_i1 ) { new_n = 1; }
      if( new_n >= 0 )
        {
          n = new_n;
        }
      outlet_o0 = 0;
      outlet_o1 = 0;
      switch( n )
        {
          case 1 : outlet_o0 = 1; break;
          case 2 : outlet_o1 = 1; break;
        }
      outlet_out = n;
    ]]></code.krate>
  </obj.normal>
  <obj.normal id="radio_switch_2n" uuid="bw91015aaab1b7561232453cbb02675175af0a4e">
    <sDescription>2 way radio switch</sDescription>
    <author>Are Leistad</author>
    <license>BSD</license>
    <inlets>
      <bool32.rising name="i0" description="Input 0"/>
      <bool32.rising name="i1" description="Input 1"/>
    </inlets>
    <outlets>
      <int32  name="out" description="Output number"/>
    </outlets>
    <attribs>
      <combo name="default">
         <MenuEntries>
            <string>0</string>
            <string>1</string>
         </MenuEntries>
         <CEntries>
            <string>0</string>
            <string>1</string>
         </CEntries>
      </combo>
    </attribs>
    <code.declaration><![CDATA[
      int32_t n;
    ]]></code.declaration>
    <code.init><![CDATA[
      n = attr_default;
    ]]></code.init>
    <code.krate><![CDATA[
      int32_t new_n = -1;
           if( n != 0 && inlet_i0 ) { new_n = 0; }
      else if( n != 1 && inlet_i1 ) { new_n = 1; }
      if( new_n >= 0 )
        {
          n = new_n;
        }
      outlet_out = n;
    ]]></code.krate>
  </obj.normal>
  <obj.normal id="radio_switch_4" uuid="bw415a22d33b75612329101cbb0267f775af0a4e">
    <sDescription>4 way radio switch</sDescription>
    <author>Are Leistad</author>
    <license>BSD</license>
    <inlets>
      <bool32.rising name="i0" description="Input 0"/>
      <bool32.rising name="i1" description="Input 1"/>
      <bool32.rising name="i2" description="Input 2"/>
      <bool32.rising name="i3" description="Input 3"/>
    </inlets>
    <outlets>
      <bool32 name="o0" description="Output 0"/>
      <bool32 name="o1" description="Output 1"/>
      <bool32 name="o2" description="Output 2"/>
      <bool32 name="o3" description="Output 3"/>
      <int32  name="out" description="Output number"/>
    </outlets>
    <attribs>
      <combo name="default">
         <MenuEntries>
            <string>0</string>
            <string>1</string>
            <string>2</string>
            <string>3</string>
         </MenuEntries>
         <CEntries>
            <string>0</string>
            <string>1</string>
            <string>2</string>
            <string>3</string>
         </CEntries>
      </combo>
    </attribs>
    <code.declaration><![CDATA[
      int32_t n;
    ]]></code.declaration>
    <code.init><![CDATA[
      n = attr_default;
    ]]></code.init>
    <code.krate><![CDATA[
      int32_t new_n = -1;
           if( n != 0 && inlet_i0 ) { new_n = 0; }
      else if( n != 1 && inlet_i1 ) { new_n = 1; }
      else if( n != 2 && inlet_i2 ) { new_n = 2; }
      else if( n != 3 && inlet_i3 ) { new_n = 3; }
      if( new_n >= 0 )
        {
          n = new_n;
        }
      outlet_o0 = 0;
      outlet_o1 = 0;
      outlet_o2 = 0;
      outlet_o3 = 0;
      switch( n )
        {
          case 0 : outlet_o0 = 1; break;
          case 1 : outlet_o1 = 1; break;
          case 2 : outlet_o2 = 1; break;
          case 3 : outlet_o3 = 1; break;
        }
      outlet_out = n;
    ]]></code.krate>
  </obj.normal>
  <obj.normal id="radio_switch_4n" uuid="bw5612329101cbb024112f2d33b767f775af0a34">
    <sDescription>4 way radio switch</sDescription>
    <author>Are Leistad</author>
    <license>BSD</license>
    <inlets>
      <bool32.rising name="i0" description="Input 0"/>
      <bool32.rising name="i1" description="Input 1"/>
      <bool32.rising name="i2" description="Input 2"/>
      <bool32.rising name="i3" description="Input 3"/>
    </inlets>
    <outlets>
      <int32  name="out" description="Output number"/>
    </outlets>
    <attribs>
      <combo name="default">
         <MenuEntries>
            <string>0</string>
            <string>1</string>
            <string>2</string>
            <string>3</string>
         </MenuEntries>
         <CEntries>
            <string>0</string>
            <string>1</string>
            <string>2</string>
            <string>3</string>
         </CEntries>
      </combo>
    </attribs>
    <code.declaration><![CDATA[
      int32_t n;
    ]]></code.declaration>
    <code.init><![CDATA[
      n = attr_default;
    ]]></code.init>
    <code.krate><![CDATA[
      int32_t new_n = -1;
           if( n != 0 && inlet_i0 ) { new_n = 0; }
      else if( n != 1 && inlet_i1 ) { new_n = 1; }
      else if( n != 2 && inlet_i2 ) { new_n = 2; }
      else if( n != 3 && inlet_i3 ) { new_n = 3; }
      if( new_n >= 0 )
        {
          n = new_n;
        }
      outlet_out = n;
    ]]></code.krate>
  </obj.normal>
  <obj.normal id="radio_switch_8" uuid="bw1232b101415a22d323756cbb0267f775af0ac2">
    <sDescription>8 way radio switch</sDescription>
    <author>Are Leistad</author>
    <license>BSD</license>
    <inlets>
      <bool32.rising name="i0" description="Input 0"/>
      <bool32.rising name="i1" description="Input 1"/>
      <bool32.rising name="i2" description="Input 2"/>
      <bool32.rising name="i3" description="Input 3"/>
      <bool32.rising name="i4" description="Input 4"/>
      <bool32.rising name="i5" description="Input 5"/>
      <bool32.rising name="i6" description="Input 6"/>
      <bool32.rising name="i7" description="Input 7"/>
    </inlets>
    <outlets>
      <bool32 name="o0" description="Output 0"/>
      <bool32 name="o1" description="Output 1"/>
      <bool32 name="o2" description="Output 2"/>
      <bool32 name="o3" description="Output 3"/>
      <bool32 name="o4" description="Output 4"/>
      <bool32 name="o5" description="Output 5"/>
      <bool32 name="o6" description="Output 6"/>
      <bool32 name="o7" description="Output 7"/>
      <int32  name="out" description="Output number"/>
    </outlets>
    <attribs>
      <combo name="default">
         <MenuEntries>
            <string>0</string>
            <string>1</string>
            <string>2</string>
            <string>3</string>
            <string>4</string>
            <string>5</string>
            <string>6</string>
            <string>7</string>
         </MenuEntries>
         <CEntries>
            <string>0</string>
            <string>1</string>
            <string>2</string>
            <string>3</string>
            <string>4</string>
            <string>5</string>
            <string>6</string>
            <string>7</string>
         </CEntries>
      </combo>
    </attribs>
    <code.declaration><![CDATA[
      int32_t n;
    ]]></code.declaration>
    <code.init><![CDATA[
      n = attr_default;
    ]]></code.init>
    <code.krate><![CDATA[
      int32_t new_n = -1;
           if( n != 0 && inlet_i0 ) { new_n = 0; }
      else if( n != 1 && inlet_i1 ) { new_n = 1; }
      else if( n != 2 && inlet_i2 ) { new_n = 2; }
      else if( n != 3 && inlet_i3 ) { new_n = 3; }
      else if( n != 4 && inlet_i4 ) { new_n = 4; }
      else if( n != 5 && inlet_i5 ) { new_n = 5; }
      else if( n != 6 && inlet_i6 ) { new_n = 6; }
      else if( n != 7 && inlet_i7 ) { new_n = 7; }
      else if( new_n >= 0 )
        {
          n = new_n;
        }
      outlet_o0 = 0;
      outlet_o1 = 0;
      outlet_o2 = 0;
      outlet_o3 = 0;
      outlet_o4 = 0;
      outlet_o5 = 0;
      outlet_o6 = 0;
      outlet_o7 = 0;
      switch( n )
        {
          case 0 : outlet_o0 = 1; break;
          case 1 : outlet_o1 = 1; break;
          case 2 : outlet_o2 = 1; break;
          case 3 : outlet_o3 = 1; break;
          case 4 : outlet_o4 = 1; break;
          case 5 : outlet_o5 = 1; break;
          case 6 : outlet_o6 = 1; break;
          case 7 : outlet_o7 = 1; break;
        }
      outlet_out = n;
    ]]></code.krate>
  </obj.normal>
  <obj.normal id="radio_switch_8n" uuid="bw3756cbb0261423a22d325a7f7710a2b10f0ac2">
    <sDescription>8 way radio switch</sDescription>
    <author>Are Leistad</author>
    <license>BSD</license>
    <inlets>
      <bool32.rising name="i0" description="Input 0"/>
      <bool32.rising name="i1" description="Input 1"/>
      <bool32.rising name="i2" description="Input 2"/>
      <bool32.rising name="i3" description="Input 3"/>
      <bool32.rising name="i4" description="Input 4"/>
      <bool32.rising name="i5" description="Input 5"/>
      <bool32.rising name="i6" description="Input 6"/>
      <bool32.rising name="i7" description="Input 7"/>
    </inlets>
    <outlets>
      <int32  name="out" description="Output number"/>
    </outlets>
    <attribs>
      <combo name="default">
         <MenuEntries>
            <string>0</string>
            <string>1</string>
            <string>2</string>
            <string>3</string>
            <string>4</string>
            <string>5</string>
            <string>6</string>
            <string>7</string>
         </MenuEntries>
         <CEntries>
            <string>0</string>
            <string>1</string>
            <string>2</string>
            <string>3</string>
            <string>4</string>
            <string>5</string>
            <string>6</string>
            <string>7</string>
         </CEntries>
      </combo>
    </attribs>
    <code.declaration><![CDATA[
      int32_t n;
    ]]></code.declaration>
    <code.init><![CDATA[
      n = attr_default;
    ]]></code.init>
    <code.krate><![CDATA[
      int32_t new_n = -1;
           if( n != 0 && inlet_i0 ) { new_n = 0; }
      else if( n != 1 && inlet_i1 ) { new_n = 1; }
      else if( n != 2 && inlet_i2 ) { new_n = 2; }
      else if( n != 3 && inlet_i3 ) { new_n = 3; }
      else if( n != 4 && inlet_i4 ) { new_n = 4; }
      else if( n != 5 && inlet_i5 ) { new_n = 5; }
      else if( n != 6 && inlet_i6 ) { new_n = 6; }
      else if( n != 7 && inlet_i7 ) { new_n = 7; }
      else if( new_n >= 0 )
        {
          n = new_n;
        }
      outlet_out = n;
    ]]></code.krate>
  </obj.normal>
</objdefs>