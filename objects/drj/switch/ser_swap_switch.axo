<objdefs appVersion="1.0.8">
  <obj.normal id="ser_swap_1" uuid="bwca1a296fb35acc28765669829101d3ee7f0181">
    <sDescription>Mono swappable serial routing switch</sDescription>
    <author>Are Leistad</author>
    <license>BSD</license>
    <inlets>
      <frac32buffer name="i" description="Input"/>
      <frac32buffer name="i1" description="Device 1 input"/>
      <frac32buffer name="i2" description="Device 2 input"/>
      <bool32 name="swap" description="Swap device 1 and 2 order"/>
    </inlets>
    <outlets>
      <frac32buffer name="o" description="Output"/>
      <frac32buffer name="o1" description="Device 1 output"/>
      <frac32buffer name="o2" description="Device 2 output"/>
    </outlets>
    <displays/>
    <params>
      <frac32.u.map.squaregain name="dev1vol" description="Device 1 volume"/>
      <frac32.u.map.squaregain name="dev2vol" description="Device 2 volume"/>
    </params>
    <attribs/>
    <code.krate><![CDATA[

      int32_t j,out;
      if( inlet_swap )
        {
          for( j = 0; j < BUFSIZE; ++j )
            {
              // Feed the input to device 2
              outlet_o2[j] = inlet_i[j];

              // Feed device 2 to device 1
              outlet_o1[j] = ___SMMUL( inlet_i2[j]<<3, param_dev2vol<<2 );

              // Feed device 1 to the output
              out = ___SMMUL( inlet_i1[j]<<3, param_dev1vol<<2 );

              outlet_o[j] = __SSAT(out,28);
            }
        }
      else
        {
          for( j = 0; j < BUFSIZE; ++j )
            {
              // Feed the input to device 1
              outlet_o1[j] = inlet_i[j];

              // Feed device 1 to device 2
              outlet_o2[j] = ___SMMUL( inlet_i1[j]<<3, param_dev1vol<<2 );

              // Feed device 2 to the output
              out = ___SMMUL( inlet_i2[j]<<3, param_dev2vol<<2 );

              outlet_o[j] = __SSAT(out,28);
            }
        }

    ]]></code.krate>
  </obj.normal>
  <obj.normal id="ser_swap_2" uuid="bwca15567f535acc210556698291abc3ee7f0181">
    <sDescription>Stereo swappable serial routing switch</sDescription>
    <author>Are Leistad</author>
    <license>BSD</license>
    <inlets>
      <frac32buffer name="il" description="L input"/>
      <frac32buffer name="ir" description="R input"/>
      <frac32buffer name="i1l" description="Device 1 L input"/>
      <frac32buffer name="i1r" description="Device 1 R input"/>
      <frac32buffer name="i2l" description="Device 2 L input"/>
      <frac32buffer name="i2r" description="Device 2 R input"/>
      <bool32 name="swap" description="Swap device 1 and 2 order"/>
    </inlets>
    <outlets>
      <frac32buffer name="ol" description="L output"/>
      <frac32buffer name="or" description="R output"/>
      <frac32buffer name="o1l" description="Device 1 L output"/>
      <frac32buffer name="o1r" description="Device 1 R output"/>
      <frac32buffer name="o2l" description="Device 2 L output"/>
      <frac32buffer name="o2r" description="Device 2 R output"/>
    </outlets>
    <displays/>
    <params>
      <frac32.u.map.squaregain name="dev1vol" description="Device 1 volume"/>
      <frac32.u.map.squaregain name="dev2vol" description="Device 2 volume"/>
    </params>
    <attribs/>
    <code.krate><![CDATA[

      int32_t j,outl,outr;
      if( inlet_swap )
        {
          for( j = 0; j < BUFSIZE; ++j )
            {
              // Feed the input to device 2
              outlet_o2l[j] = inlet_il[j];
              outlet_o2r[j] = inlet_ir[j];

              // Feed device 2 to device 1
              outlet_o1l[j] = ___SMMUL( inlet_i2l[j]<<3, param_dev2vol<<2 );
              outlet_o1r[j] = ___SMMUL( inlet_i2r[j]<<3, param_dev2vol<<2 );

              // Feed device 1 to the output
              outl = ___SMMUL( inlet_i1l[j]<<3, param_dev1vol<<2 );
              outr = ___SMMUL( inlet_i1r[j]<<3, param_dev1vol<<2 );

              outlet_ol[j] = __SSAT(outl,28);
              outlet_or[j] = __SSAT(outr,28);
            }
        }
      else
        {
          for( j = 0; j < BUFSIZE; ++j )
            {
              // Feed the input to device 1
              outlet_o1l[j] = inlet_il[j];
              outlet_o1r[j] = inlet_ir[j];

              // Feed device 1 to device 2
              outlet_o2l[j] = ___SMMUL( inlet_i1l[j]<<3, param_dev1vol<<2 );
              outlet_o2r[j] = ___SMMUL( inlet_i1r[j]<<3, param_dev1vol<<2 );

              // Feed device 2 to the output
              outl = ___SMMUL( inlet_i2l[j]<<3, param_dev2vol<<2 );
              outr = ___SMMUL( inlet_i2r[j]<<3, param_dev2vol<<2 );

              outlet_ol[j] = __SSAT(outl,28);
              outlet_or[j] = __SSAT(outr,28);
            }
        }

    ]]></code.krate>
  </obj.normal>
</objdefs>