<objdefs appVersion="1.0.8">
  <obj.normal id="par_swap_1" uuid="bwca1a296fb35ac448725339829101d3ee7f0181">
    <sDescription>Mono swappable parallel routing switch</sDescription>
    <author>Are Leistad</author>
    <license>BSD</license>
    <inlets>
      <frac32buffer name="i1" description="Input 1"/>
      <frac32buffer name="i2" description="Input 2"/>
      <bool32 name="swap" description="Swap device 1 and 2 outputs"/>
    </inlets>
    <outlets>
      <frac32buffer name="o1" description="Output 1"/>
      <frac32buffer name="o2" description="Output 2"/>
    </outlets>
    <displays/>
    <params>
      <frac32.u.map.squaregain name="dev1vol" description="Device 1 volume"/>
      <frac32.u.map.squaregain name="dev2vol" description="Device 2 volume"/>
    </params>
    <attribs/>
    <code.krate><![CDATA[

      int32_t j,out;
      if( inlet_swap )
        {
          for( j = 0; j < BUFSIZE; ++j )
            {
              // Feed input 1 to out 2
              // Feed input 2 to out 1
              outlet_o2[j] = ___SMMUL( inlet_i1[j]<<3, param_dev1vol<<2 );
              outlet_o1[j] = ___SMMUL( inlet_i2[j]<<3, param_dev2vol<<2 );
            }
        }
      else
        {
          for( j = 0; j < BUFSIZE; ++j )
            {
              // Feed input 1 to out 1
              // Feed input 2 to out 2
              outlet_o1[j] = ___SMMUL( inlet_i1[j]<<3, param_dev1vol<<2 );
              outlet_o2[j] = ___SMMUL( inlet_i2[j]<<3, param_dev2vol<<2 );
            }
        }

    ]]></code.krate>
  </obj.normal>
  <obj.normal id="par_swap_2" uuid="bwca1556bf535acc211205698291abc3ee7f0181">
    <sDescription>Stereo swappable parallel routing switch</sDescription>
    <author>Are Leistad</author>
    <license>BSD</license>
    <inlets>
      <frac32buffer name="i1l" description="Input 1 L"/>
      <frac32buffer name="i1r" description="Input 1 R"/>
      <frac32buffer name="i2l" description="Input 2 L"/>
      <frac32buffer name="i2r" description="Input 2 R"/>
      <bool32 name="swap" description="Swap device 1 and 2 outputs"/>
    </inlets>
    <outlets>
      <frac32buffer name="o1l" description="Output 1 L"/>
      <frac32buffer name="o1r" description="Output 1 R"/>
      <frac32buffer name="o2l" description="Output 2 L"/>
      <frac32buffer name="o2r" description="Output 2 R"/>
    </outlets>
    <displays/>
    <params>
      <frac32.u.map.squaregain name="dev1vol" description="Device 1 volume"/>
      <frac32.u.map.squaregain name="dev2vol" description="Device 2 volume"/>
    </params>
    <attribs/>
    <code.krate><![CDATA[

      int32_t j,outl,outr;
      if( inlet_swap )
        {
          for( j = 0; j < BUFSIZE; ++j )
            {
              // Feed input 1 to out 2
              // Feed input 2 to out 1
              outlet_o1l[j] = ___SMMUL( inlet_i2l[j]<<3, param_dev2vol<<2 );
              outlet_o1r[j] = ___SMMUL( inlet_i2r[j]<<3, param_dev2vol<<2 );
              outlet_o2l[j] = ___SMMUL( inlet_i1l[j]<<3, param_dev1vol<<2 );
              outlet_o2r[j] = ___SMMUL( inlet_i1r[j]<<3, param_dev1vol<<2 );
            }
        }
      else
        {
          for( j = 0; j < BUFSIZE; ++j )
            {
              // Feed input 1 to out 1
              // Feed input 2 to out 2
              outlet_o1l[j] = ___SMMUL( inlet_i1l[j]<<3, param_dev1vol<<2 );
              outlet_o1r[j] = ___SMMUL( inlet_i1r[j]<<3, param_dev1vol<<2 );
              outlet_o2l[j] = ___SMMUL( inlet_i2l[j]<<3, param_dev2vol<<2 );
              outlet_o2r[j] = ___SMMUL( inlet_i2r[j]<<3, param_dev2vol<<2 );
            }
        }

    ]]></code.krate>
  </obj.normal>
</objdefs>