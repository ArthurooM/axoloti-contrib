<objdefs appVersion="1.0.12">
   <obj.normal id="modulator" uuid="d82ab3cc-e9ca-4074-b0c3-c95f93f741b3">
      <sDescription>General purpose modulator object. Used to modulate other object through other objects.</sDescription>
      <author>Albert van der Zee</author>
      <license>GPL</license>
      <helpPatch></helpPatch>
      <inlets>
         <frac32.positive name="In"/>
         <frac32.bipolar name="ModIn"/>
         <frac32.positive name="ModHeadroom"/>
      </inlets>
      <outlets>
         <frac32.positive name="Out" description="output"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[int32_t oud_in;
int32_t oud_parameter;
int32_t output;]]></code.declaration>
      <code.init><![CDATA[oud_in = 0;
oud_parameter = 0;
output = 0;]]></code.init>
      <code.krate><![CDATA[// modulate ModIn
int32_t accum = __SSAT(inlet_ModIn + inlet_In,28);

// modulate ModHeadroom
accum = ___SMMLA((0x07FFFFFF - accum)<<3,inlet_ModHeadroom<<2,accum); 

// schrijf naar output
outlet_Out= accum;]]></code.krate>
   </obj.normal>
</objdefs>