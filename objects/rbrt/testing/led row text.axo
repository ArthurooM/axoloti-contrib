<objdefs appVersion="1.0.12">
   <obj.normal id="led row text" uuid="4f7abee2-7b87-48c9-877b-8a44fc0217aa">
      <license>GPL</license>
      <inlets>
         <bool32.rising name="redraw"/>
         <int32 name="row"/>
         <charptr32 name="text0"/>
         <charptr32 name="text1"/>
         <charptr32 name="text2"/>
         <charptr32 name="text3"/>
         <charptr32 name="text4"/>
         <charptr32 name="text5"/>
         <charptr32 name="text6"/>
         <charptr32 name="text7"/>
         <bool32.risingfalling name="mute"/>
      </inlets>
      <outlets>
         <int32 name="test"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <objref name="LED"/>
      </attribs>
      <code.declaration><![CDATA[bool trig;
bool mtrig;
bool doit;
uint8_t prerow;]]></code.declaration>
      <code.krate><![CDATA[if (!inlet_mute){
		if (inlet_redraw && !trig){trig = 1;doit = 1;}
		if (!inlet_mute && !mtrig){mtrig = 1;doit = 1;}	
		if (inlet_row != prerow) {doit = 1;prerow = inlet_row;}			
		if (doit && !attr_LED.ROW) {
			doit = 0;
			memcpy(&attr_LED.array[8],inlet_text0,8);
			memcpy(&attr_LED.array[17],inlet_text1,8);
			memcpy(&attr_LED.array[25],inlet_text2,8);
			memcpy(&attr_LED.array[34],inlet_text3,8);
			memcpy(&attr_LED.array[42],inlet_text4,8);
			memcpy(&attr_LED.array[51],inlet_text5,8);
			memcpy(&attr_LED.array[59],inlet_text6,8);
			memcpy(&attr_LED.array[68],inlet_text7,8);
			attr_LED.ROW = inlet_row + 1;
		}	
}
if (inlet_mute) mtrig = 0;
if (!inlet_redraw) trig = 0;]]></code.krate>
   </obj.normal>
</objdefs>