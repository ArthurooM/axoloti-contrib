<objdefs appVersion="1.0.12">
   <obj.normal id="led cell text" uuid="74a69241-1ee1-42e6-ad87-cf44479b4cf2">
      <license>GPL</license>
      <inlets>
         <charptr32 name="text"/>
         <bool32.risingfalling name="mute"/>
      </inlets>
      <outlets/>
      <displays/>
      <params/>
      <attribs>
         <objref name="LED"/>
         <spinner name="row" MinValue="0" MaxValue="3" DefaultValue="0"/>
         <spinner name="column" MinValue="0" MaxValue="7" DefaultValue="0"/>
      </attribs>
      <code.declaration><![CDATA[char pre [8];
bool mtrig;
bool doit;
int8_t fb;
int16_t nb;]]></code.declaration>
      <code.init><![CDATA[#define BARS_ONE_L  0x03
#define BARS_ONE_R  0x04
#define BARS_TWO    0x05
#define BARS_NONE   0x06]]></code.init>
      <code.krate><![CDATA[if (!inlet_mute){
	int i;
	for (i = 0;i < 8;i++) if (inlet_text [i] !=pre [i]) {pre[i] = inlet_text[i];doit = 1;}	
	if (!inlet_mute && !mtrig) {mtrig = 1;doit = 1;}
	if (doit && !attr_LED.ROW) {
			memcpy(&attr_LED.array[(attr_row * 68)+attr_LED.CELLOFFSET[attr_column]],inlet_text,8);
			doit = 0;	
			attr_LED.ROW = attr_row + 1;		
	}
}
if (inlet_mute) mtrig = 0;]]></code.krate>
   </obj.normal>
</objdefs>