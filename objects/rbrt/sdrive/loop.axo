<objdefs appVersion="1.0.12">
   <obj.normal id="loop" uuid="3e7c9188-72e5-4b68-8eed-ce751977287b">
      <sDescription>drives a phasor (saw-wave) for reading/writing data</sDescription>
      <author>robert schirmer</author>
      <license>BSD</license>
      <helpPatch>ldrive.axh</helpPatch>
      <inlets>
         <frac32.positive name="offset" description="offset inside the table"/>
         <frac32.positive name="range" description="length of the area to index,or loop end"/>
         <frac32.positive name="loopstart" description="loopstart inside &apos;range&apos;"/>
         <frac32.bipolar name="direction" description="speed modulation"/>
         <frac32.positive name="transpose" description="tansposition in semi-notes"/>
         <bool32.risingfalling name="play" description="toggle playback"/>
         <bool32.rising name="reset" description="reset to &apos;offset&apos; "/>
      </inlets>
      <outlets>
         <frac32buffer.positive name="phase" description="position inside table"/>
      </outlets>
      <displays/>
      <params/>
      <attribs>
         <objref name="wave" description="table to index"/>
         <spinner name="direction" description="forward or reverse" MinValue="-64" MaxValue="64" DefaultValue="64"/>
      </attribs>
      <code.declaration><![CDATA[uint8_t shift;
uint8_t scale;

uint32_t lrange;
uint32_t lstart;

int32_t t_speed;
uint32_t inc;
int32_t index;

bool play;
bool rro;]]></code.declaration>
      <code.init><![CDATA[shift =     (27-attr_wave.LENGTHPOW);
scale = (attr_wave.LENGTHPOW < 6) ? 0 : 4;]]></code.init>
      <code.krate><![CDATA[MTOFEXTENDED(inlet_transpose + (1<<22) + 512000,inc);
t_speed  = ((___SMMUL(inc,inlet_direction + (attr_direction <<21))) << 5) >> (attr_wave.LENGTHPOW - (scale + 2));
lstart = (___SMMUL(inlet_range,inlet_loopstart)<<5) << scale;
lstart = (t_speed >0) ? lstart : lstart - t_speed;
lrange = inlet_range << scale;

if (inlet_play && !play) {
	play = 1;
	index = 0;
	}
if (!inlet_play) play = 0;
	
if (inlet_reset && (!rro)) {
 	index = 0; 	
     rro = 1;
      }
if (!inlet_reset) rro = 0;

if (!lrange) play = 0;]]></code.krate>
      <code.srate><![CDATA[if (t_speed > 0){
      if (index >= lrange) index = lstart;
      } 
      else if (index <= lstart) index = lrange;

outlet_phase =  __USAT(((index >> scale) + inlet_offset),27) * play;
index += t_speed;]]></code.srate>
   </obj.normal>
</objdefs>