<objdefs appVersion="1.0.12">
   <obj.normal id="led cell value u" uuid="597ef6d2-5873-499f-8894-29da1f268e43">
      <license>GPL</license>
      <inlets>
         <frac32.positive name="in"/>
         <bool32.risingfalling name="mute"/>
      </inlets>
      <outlets/>
      <displays/>
      <params/>
      <attribs>
         <objref name="LED"/>
         <spinner name="row" MinValue="0" MaxValue="3" DefaultValue="0"/>
         <spinner name="column" MinValue="0" MaxValue="7" DefaultValue="0"/>
      </attribs>
      <code.declaration><![CDATA[int32_t v;
int32_t prev;
bool mtrig;
bool doit;
int8_t fb;
int16_t nb;]]></code.declaration>
      <code.init><![CDATA[#define BARS_ONE_L  0x03
#define BARS_ONE_R  0x04
#define BARS_TWO    0x05
#define BARS_NONE   0x06]]></code.init>
      <code.krate><![CDATA[if (!inlet_mute){
	v = inlet_in;
	if (!inlet_mute && !mtrig) {mtrig = 1;doit = 1;}
	if (v != prev) doit = 1;
	if (doit && !attr_LED.ROW) {
			if (v <= 0) v = 0;
			prev = v;
			doit = 0;
			memset(attr_LED.array + attr_LED.CELLOFFSET [attr_column] + (attr_row * 68),BARS_NONE,8);
			nb = (((v>>20)+1) << 4) >> 7;
			fb = nb >> 1;
			memset(attr_LED.array + attr_LED.CELLOFFSET [attr_column]+(attr_row * 68),BARS_TWO,fb);
			if(nb%2) attr_LED.array[fb + attr_LED.CELLOFFSET [attr_column]+(attr_row * 68)] = BARS_ONE_L;		
			attr_LED.ROW = attr_row + 1;	
	}
}
if (inlet_mute) mtrig = 0;]]></code.krate>
   </obj.normal>
</objdefs>