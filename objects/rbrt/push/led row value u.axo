<objdefs appVersion="1.0.12">
   <obj.normal id="led row value u" uuid="06f9b7a2-d56b-4ae6-a9ad-44b27b768fa3">
      <license>GPL</license>
      <inlets>
         <bool32.rising name="redraw"/>
         <int32 name="row"/>
         <frac32.positive name="v0"/>
         <frac32.positive name="v1"/>
         <frac32.positive name="v2"/>
         <frac32.positive name="v3"/>
         <frac32.positive name="v4"/>
         <frac32.positive name="v5"/>
         <frac32.positive name="v6"/>
         <frac32.positive name="v7"/>
         <bool32.risingfalling name="mute"/>
      </inlets>
      <outlets/>
      <displays/>
      <params/>
      <attribs>
         <objref name="LEDmaster"/>
         <spinner name="row" MinValue="0" MaxValue="3" DefaultValue="0"/>
      </attribs>
      <code.declaration><![CDATA[bool trig;
bool mtrig;

int8_t fb;
int16_t nb;

uint8_t prerow;
uint8_t count;

int32_t in [8];
int32_t prev [8];
int32_t v;

int i;
bool doit;]]></code.declaration>
      <code.init><![CDATA[#define BARS_ONE_L  0x03
#define BARS_ONE_R  0x04
#define BARS_TWO    0x05
#define BARS_NONE   0x06]]></code.init>
      <code.krate><![CDATA[if (!inlet_mute) {
	in [0] = inlet_v0;
	in [1] = inlet_v1;
	in [2] = inlet_v2;
	in [3] = inlet_v3;
	in [4] = inlet_v4;
	in [5] = inlet_v5;
	in [6] = inlet_v6;
	in [7] = inlet_v7;

	if (in[count] != prev[count]) {prev[count] = in [count];doit = 1;}
	if (inlet_redraw && !trig) {trig = 1;doit = 1;}
	if (!inlet_mute && !mtrig) {mtrig = 1;doit = 1;}
	if (inlet_row != prerow) {doit = 1;prerow = inlet_row;}

	if (doit && !attr_LEDmaster.ROW){
		doit = 0;
		for (i = 0;i < 8;i ++){
			attr_LEDmaster.array[8 + attr_LEDmaster.CELLOFFSET [i]] = 32;
			v = in[i];
			if (v <= 0) v = 0;
			memset(attr_LEDmaster.array + attr_LEDmaster.CELLOFFSET [i],BARS_NONE,8);
			nb = (((v>>20)+1) << 4) >> 7;
			fb = nb >> 1;
			memset(attr_LEDmaster.array + attr_LEDmaster.CELLOFFSET [i],BARS_TWO,fb);
			if(nb%2) attr_LEDmaster.array[fb + attr_LEDmaster.CELLOFFSET [i]] = BARS_ONE_L;		
			}
		attr_LEDmaster.ROW = ((inlet_row + attr_row) + 1) %5;
	}
	count ++;
	count = count %8;
}
	if (!inlet_redraw) trig = 0;
	if (inlet_mute) mtrig = 0;]]></code.krate>
   </obj.normal>
</objdefs>