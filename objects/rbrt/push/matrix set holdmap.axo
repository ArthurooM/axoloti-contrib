<objdefs appVersion="1.0.12">
   <obj.normal id="matrix set holdmap" uuid="ba5a20e7-e89c-42aa-8716-a7d2a0818f4b">
      <sDescription>sends a note / a velocity when either changes</sDescription>
      <author>robert schirmer</author>
      <license>BSD</license>
      <helpPatch>midi_out.axh</helpPatch>
      <inlets>
         <bool32.risingfalling name="select"/>
         <int32 name="pad"/>
         <int32.positive name="onClr"/>
         <int32.positive name="offClr"/>
         <int32.positive name="selClr"/>
         <bool32.rising name="redraw"/>
         <bool32.risingfalling name="mute"/>
      </inlets>
      <outlets/>
      <displays/>
      <params/>
      <attribs>
         <objref name="holdmap"/>
         <spinner name="thin" MinValue="0" MaxValue="20" DefaultValue="10"/>
      </attribs>
      <code.declaration><![CDATA[uint8_t out [64];
uint8_t preout [64];
uint8_t counter;
uint8_t mcolor [4];
uint8_t mbrt;
bool trig;
uint8_t thin;

// calculate color and brightness
uint8_t getcolor(uint8_t color,uint8_t brightness)
{
	uint8_t result;
	uint8_t bness;
	if (color > 1) bness = (2-(brightness));
	else bness = brightness;
	result = color + bness;
	return result;
}]]></code.declaration>
      <code.krate><![CDATA[if (!inlet_mute){
if (inlet_redraw && !trig){
	trig = 1;
	int i;
	for (i = 0;i < 64;i++) preout [i] = 128;
}
if (!inlet_redraw) trig = 0;

if (attr_holdmap.array [counter]) out [counter] = inlet_onClr;
else out [counter]  = inlet_offClr;

//override the selected pad
if (inlet_select) out [inlet_pad] = inlet_selClr;	

// send output map 
if (!thin){
	if ((out[counter] != preout [counter]) && !MidiGetOutputBufferPending(MIDI_DEVICE_USB_HOST)){
				MidiSend3(MIDI_DEVICE_USB_HOST,2, MIDI_NOTE_ON,counter + 36,out [counter]);
				thin = attr_thin;
				preout [counter] = out [counter];
		}	
}
else thin --;

	counter ++;
	counter = counter %64;
}]]></code.krate>
   </obj.normal>
</objdefs>