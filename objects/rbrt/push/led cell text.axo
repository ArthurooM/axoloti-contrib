<objdefs appVersion="1.0.12">
   <obj.normal id="led cell text" uuid="ac5c0fe4-0998-49b8-9622-43a4f5c8cd17">
      <license>GPL</license>
      <inlets>
         <charptr32 name="text"/>
         <bool32.risingfalling name="redraw"/>
         <bool32.rising name="mute"/>
      </inlets>
      <outlets/>
      <displays/>
      <params/>
      <attribs>
         <spinner name="row" MinValue="0" MaxValue="3" DefaultValue="0"/>
         <spinner name="column" MinValue="0" MaxValue="7" DefaultValue="0"/>
         <objref name="LEDmaster"/>
      </attribs>
      <code.declaration><![CDATA[int8_t fb;
int16_t nb;
uint16_t offset;
bool doit;
bool trig;
bool mtrig;]]></code.declaration>
      <code.init><![CDATA[#define BARS_ONE_L  0x03
#define BARS_ONE_R  0x04
#define BARS_TWO    0x05
#define BARS_NONE   0x06

offset = attr_LEDmaster.array [attr_column+308] + (attr_row*77);]]></code.init>
      <code.krate><![CDATA[if (!inlet_mute && !mtrig) {mtrig = 1;doit = 1;}
		if (inlet_mute) mtrig = 0;
if (!inlet_mute){
if (inlet_redraw && !trig) {trig = 1;doit = 1;}
		if (!inlet_redraw) trig = 0;
	if (doit && !attr_LEDmaster.ROW) {
		memset(&attr_LEDmaster.array[offset],32,8);
		memcpy(&attr_LEDmaster.array[offset],inlet_text,strlen (inlet_text));
		attr_LEDmaster.ROW = attr_row +1;
		doit = 0;
		}
}]]></code.krate>
   </obj.normal>
</objdefs>