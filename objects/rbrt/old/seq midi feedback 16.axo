<objdefs appVersion="1.0.11">
   <obj.normal id="seq midi feedback 16" uuid="8d1a061d-0c5b-41a9-8caa-bae0bd593b67">
      <sDescription>visual feedback of table data for bidirectional midi-controllers (f.i. novation launchpad,livid base).
16 elements of a table are mapped to midi - notes.</sDescription>
      <author>Robert Schirmer</author>
      <license>BSD</license>
      <helpPatch>step_seq.axh</helpPatch>
      <rotatedParams>true</rotatedParams>
      <inlets>
         <int32 name="offset" description="offset in the table"/>
         <int32 name="step" description="current step"/>
         <frac32.bipolar name="delay" description="delay time for step position display"/>
         <int32 name="velon" description="velocity on modulation"/>
      </inlets>
      <outlets/>
      <displays/>
      <params>
         <int32.mini name="i0" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i1" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i2" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i3" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i4" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i5" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i6" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i7" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i8" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i9" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i10" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i11" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i12" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i13" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i14" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i15" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32 name="on" description="note velocity if step &gt; 0">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32>
         <int32 name="off" description="note velocity if step &lt;= 0">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32>
         <bool32.tgl name="clock" description="display the current step"/>
         <int32 name="step" description="velocity for current step">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32>
      </params>
      <attribs>
         <objref name="table"/>
         <combo name="device">
            <MenuEntries>
               <string>din</string>
               <string>usb host port 1</string>
               <string>usb host port 2</string>
               <string>usb host port 3</string>
               <string>usb host port 4</string>
               <string>internal port 1</string>
               <string>internal port 2</string>
               <string>usb device port 1</string>
            </MenuEntries>
            <CEntries>
               <string>MIDI_DEVICE_DIN, 1</string>
               <string>MIDI_DEVICE_USB_HOST, 1</string>
               <string>MIDI_DEVICE_USB_HOST, 2</string>
               <string>MIDI_DEVICE_USB_HOST, 3</string>
               <string>MIDI_DEVICE_USB_HOST, 4</string>
               <string>MIDI_DEVICE_INTERNAL, 1</string>
               <string>MIDI_DEVICE_INTERNAL, 2</string>
               <string>MIDI_DEVICE_USB_DEVICE, 1</string>
            </CEntries>
         </combo>
         <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="0"/>
      </attribs>
      <code.declaration><![CDATA[int ntrig;
int rtrig;
int prev;
int prevon;
int32_t val;

int32_t map[16];

int v;
int i;
int vt;
int trigt;
int prevt[16];]]></code.declaration>
      <code.init><![CDATA[{ 
  int i;
  for(i=0;i<16;i++) prevt[i]= -666 ;}]]></code.init>
      <code.krate><![CDATA[map[0] = param_i0;
map[1] = param_i1;
map[2] = param_i2;
map[3] = param_i3;
map[4] = param_i4;
map[5] = param_i5;
map[6] = param_i6;
map[7] = param_i7;
map[8] = param_i8;
map[9] = param_i9;
map[10] = param_i10;
map[11] = param_i11;
map[12] = param_i12;
map[13] = param_i13;
map[14] = param_i14;
map[15] = param_i15;


//re-init

if (inlet_velon != prevon)
{ 
  int i;
  for(i=0;i<16;i++) prevt[i]= -666 ;prevon = inlet_velon;}

//display steps
{ 
  i += 1;
  if (i == 16) i = 0; 
  vt = attr_table.array[__USAT((inlet_offset + i),attr_table.LENGTHPOW)]<<attr_table.GAIN;
if (prevt[i] != vt ) trigt = 0;
prevt[i] = vt;
if (vt && (!trigt)) {
MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON + (attr_channel-1),map[i],(param_on + inlet_velon));  trigt=1;
}
if ((!vt) && (!trigt)){
MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON + (attr_channel-1),map[i],param_off);  trigt=1;
}
 }

//paint step index
if (param_clock) {
v = attr_table.array[__USAT((inlet_offset + inlet_step),attr_table.LENGTHPOW)]<<attr_table.GAIN ;
if ((inlet_step  != prev) && !ntrig) {
  val = 1 << 30;
  ntrig = 1;
  MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON + (attr_channel-1),map[inlet_step],param_step);
}
else {
  if (!(inlet_step != prev))
    ntrig = 0;
  if (val>0) {
    int32_t t;
    MTOF(-((1<<12 )- inlet_delay),t);
     val -= t>>3;
     if (val<=0) {
          if (v) MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON + (attr_channel-1),map[inlet_step],(param_on + inlet_velon));
     	else
     	MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON + (attr_channel-1),map[inlet_step],param_off);
     	  	     }
  } 
}
prev = inlet_step;
}]]></code.krate>
   </obj.normal>
</objdefs>