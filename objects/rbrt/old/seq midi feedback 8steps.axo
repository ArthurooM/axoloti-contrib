<objdefs appVersion="1.0.11">
   <obj.normal id="seq midi feedback 8steps" uuid="d6ec0b97-dfd4-44d4-9f6e-6782f3faac92">
      <sDescription>visual feedback of step-sequencer position for bidirectional midi-controllers (f.i. novation launchpad,livid base).
the value at inlet &apos;step&apos; are mapped to 8 midi-notes.</sDescription>
      <author>Robert Schirmer</author>
      <license>BSD</license>
      <helpPatch>step_seq.axh</helpPatch>
      <rotatedParams>true</rotatedParams>
      <inlets>
         <int32 name="step" description="current step"/>
         <frac32.bipolar name="delay" description="delay time for step position display"/>
      </inlets>
      <outlets/>
      <displays/>
      <params>
         <int32.mini name="i0" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i1" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i2" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i3" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i4" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i5" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i6" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32.mini name="i7" description="map the step to midi notes" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32.mini>
         <int32 name="step" description="note velocity if step &gt; 0">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32>
      </params>
      <attribs>
         <objref name="table"/>
         <combo name="device">
            <MenuEntries>
               <string>din</string>
               <string>usb host port 1</string>
               <string>usb host port 2</string>
               <string>usb host port 3</string>
               <string>usb host port 4</string>
               <string>internal port 1</string>
               <string>internal port 2</string>
               <string>usb device port 1</string>
            </MenuEntries>
            <CEntries>
               <string>MIDI_DEVICE_DIN, 1</string>
               <string>MIDI_DEVICE_USB_HOST, 1</string>
               <string>MIDI_DEVICE_USB_HOST, 2</string>
               <string>MIDI_DEVICE_USB_HOST, 3</string>
               <string>MIDI_DEVICE_USB_HOST, 4</string>
               <string>MIDI_DEVICE_INTERNAL, 1</string>
               <string>MIDI_DEVICE_INTERNAL, 2</string>
               <string>MIDI_DEVICE_USB_DEVICE, 1</string>
            </CEntries>
         </combo>
         <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="0"/>
      </attribs>
      <code.declaration><![CDATA[int ntrig;
int32_t val;
int prev;
int32_t map[8];
int i;]]></code.declaration>
      <code.krate><![CDATA[map[0] = param_i0;
map[1] = param_i1;
map[2] = param_i2;
map[3] = param_i3;
map[4] = param_i4;
map[5] = param_i5;
map[6] = param_i6;
map[7] = param_i7;

//paint step index
if ((inlet_step  != prev) && !ntrig) {
  val = 1 << 30;
  ntrig = 1;
  MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON + (attr_channel-1),map[inlet_step],param_step);
}
else {
  if (!(inlet_step != prev))
    ntrig = 0;
  if (val>0) {
    int32_t t;
    MTOF(-((1<<12 )- inlet_delay),t);
     val -= t>>3;
     if (val<=0) {
          MidiSend3((midi_device_t) attr_device, MIDI_NOTE_ON + (attr_channel-1),map[inlet_step],0);
     	
     	  	     }
  } 
}
prev = inlet_step;]]></code.krate>
   </obj.normal>
</objdefs>