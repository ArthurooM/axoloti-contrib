<objdefs appVersion="1.0.11">
   <obj.normal id="cc send 8" uuid="b878aae8-2a28-4f01-8581-5d87525a3b9e">
      <sDescription>sends 8 midi control changes,starting from &apos;startcc&apos;</sDescription>
      <author>robert schirmer</author>
      <license>BSD</license>
      <helpPatch>midi_out.axh</helpPatch>
      <inlets>
         <frac32.positive name="v0"/>
         <frac32.positive name="v1"/>
         <frac32.positive name="v2"/>
         <frac32.positive name="v3"/>
         <frac32.positive name="v4"/>
         <frac32.positive name="v5"/>
         <frac32.positive name="v6"/>
         <frac32.positive name="v7"/>
         <int32 name="startcc"/>
      </inlets>
      <outlets/>
      <displays/>
      <params>
         <int32 name="startcc" noLabel="true">
            <MinValue i="0"/>
            <MaxValue i="127"/>
         </int32>
      </params>
      <attribs>
         <combo name="device">
            <MenuEntries>
               <string>din</string>
               <string>usb host port 1</string>
               <string>usb host port 2</string>
               <string>usb host port 3</string>
               <string>usb host port 4</string>
               <string>internal port 1</string>
               <string>internal port 2</string>
               <string>usb device port 1</string>
            </MenuEntries>
            <CEntries>
               <string>MIDI_DEVICE_DIN, 1</string>
               <string>MIDI_DEVICE_USB_HOST, 1</string>
               <string>MIDI_DEVICE_USB_HOST, 2</string>
               <string>MIDI_DEVICE_USB_HOST, 3</string>
               <string>MIDI_DEVICE_USB_HOST, 4</string>
               <string>MIDI_DEVICE_INTERNAL, 1</string>
               <string>MIDI_DEVICE_INTERNAL, 2</string>
               <string>MIDI_DEVICE_USB_DEVICE, 1</string>
            </CEntries>
         </combo>
         <spinner name="channel" MinValue="1" MaxValue="16" DefaultValue="0"/>
      </attribs>
      <code.declaration><![CDATA[uint32_t prev0;
uint32_t prev1;
uint32_t prev2;
uint32_t prev3;
uint32_t prev4;
uint32_t prev5;
uint32_t prev6;
uint32_t prev7;]]></code.declaration>
      <code.krate><![CDATA[if (inlet_v0 != prev0) {	
MidiSend3((midi_device_t) attr_device, MIDI_CONTROL_CHANGE + (attr_channel-1),0 + inlet_startcc + param_startcc,inlet_v0 >>20);prev0 = inlet_v0; 
}

if (inlet_v1 != prev1) {	
MidiSend3((midi_device_t) attr_device, MIDI_CONTROL_CHANGE + (attr_channel-1),1 + inlet_startcc + param_startcc,inlet_v1 >>20);prev1 = inlet_v1; 
}

if (inlet_v2 != prev2) {	
MidiSend3((midi_device_t) attr_device, MIDI_CONTROL_CHANGE + (attr_channel-1),2 + inlet_startcc + param_startcc,inlet_v2 >>20);prev2 = inlet_v2; 
}

if (inlet_v3 != prev3) {	
MidiSend3((midi_device_t) attr_device, MIDI_CONTROL_CHANGE + (attr_channel-1),3 + inlet_startcc + param_startcc,inlet_v3 >>20);prev3 = inlet_v3; 
}

if (inlet_v4 != prev4) {	
MidiSend3((midi_device_t) attr_device, MIDI_CONTROL_CHANGE + (attr_channel-1),4 + inlet_startcc + param_startcc,inlet_v4 >>20);prev4 = inlet_v4; 
}

if (inlet_v5 != prev5) {	
MidiSend3((midi_device_t) attr_device, MIDI_CONTROL_CHANGE + (attr_channel-1),5 + inlet_startcc + param_startcc,inlet_v5 >>20);prev5 = inlet_v5; 
}

if (inlet_v6 != prev6) {	
MidiSend3((midi_device_t) attr_device, MIDI_CONTROL_CHANGE + (attr_channel-1),6 + inlet_startcc + param_startcc,inlet_v6 >>20);prev6 = inlet_v6; 
}

if (inlet_v7 != prev7) {	
MidiSend3((midi_device_t) attr_device, MIDI_CONTROL_CHANGE + (attr_channel-1),7 + inlet_startcc + param_startcc,inlet_v7 >>20);prev7 = inlet_v7; 
}]]></code.krate>
   </obj.normal>
</objdefs>