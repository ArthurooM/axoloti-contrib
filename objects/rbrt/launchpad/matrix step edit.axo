<objdefs appVersion="1.0.12">
   <obj.normal id="matrix step edit" uuid="538fb58e-487a-42db-9327-8210ad6f82dc">
      <sDescription>toggles the elements of a table with the 8x8 matrix of a &apos;launchpad&apos;
&apos;offset&apos; sets the table index to start at,
&apos;startpad&apos; sets the first pad of the launchpad&apos;s active area,
&apos;length&apos; sets the length of the area.
&apos;blocksize&apos; sets the size of the data-block.</sDescription>
      <author>robert schirmer</author>
      <license>BSD</license>
      <helpPatch>launchpad.axh</helpPatch>
      <inlets>
         <int32 name="offset"/>
         <int32 name="start"/>
         <int32 name="length"/>
         <bool32.risingfalling name="active"/>
      </inlets>
      <outlets>
         <bool32.pulse name="trig" description="pulse if an element is changed"/>
         <int32 name="matrix" description="pad index if inside range"/>
         <int32 name="hold" description="pad index if a pad is held down"/>
      </outlets>
      <displays/>
      <params>
         <int32 name="offset">
            <MinValue i="0"/>
            <MaxValue i="1000000"/>
         </int32>
         <int32 name="start">
            <MinValue i="0"/>
            <MaxValue i="1000000"/>
         </int32>
         <int32 name="length">
            <MinValue i="0"/>
            <MaxValue i="1000000"/>
         </int32>
         <bool32.tgl name="active"/>
      </params>
      <attribs>
         <objref name="step"/>
         <objref name="mod"/>
         <combo name="blocksize">
            <MenuEntries>
               <string>1</string>
               <string>4</string>
               <string>8</string>
               <string>16</string>
               <string>32</string>
               <string>64</string>
            </MenuEntries>
            <CEntries>
               <string>0</string>
               <string>2</string>
               <string>3</string>
               <string>4</string>
               <string>5</string>
               <string>6</string>
               <string>7</string>
            </CEntries>
         </combo>
         <spinner name="hold" MinValue="300" MaxValue="10000" DefaultValue="1000"/>
      </attribs>
      <code.declaration><![CDATA[int8_t _note1;
bool _gate1;
uint8_t matrix;
uint8_t hold;
uint8_t prevmatrix;
uint8_t lastmatrix;


uint8_t start;
uint8_t end;

uint8_t bitmask1 = 0b10001110;

int32_t _value;
int32_t _cc;

int rtrig;
int ntrig;
bool op;
bool ttrig;
uint32_t tc;

int32_t tv ;]]></code.declaration>
      <code.krate><![CDATA[start = inlet_start + param_start;
end = (start + ( inlet_length + param_length));

matrix = (_note1 -((_note1 >> 4) << 3));
	
if ((matrix >= start) && (matrix < end)) {
	outlet_matrix = matrix;lastmatrix = matrix;

if (inlet_active || param_active){
if  ((_gate1 && !ntrig) ||(matrix != prevmatrix)) {
      ntrig=1;
      op = attr_step.array[matrix];
      tv = attr_mod.array[(matrix << attr_blocksize)];
      if (!tv) attr_mod.array[(matrix << attr_blocksize)] = (1 << 27)- 1 >>attr_mod.GAIN;
      attr_step.array[matrix]= ((!op) << 27) - !op >>attr_step.GAIN;
      rtrig = 1;
   }
   if (!_gate1) {ntrig=0;ttrig = 0;}
   
   tc+= _gate1;
if ((matrix != prevmatrix) || (!_gate1)) tc = 0;	
	if ((tc > attr_hold) && (!ttrig)) {
         attr_step.array[matrix]= (op << 27) - op >>attr_step.GAIN;
         attr_mod.array[(matrix << attr_blocksize)] = tv;
         ttrig = 1;
         hold = matrix;
	}
   }
}
else {
	if (!lastmatrix) lastmatrix = start;
outlet_matrix = lastmatrix;
     }

prevmatrix = matrix;
outlet_trig = rtrig;
outlet_hold = hold;
rtrig = 0;]]></code.krate>
      <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + attr_midichannel) && (data2)) {	
  if ((data1 -8) & bitmask1) {
    _note1 = data1;
    _gate1 = 1;
  }
} else if (((status == MIDI_NOTE_ON + attr_midichannel) && (!data2))||          (status == MIDI_NOTE_OFF + attr_midichannel)) {
  if (_note1 == data1) {
    _gate1 = 0;
  }

} else if ((status == attr_midichannel + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
   _gate1 = 0;
}]]></code.midihandler>
   </obj.normal>
</objdefs>