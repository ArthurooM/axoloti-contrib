<patch-1.0 appVersion="1.0.11">
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_1" x="462" y="42">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7d5ef61c3bcd571ee6bbd8437ef3612125dfb225" name="*c_2" x="1162" y="42">
      <params>
         <frac32.u.map name="amp" value="45.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/dial b" uuid="9ffed04e6a3052d9001eda83bae7024cb6d17037" name="dial_1" x="364" y="56">
      <params/>
      <attribs/>
   </obj>
   <obj type="lfo/square" uuid="de6909eb64db13af5b43f979a4c130024b3a4793" name="square_1" x="14" y="84">
      <params>
         <frac32.s.map name="pitch" value="46.0"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="a9b5ef72-fa80-4acd-8f18-95509555da2e" name="object_17" x="140" y="84">
      <params>
         <int32.small name="num" value="8"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="a9b5ef72-fa80-4acd-8f18-95509555da2e">
         <author>Sptnk</author>
         <license>BSD</license>
         <inlets>
            <bool32.rising name="clock"/>
            <bool32.rising name="reset"/>
            <bool32 name="pause"/>
            <int32 name="params"/>
         </inlets>
         <outlets>
            <frac32 name="val1"/>
            <int32.positive name="val2"/>
            <bool32 name="gate"/>
            <int32.positive name="params"/>
            <int32.positive name="stepcount"/>
            <int32.positive name="clockcount"/>
            <int32.positive name="repcount"/>
         </outlets>
         <displays/>
         <params>
            <int32.mini name="num">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32.mini>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int p_counter = 0;

int32_t val1[16];
int32_t val2[16];
int32_t gate[16];
int32_t len[16];
int32_t rep[16];
int32_t glide[16];
int32_t mode[16];

int32_t bitmask2=0b00000000000000000000000000000011;
int32_t bitmask3=0b00000000000000000000000000000111;
int32_t bitmask4=0b00000000000000000000000000001111;
int32_t bitmask7=0b00000000000000000000000001111111;

bool ctrig = 1;
bool rtrig = 1;

int nextstep = 0;

uint32_t k_rate_counter = 0; //this one is used to determine the length of a step
uint32_t countlen_4 = 0;

uint32_t lincoefs =0;
uint32_t expcoefs =0;
uint32_t phase = 0;

uint32_t clockcount = 0;
uint32_t repcount = 0;
uint32_t stepcount = 0;

int32_t val_old = 0;
int32_t val_new = 0;

uint32_t calculate_nextstep(uint32_t stepcnt, uint32_t num)
{
	uint32_t step = stepcnt+1;
				if (step >= num)
				{
					step = 0;
				}
	return step;				
}]]></code.declaration>
         <code.krate><![CDATA[{//gathering data
uint32_t temp = inlet_params;
p_counter++;
if (p_counter>=param_num)
p_counter = 0;
outlet_params = p_counter;
}

{//unpacking data
int id = inlet_params & bitmask4;
val1[id] = ((inlet_params>>4) & bitmask7) -64 <<21;
val2[id] = ((inlet_params>>11) & bitmask3);
gate[id] = ((inlet_params>>14) & bitmask3);
len[id] = ((inlet_params>>17) & bitmask7);
rep[id] = ((inlet_params>>24) & bitmask4);
glide[id] = ((inlet_params>>28) & bitmask2);
mode[id] = ((inlet_params>>30) & bitmask2);
}

if (!inlet_pause)
{
	k_rate_counter++;
	if (phase<(1<<27))
	{
		switch (glide[stepcount])
		{
		case 0:  phase =  (1<<27); break;
		case 1:  phase += lincoefs/(mode[stepcount]+1); break;
		case 2:  phase =  ___SMMLA((1<<27)-phase<<3,expcoefs/(mode[stepcount]+1)<<2,phase); break;
		default: phase =  (1<<27); break;
		}	
	}
	else
	phase = (1<<27);
	
	if (inlet_clock && ctrig)
	{
		ctrig = 0;
		countlen_4 = k_rate_counter*len[stepcount]>>2;
		lincoefs = ((1<<27)/countlen_4);
		expcoefs = ((1<<30)/countlen_4);	
		k_rate_counter = 0;
		clockcount++;
		if (clockcount>len[stepcount])
		{
			clockcount = 0;
			repcount++;
			if (repcount>rep[stepcount])
			{
				repcount = 0;
				stepcount = nextstep;
				val_old = val_new;
				phase = 0;
				nextstep = calculate_nextstep(stepcount,param_num);
			}
		}
	}
	
}
if (!inlet_clock)
{
	ctrig = 1;
}

if (inlet_reset && rtrig) //reset has priority over clock
{
	rtrig = 0;
	ctrig = 0; 
	phase = 0;
	stepcount = 0;
	repcount = 0;
	clockcount = 0;
	k_rate_counter = 0;
}
else if (!inlet_reset)
{
	rtrig = 1;
}

val_new = val1[stepcount];
outlet_val1 = ___SMMLA(phase<<3,val_new-val_old<<2,val_old);
outlet_val2 = val2[stepcount];
switch (gate[stepcount])
{
	case 0:  outlet_gate = 0; break;
	case 1:  outlet_gate = clockcount>(1*len[stepcount]>>2)?0:1; break;
	case 2:  outlet_gate = clockcount>(len[stepcount]>>1)?0:1; break;
	case 3:  outlet_gate = clockcount>(3*len[stepcount]>>2)?0:1; break;
	case 4:  outlet_gate = 1; break;
	default: outlet_gate = 0; break;
}


outlet_stepcount = stepcount;
outlet_clockcount = clockcount;
outlet_repcount = repcount;]]></code.krate>
      </object>
   </patchobj>
   <obj type="disp/ibar 16" uuid="302bfed4cde8894229679ce81f6b8a5c5212dd98" name="ibar_1" x="462" y="98">
      <params/>
      <attribs/>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_1" x="1022" y="112">
      <params/>
      <attribs/>
   </obj>
   <obj type="osc/saw sync" uuid="c55144faace5cfeddae3b63b3fa345483866d90" name="saw_1" x="798" y="126">
      <params>
         <frac32.s.map name="pitch" value="-24.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="jt/filter/vcf4pole2x" uuid="f0ea35e9-a9c5-445e-8868-79b556d5d5c3" name="vcf4pole2x_1" x="1120" y="126">
      <params>
         <frac32.s.map name="pitch" value="13.0"/>
         <frac32.u.map name="reso" value="57.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="i_1" x="378" y="154">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/ibar 16" uuid="302bfed4cde8894229679ce81f6b8a5c5212dd98" name="ibar_2" x="462" y="154">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/ibar 16" uuid="302bfed4cde8894229679ce81f6b8a5c5212dd98" name="ibar_3" x="462" y="210">
      <params/>
      <attribs/>
   </obj>
   <obj type="env/adsr" uuid="d1dbcc5fa6f87b98a6a91c87fd44acee5e690bac" name="adsr_1" x="952" y="210">
      <params>
         <frac32.s.map name="a" value="-64.0"/>
         <frac32.s.map name="d" value="14.0"/>
         <frac32.u.map name="s" value="2.5"/>
         <frac32.s.map name="r" value="-40.0"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="6fd98f59-fee1-42dc-92e6-883cb00c27f0" name="object_1" x="154" y="266">
      <params>
         <int32.small name="id" value="1"/>
         <int32 name="val1" value="0"/>
         <int32 name="val2" value="0"/>
         <int32.hradio name="gate" value="2"/>
         <int32 name="len" value="16"/>
         <int32 name="rep" value="1"/>
         <int32.hradio name="glide" value="2"/>
         <int32.hradio name="mode" value="1"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="6fd98f59-fee1-42dc-92e6-883cb00c27f0">
         <author>Sputnki</author>
         <license>BSD</license>
         <inlets>
            <int32 name="in"/>
            <int32 name="def"/>
         </inlets>
         <outlets>
            <int32 name="chain"/>
            <int32 name="out"/>
         </outlets>
         <displays/>
         <params>
            <int32.mini name="id">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32.mini>
            <int32 name="val1">
               <MinValue i="-64"/>
               <MaxValue i="63"/>
            </int32>
            <int32 name="val2">
               <MinValue i="0"/>
               <MaxValue i="7"/>
            </int32>
            <int32.hradio name="gate" description="off / 25% / 50% / 75% /100%">
               <MaxValue i="5"/>
            </int32.hradio>
            <int32 name="len" description="">
               <MinValue i="1"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="rep">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32>
            <int32.hradio name="glide" description="off / linear / exponential">
               <MaxValue i="3"/>
            </int32.hradio>
            <int32.hradio name="mode" description="25% / 50% / 75% / 100%">
               <MaxValue i="4"/>
            </int32.hradio>
         </params>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[uint32_t var = (param_id-1)|(param_val1+64<<4)|(param_val2<<11)|(param_gate<<14)|(param_len-1<<17)|(param_rep-1<<24)|(param_glide<<28)|(param_mode<<30);

if(!inlet_in)
outlet_out = var;
else
outlet_out = inlet_def;
outlet_chain = inlet_in-1;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="6fd98f59-fee1-42dc-92e6-883cb00c27f0" name="object_2" x="252" y="266">
      <params>
         <int32.small name="id" value="2"/>
         <int32 name="val1" value="4"/>
         <int32 name="val2" value="2"/>
         <int32.hradio name="gate" value="3"/>
         <int32 name="len" value="16"/>
         <int32 name="rep" value="1"/>
         <int32.hradio name="glide" value="0"/>
         <int32.hradio name="mode" value="1"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="6fd98f59-fee1-42dc-92e6-883cb00c27f0">
         <author>Sputnki</author>
         <license>BSD</license>
         <inlets>
            <int32 name="in"/>
            <int32 name="def"/>
         </inlets>
         <outlets>
            <int32 name="chain"/>
            <int32 name="out"/>
         </outlets>
         <displays/>
         <params>
            <int32.mini name="id">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32.mini>
            <int32 name="val1">
               <MinValue i="-64"/>
               <MaxValue i="63"/>
            </int32>
            <int32 name="val2">
               <MinValue i="0"/>
               <MaxValue i="7"/>
            </int32>
            <int32.hradio name="gate">
               <MaxValue i="5"/>
            </int32.hradio>
            <int32 name="len">
               <MinValue i="1"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="rep">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32>
            <int32.hradio name="glide">
               <MaxValue i="3"/>
            </int32.hradio>
            <int32.hradio name="mode">
               <MaxValue i="4"/>
            </int32.hradio>
         </params>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[uint32_t var = (param_id-1)|(param_val1+64<<4)|(param_val2<<11)|(param_gate<<14)|(param_len-1<<17)|(param_rep-1<<24)|(param_glide<<28)|(param_mode<<30);

if(!inlet_in)
outlet_out = var;
else
outlet_out = inlet_def;
outlet_chain = inlet_in-1;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="6fd98f59-fee1-42dc-92e6-883cb00c27f0" name="object_3" x="350" y="266">
      <params>
         <int32.small name="id" value="3"/>
         <int32 name="val1" value="6"/>
         <int32 name="val2" value="3"/>
         <int32.hradio name="gate" value="2"/>
         <int32 name="len" value="16"/>
         <int32 name="rep" value="1"/>
         <int32.hradio name="glide" value="0"/>
         <int32.hradio name="mode" value="1"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="6fd98f59-fee1-42dc-92e6-883cb00c27f0">
         <author>Sputnki</author>
         <license>BSD</license>
         <inlets>
            <int32 name="in"/>
            <int32 name="def"/>
         </inlets>
         <outlets>
            <int32 name="chain"/>
            <int32 name="out"/>
         </outlets>
         <displays/>
         <params>
            <int32.mini name="id">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32.mini>
            <int32 name="val1">
               <MinValue i="-64"/>
               <MaxValue i="63"/>
            </int32>
            <int32 name="val2">
               <MinValue i="0"/>
               <MaxValue i="7"/>
            </int32>
            <int32.hradio name="gate">
               <MaxValue i="5"/>
            </int32.hradio>
            <int32 name="len">
               <MinValue i="1"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="rep">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32>
            <int32.hradio name="glide">
               <MaxValue i="3"/>
            </int32.hradio>
            <int32.hradio name="mode">
               <MaxValue i="4"/>
            </int32.hradio>
         </params>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[uint32_t var = (param_id-1)|(param_val1+64<<4)|(param_val2<<11)|(param_gate<<14)|(param_len-1<<17)|(param_rep-1<<24)|(param_glide<<28)|(param_mode<<30);

if(!inlet_in)
outlet_out = var;
else
outlet_out = inlet_def;
outlet_chain = inlet_in-1;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="6fd98f59-fee1-42dc-92e6-883cb00c27f0" name="object_4" x="448" y="266">
      <params>
         <int32.small name="id" value="4"/>
         <int32 name="val1" value="12"/>
         <int32 name="val2" value="4"/>
         <int32.hradio name="gate" value="3"/>
         <int32 name="len" value="8"/>
         <int32 name="rep" value="1"/>
         <int32.hradio name="glide" value="0"/>
         <int32.hradio name="mode" value="0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="6fd98f59-fee1-42dc-92e6-883cb00c27f0">
         <author>Sputnki</author>
         <license>BSD</license>
         <inlets>
            <int32 name="in"/>
            <int32 name="def"/>
         </inlets>
         <outlets>
            <int32 name="chain"/>
            <int32 name="out"/>
         </outlets>
         <displays/>
         <params>
            <int32.mini name="id">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32.mini>
            <int32 name="val1">
               <MinValue i="-64"/>
               <MaxValue i="63"/>
            </int32>
            <int32 name="val2">
               <MinValue i="0"/>
               <MaxValue i="7"/>
            </int32>
            <int32.hradio name="gate">
               <MaxValue i="5"/>
            </int32.hradio>
            <int32 name="len">
               <MinValue i="1"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="rep">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32>
            <int32.hradio name="glide">
               <MaxValue i="3"/>
            </int32.hradio>
            <int32.hradio name="mode">
               <MaxValue i="4"/>
            </int32.hradio>
         </params>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[uint32_t var = (param_id-1)|(param_val1+64<<4)|(param_val2<<11)|(param_gate<<14)|(param_len-1<<17)|(param_rep-1<<24)|(param_glide<<28)|(param_mode<<30);

if(!inlet_in)
outlet_out = var;
else
outlet_out = inlet_def;
outlet_chain = inlet_in-1;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="6fd98f59-fee1-42dc-92e6-883cb00c27f0" name="object_5" x="546" y="266">
      <params>
         <int32.small name="id" value="5"/>
         <int32 name="val1" value="21"/>
         <int32 name="val2" value="5"/>
         <int32.hradio name="gate" value="2"/>
         <int32 name="len" value="4"/>
         <int32 name="rep" value="1"/>
         <int32.hradio name="glide" value="0"/>
         <int32.hradio name="mode" value="1"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="6fd98f59-fee1-42dc-92e6-883cb00c27f0">
         <author>Sputnki</author>
         <license>BSD</license>
         <inlets>
            <int32 name="in"/>
            <int32 name="def"/>
         </inlets>
         <outlets>
            <int32 name="chain"/>
            <int32 name="out"/>
         </outlets>
         <displays/>
         <params>
            <int32.mini name="id">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32.mini>
            <int32 name="val1">
               <MinValue i="-64"/>
               <MaxValue i="63"/>
            </int32>
            <int32 name="val2">
               <MinValue i="0"/>
               <MaxValue i="7"/>
            </int32>
            <int32.hradio name="gate">
               <MaxValue i="5"/>
            </int32.hradio>
            <int32 name="len">
               <MinValue i="1"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="rep">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32>
            <int32.hradio name="glide">
               <MaxValue i="3"/>
            </int32.hradio>
            <int32.hradio name="mode">
               <MaxValue i="4"/>
            </int32.hradio>
         </params>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[uint32_t var = (param_id-1)|(param_val1+64<<4)|(param_val2<<11)|(param_gate<<14)|(param_len-1<<17)|(param_rep-1<<24)|(param_glide<<28)|(param_mode<<30);

if(!inlet_in)
outlet_out = var;
else
outlet_out = inlet_def;
outlet_chain = inlet_in-1;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="6fd98f59-fee1-42dc-92e6-883cb00c27f0" name="object_6" x="644" y="266">
      <params>
         <int32.small name="id" value="6"/>
         <int32 name="val1" value="0"/>
         <int32 name="val2" value="0"/>
         <int32.hradio name="gate" value="3"/>
         <int32 name="len" value="4"/>
         <int32 name="rep" value="1"/>
         <int32.hradio name="glide" value="0"/>
         <int32.hradio name="mode" value="1"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="6fd98f59-fee1-42dc-92e6-883cb00c27f0">
         <author>Sputnki</author>
         <license>BSD</license>
         <inlets>
            <int32 name="in"/>
            <int32 name="def"/>
         </inlets>
         <outlets>
            <int32 name="chain"/>
            <int32 name="out"/>
         </outlets>
         <displays/>
         <params>
            <int32.mini name="id">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32.mini>
            <int32 name="val1">
               <MinValue i="-64"/>
               <MaxValue i="63"/>
            </int32>
            <int32 name="val2">
               <MinValue i="0"/>
               <MaxValue i="7"/>
            </int32>
            <int32.hradio name="gate">
               <MaxValue i="5"/>
            </int32.hradio>
            <int32 name="len">
               <MinValue i="1"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="rep">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32>
            <int32.hradio name="glide">
               <MaxValue i="3"/>
            </int32.hradio>
            <int32.hradio name="mode">
               <MaxValue i="4"/>
            </int32.hradio>
         </params>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[uint32_t var = (param_id-1)|(param_val1+64<<4)|(param_val2<<11)|(param_gate<<14)|(param_len-1<<17)|(param_rep-1<<24)|(param_glide<<28)|(param_mode<<30);

if(!inlet_in)
outlet_out = var;
else
outlet_out = inlet_def;
outlet_chain = inlet_in-1;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="6fd98f59-fee1-42dc-92e6-883cb00c27f0" name="object_7" x="742" y="266">
      <params>
         <int32.small name="id" value="7"/>
         <int32 name="val1" value="-6"/>
         <int32 name="val2" value="7"/>
         <int32.hradio name="gate" value="3"/>
         <int32 name="len" value="16"/>
         <int32 name="rep" value="1"/>
         <int32.hradio name="glide" value="0"/>
         <int32.hradio name="mode" value="1"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="6fd98f59-fee1-42dc-92e6-883cb00c27f0">
         <author>Sputnki</author>
         <license>BSD</license>
         <inlets>
            <int32 name="in"/>
            <int32 name="def"/>
         </inlets>
         <outlets>
            <int32 name="chain"/>
            <int32 name="out"/>
         </outlets>
         <displays/>
         <params>
            <int32.mini name="id">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32.mini>
            <int32 name="val1">
               <MinValue i="-64"/>
               <MaxValue i="63"/>
            </int32>
            <int32 name="val2">
               <MinValue i="0"/>
               <MaxValue i="7"/>
            </int32>
            <int32.hradio name="gate">
               <MaxValue i="5"/>
            </int32.hradio>
            <int32 name="len">
               <MinValue i="1"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="rep">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32>
            <int32.hradio name="glide">
               <MaxValue i="3"/>
            </int32.hradio>
            <int32.hradio name="mode">
               <MaxValue i="4"/>
            </int32.hradio>
         </params>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[uint32_t var = (param_id-1)|(param_val1+64<<4)|(param_val2<<11)|(param_gate<<14)|(param_len-1<<17)|(param_rep-1<<24)|(param_glide<<28)|(param_mode<<30);

if(!inlet_in)
outlet_out = var;
else
outlet_out = inlet_def;
outlet_chain = inlet_in-1;]]></code.krate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="6fd98f59-fee1-42dc-92e6-883cb00c27f0" name="object_8" x="840" y="266">
      <params>
         <int32.small name="id" value="8"/>
         <int32 name="val1" value="34"/>
         <int32 name="val2" value="6"/>
         <int32.hradio name="gate" value="3"/>
         <int32 name="len" value="64"/>
         <int32 name="rep" value="1"/>
         <int32.hradio name="glide" value="2"/>
         <int32.hradio name="mode" value="0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="6fd98f59-fee1-42dc-92e6-883cb00c27f0">
         <author>Sputnki</author>
         <license>BSD</license>
         <inlets>
            <int32 name="in"/>
            <int32 name="def"/>
         </inlets>
         <outlets>
            <int32 name="chain"/>
            <int32 name="out"/>
         </outlets>
         <displays/>
         <params>
            <int32.mini name="id">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32.mini>
            <int32 name="val1">
               <MinValue i="-64"/>
               <MaxValue i="63"/>
            </int32>
            <int32 name="val2">
               <MinValue i="0"/>
               <MaxValue i="7"/>
            </int32>
            <int32.hradio name="gate">
               <MaxValue i="5"/>
            </int32.hradio>
            <int32 name="len">
               <MinValue i="1"/>
               <MaxValue i="128"/>
            </int32>
            <int32 name="rep">
               <MinValue i="1"/>
               <MaxValue i="16"/>
            </int32>
            <int32.hradio name="glide">
               <MaxValue i="3"/>
            </int32.hradio>
            <int32.hradio name="mode">
               <MaxValue i="4"/>
            </int32.hradio>
         </params>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[uint32_t var = (param_id-1)|(param_val1+64<<4)|(param_val2<<11)|(param_gate<<14)|(param_len-1<<17)|(param_rep-1<<24)|(param_glide<<28)|(param_mode<<30);

if(!inlet_in)
outlet_out = var;
else
outlet_out = inlet_def;
outlet_chain = inlet_in-1;]]></code.krate>
      </object>
   </patchobj>
   <obj type="math/*c" uuid="7a66f52a9594e7e9eb31328ea725cb3641a80b55" name="*c_1" x="1162" y="266">
      <params>
         <frac32.u.map name="amp" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="audio/out stereo" uuid="a1ca7a567f535acc21055669829101d3ee7f0189" name="out_1" x="1134" y="406">
      <params/>
      <attribs/>
   </obj>
   <obj type="jt/granular/grainverb" uuid="aaafab49-927b-4660-a360-ed30d1a7e643" name="grainverb_1" x="994" y="420">
      <params>
         <frac32.u.map name="amount" value="0.0"/>
         <frac32.u.map name="delay" value="9.000999927520752"/>
         <frac32.u.map name="spread" value="64.0"/>
         <frac32.u.map name="fdbk" value="5.0"/>
      </params>
      <attribs>
         <combo attributeName="grains" selection="16"/>
         <combo attributeName="grainlength" selection="1024"/>
         <combo attributeName="window" selection="triangle"/>
         <combo attributeName="size" selection="32768 (682ms)"/>
      </attribs>
   </obj>
   <obj type="math/*c" uuid="7d5ef61c3bcd571ee6bbd8437ef3612125dfb225" name="*c_4" x="70" y="616">
      <params>
         <frac32.u.map name="amp" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7d5ef61c3bcd571ee6bbd8437ef3612125dfb225" name="*c_5" x="70" y="700">
      <params>
         <frac32.u.map name="amp" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="object_1" outlet="out"/>
         <dest obj="object_2" inlet="def"/>
      </net>
      <net>
         <source obj="object_1" outlet="chain"/>
         <dest obj="object_2" inlet="in"/>
      </net>
      <net>
         <source obj="object_3" outlet="out"/>
         <dest obj="object_4" inlet="def"/>
      </net>
      <net>
         <source obj="object_3" outlet="chain"/>
         <dest obj="object_4" inlet="in"/>
      </net>
      <net>
         <source obj="object_2" outlet="out"/>
         <dest obj="object_3" inlet="def"/>
      </net>
      <net>
         <source obj="object_2" outlet="chain"/>
         <dest obj="object_3" inlet="in"/>
      </net>
      <net>
         <source obj="object_5" outlet="out"/>
         <dest obj="object_6" inlet="def"/>
      </net>
      <net>
         <source obj="object_5" outlet="chain"/>
         <dest obj="object_6" inlet="in"/>
      </net>
      <net>
         <source obj="object_7" outlet="out"/>
         <dest obj="object_8" inlet="def"/>
      </net>
      <net>
         <source obj="object_7" outlet="chain"/>
         <dest obj="object_8" inlet="in"/>
      </net>
      <net>
         <source obj="object_6" outlet="out"/>
         <dest obj="object_7" inlet="def"/>
      </net>
      <net>
         <source obj="object_6" outlet="chain"/>
         <dest obj="object_7" inlet="in"/>
      </net>
      <net>
         <source obj="object_4" outlet="chain"/>
         <dest obj="object_5" inlet="in"/>
      </net>
      <net>
         <source obj="object_4" outlet="out"/>
         <dest obj="object_5" inlet="def"/>
      </net>
      <net>
         <source obj="object_17" outlet="val1"/>
         <dest obj="dial_1" inlet="in"/>
         <dest obj="saw_1" inlet="pitch"/>
      </net>
      <net>
         <source obj="object_17" outlet="val2"/>
         <dest obj="i_1" inlet="in"/>
         <dest obj="*c_4" inlet="in"/>
         <dest obj="*c_5" inlet="in"/>
      </net>
      <net>
         <source obj="object_17" outlet="gate"/>
         <dest obj="bool_1" inlet="in"/>
         <dest obj="adsr_1" inlet="gate"/>
      </net>
      <net>
         <source obj="square_1" outlet="wave"/>
         <dest obj="object_17" inlet="clock"/>
      </net>
      <net>
         <source obj="object_17" outlet="repcount"/>
         <dest obj="ibar_3" inlet="in"/>
      </net>
      <net>
         <source obj="object_17" outlet="clockcount"/>
         <dest obj="ibar_2" inlet="in"/>
      </net>
      <net>
         <source obj="object_17" outlet="stepcount"/>
         <dest obj="ibar_1" inlet="in"/>
      </net>
      <net>
         <source obj="object_17" outlet="params"/>
         <dest obj="object_1" inlet="in"/>
      </net>
      <net>
         <source obj="adsr_1" outlet="env"/>
         <dest obj="vca_1" inlet="v"/>
         <dest obj="*c_2" inlet="in"/>
      </net>
      <net>
         <source obj="vca_1" outlet="o"/>
         <dest obj="vcf4pole2x_1" inlet="in"/>
      </net>
      <net>
         <source obj="*c_1" outlet="out"/>
         <dest obj="grainverb_1" inlet="in"/>
      </net>
      <net>
         <source obj="grainverb_1" outlet="l"/>
         <dest obj="out_1" inlet="left"/>
      </net>
      <net>
         <source obj="grainverb_1" outlet="r"/>
         <dest obj="out_1" inlet="right"/>
      </net>
      <net>
         <source obj="*c_5" outlet="out"/>
         <dest obj="grainverb_1" inlet="spread"/>
      </net>
      <net>
         <source obj="*c_4" outlet="out"/>
         <dest obj="grainverb_1" inlet="delay"/>
      </net>
      <net>
         <source obj="saw_1" outlet="wave"/>
         <dest obj="vca_1" inlet="a"/>
      </net>
      <net>
         <source obj="vcf4pole2x_1" outlet="out"/>
         <dest obj="*c_1" inlet="in"/>
      </net>
      <net>
         <source obj="*c_2" outlet="out"/>
         <dest obj="vcf4pole2x_1" inlet="pitch"/>
      </net>
      <net>
         <source obj="object_8" outlet="out"/>
         <dest obj="object_17" inlet="params"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>-8</x>
      <y>-8</y>
      <width>1382</width>
      <height>784</height>
   </windowPos>
</patch-1.0>