<patch-1.0 appVersion="1.0.12">
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_1" x="1834" y="98">
      <params/>
      <attribs/>
   </obj>
   <obj type="kfilter/lowpass" uuid="4f0d68b39b6f6b1c1d371b028d84391d14062d68" name="lowpass_1" x="742" y="140">
      <params>
         <frac32.s.map name="freq" value="-64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/smooth" uuid="6c5d08c282bb08bff24af85b4891447f99bcbc97" name="smooth_1" x="378" y="154">
      <params>
         <frac32.u.map name="time" value="7.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="conv/unipolar2bipolar" uuid="efc8ee28c508740c5edf7995eaaa07a6d6818e5e" name="unipolar2bipolar_1" x="210" y="182">
      <params/>
      <attribs/>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_1" x="42" y="196">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PC4 (ADC1_IN14)"/>
      </attribs>
   </obj>
   <obj type="logic/and 2" uuid="c67031682f552aa0a80b23377495c51ea28a8c9c" name="and_2" x="1918" y="196">
      <params/>
      <attribs/>
   </obj>
   <obj type="patch/load" uuid="634bf1f8c313920d7f19fc402ba937fd1ee27802" name="load_1" x="2058" y="196">
      <params/>
      <attribs>
         <table attributeName="filename" table="/start.bin"/>
      </attribs>
   </obj>
   <obj type="kfilter/lowpass" uuid="4f0d68b39b6f6b1c1d371b028d84391d14062d68" name="lowpass_2" x="742" y="224">
      <params>
         <frac32.s.map name="freq" value="-64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="midi/in/keyb note" uuid="ac0cd98e6c0373b7be73d25900342a62ebcf5f" name="keyb_2" x="1722" y="238">
      <params/>
      <attribs>
         <spinner attributeName="note" value="67"/>
      </attribs>
   </obj>
   <patcher type="patch/patcher" uuid="52f12e67-1dbb-4bb7-9aa0-ffb3eaf4b8c3" name="patcher_1" x="882" y="280">
      <params>
         <frac32.s.map name="square_1" value="0.0"/>
      </params>
      <attribs>
         <combo attributeName="poly" selection="8"/>
      </attribs>
      <subpatch appVersion="1.0.12">
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="size" x="14" y="0">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/polyindex" uuid="edc730b5393c31d703572e0c0c88aaced643bd6" name="polyindex_1" x="84" y="0">
            <params/>
            <attribs/>
         </obj>
         <obj type="math/*c" uuid="7d5ef61c3bcd571ee6bbd8437ef3612125dfb225" name="*c_1" x="182" y="0">
            <params>
               <frac32.u.map name="amp" value="6.399999618530273"/>
            </params>
            <attribs/>
         </obj>
         <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_5" x="294" y="0">
            <params/>
            <attribs/>
         </obj>
         <obj type="lfo/saw" uuid="ef2a162678b533c5e46c4e3c0decba17b1862d85" name="square_1" x="84" y="98">
            <params>
               <frac32.s.map name="pitch" onParent="true" value="0.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="math/&gt;c" uuid="99f2934d97d62b715a829979ef6c8abef35dcdb2" name="&gt;c_1" x="196" y="98">
            <params>
               <frac32.u.map name="c" value="0.5"/>
            </params>
            <attribs/>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="pos" x="294" y="98">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="posvar" x="378" y="98">
            <params/>
            <attribs/>
         </obj>
         <obj type="rand/uniform f trig" uuid="223873125a332e3b8a82795a3eef167993adb086" name="uniform_1" x="476" y="98">
            <params/>
            <attribs/>
         </obj>
         <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_1" x="602" y="98">
            <params/>
            <attribs/>
         </obj>
         <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_1" x="700" y="98">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="pitchvar" x="294" y="140">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="pitch" x="294" y="182">
            <params/>
            <attribs/>
         </obj>
         <obj type="rand/uniform f trig" uuid="223873125a332e3b8a82795a3eef167993adb086" name="uniform_2" x="476" y="196">
            <params/>
            <attribs/>
         </obj>
         <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_2" x="602" y="196">
            <params/>
            <attribs/>
         </obj>
         <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_3" x="686" y="196">
            <params/>
            <attribs/>
         </obj>
         <obj type="math/window" uuid="276ef1bfd2978430dd94074347265b17092b6311" name="window_1" x="126" y="266">
            <params/>
            <attribs/>
         </obj>
         <obj type="math/div 2" uuid="f14884de1baf3e615e12ee162a96a013eca76789" name="div_1" x="210" y="266">
            <params/>
            <attribs/>
         </obj>
         <obj type="rand/uniform f trig" uuid="223873125a332e3b8a82795a3eef167993adb086" name="uniform_3" x="154" y="308">
            <params/>
            <attribs/>
         </obj>
         <obj type="spat/pan m" uuid="de6a224771e59a0d5eff4d459ff775f404f4fba2" name="pan_1" x="266" y="308">
            <params/>
            <attribs/>
         </obj>
         <obj type="table/play pitch" uuid="5632a54926261833bbb9fff049e71322c360e57e" name="play_1" x="364" y="308">
            <params>
               <frac32.s.map name="pitch" value="0.0"/>
            </params>
            <attribs>
               <objref attributeName="table" obj="../t1"/>
            </attribs>
         </obj>
         <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_1" x="504" y="308">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet a" uuid="abd8c5fd3b0524a6630f65cad6dc27f6c58e2a3e" name="outlet_1" x="574" y="308">
            <params/>
            <attribs/>
         </obj>
         <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_2" x="504" y="378">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet a" uuid="abd8c5fd3b0524a6630f65cad6dc27f6c58e2a3e" name="outlet_2" x="574" y="378">
            <params/>
            <attribs/>
         </obj>
         <nets>
            <net>
               <source obj="play_1" outlet="wave"/>
               <dest obj="vca_1" inlet="a"/>
               <dest obj="vca_2" inlet="a"/>
            </net>
            <net>
               <source obj="polyindex_1" outlet="index"/>
               <dest obj="*c_1" inlet="in"/>
            </net>
            <net>
               <source obj="pos" outlet="inlet"/>
               <dest obj="+_1" inlet="in2"/>
            </net>
            <net>
               <source obj="+_1" outlet="out"/>
               <dest obj="play_1" inlet="pos"/>
            </net>
            <net>
               <source obj="square_1" outlet="wave"/>
               <dest obj="window_1" inlet="phase"/>
               <dest obj="&gt;c_1" inlet="in"/>
            </net>
            <net>
               <source obj="window_1" outlet="win"/>
               <dest obj="div_1" inlet="in"/>
            </net>
            <net>
               <source obj="&gt;c_1" outlet="out"/>
               <dest obj="uniform_1" inlet="trig"/>
               <dest obj="uniform_2" inlet="trig"/>
               <dest obj="play_1" inlet="start"/>
               <dest obj="uniform_3" inlet="trig"/>
            </net>
            <net>
               <source obj="posvar" outlet="inlet"/>
               <dest obj="*_1" inlet="b"/>
            </net>
            <net>
               <source obj="uniform_1" outlet="rand"/>
               <dest obj="*_1" inlet="a"/>
            </net>
            <net>
               <source obj="*_1" outlet="result"/>
               <dest obj="+_1" inlet="in1"/>
            </net>
            <net>
               <source obj="pitchvar" outlet="inlet"/>
               <dest obj="*_2" inlet="b"/>
            </net>
            <net>
               <source obj="uniform_2" outlet="rand"/>
               <dest obj="*_2" inlet="a"/>
            </net>
            <net>
               <source obj="*_2" outlet="result"/>
               <dest obj="+_3" inlet="in1"/>
            </net>
            <net>
               <source obj="+_3" outlet="out"/>
               <dest obj="play_1" inlet="pitch"/>
            </net>
            <net>
               <source obj="pitch" outlet="inlet"/>
               <dest obj="+_3" inlet="in2"/>
            </net>
            <net>
               <source obj="*c_1" outlet="out"/>
               <dest obj="+_5" inlet="in1"/>
            </net>
            <net>
               <source obj="size" outlet="inlet"/>
               <dest obj="+_5" inlet="in2"/>
            </net>
            <net>
               <source obj="+_5" outlet="out"/>
               <dest obj="square_1" inlet="pitch"/>
            </net>
            <net>
               <source obj="pan_1" outlet="left"/>
               <dest obj="vca_1" inlet="v"/>
            </net>
            <net>
               <source obj="pan_1" outlet="right"/>
               <dest obj="vca_2" inlet="v"/>
            </net>
            <net>
               <source obj="div_1" outlet="out"/>
               <dest obj="pan_1" inlet="i1"/>
            </net>
            <net>
               <source obj="uniform_3" outlet="rand"/>
               <dest obj="pan_1" inlet="c"/>
            </net>
            <net>
               <source obj="vca_1" outlet="o"/>
               <dest obj="outlet_1" inlet="outlet"/>
            </net>
            <net>
               <source obj="vca_2" outlet="o"/>
               <dest obj="outlet_2" inlet="outlet"/>
            </net>
         </nets>
         <settings>
            <subpatchmode>polyphonic</subpatchmode>
            <MidiChannel>1</MidiChannel>
            <NPresets>8</NPresets>
            <NPresetEntries>32</NPresetEntries>
            <NModulationSources>8</NModulationSources>
            <NModulationTargetsPerSource>8</NModulationTargetsPerSource>
         </settings>
         <notes><![CDATA[]]></notes>
         <windowPos>
            <x>0</x>
            <y>0</y>
            <width>1010</width>
            <height>688</height>
         </windowPos>
      </subpatch>
   </patcher>
   <obj type="drj/fx/phaser_32_mod" uuid="b82ec53ed5921d8040ae5f7aa34e145a7d1eb902" name="phaser_32_mod_1" x="2240" y="280">
      <params>
         <frac32.s.map name="manual" MidiCC="15" value="15.0"/>
         <frac32.u.map name="lfoamt" value="0.5"/>
         <frac32.s.map name="lfofreq" value="-25.0"/>
         <frac32.u.map name="lfopw" value="35.0"/>
         <int32 name="lfowave" value="1"/>
         <frac32.s.map name="feedback" value="39.0"/>
         <bool32.tgl name="saturate" value="0"/>
         <frac32.u.map name="mix" value="52.5"/>
         <int32 name="delay" value="5"/>
         <int32 name="stages" value="7"/>
      </params>
      <attribs>
         <combo attributeName="wordsize" selection="32 bit"/>
         <spinner attributeName="maxdelay" value="16"/>
         <spinner attributeName="maxstages" value="16"/>
      </attribs>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_2" x="42" y="294">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PC3 (ADC1_IN13)"/>
      </attribs>
   </obj>
   <obj type="math/smooth" uuid="6c5d08c282bb08bff24af85b4891447f99bcbc97" name="smooth_2" x="210" y="294">
      <params>
         <frac32.u.map name="time" value="8.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="kfilter/lowpass" uuid="4f0d68b39b6f6b1c1d371b028d84391d14062d68" name="lowpass_3" x="742" y="308">
      <params>
         <frac32.s.map name="freq" value="0.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="faedbea4612d9bd3644d6d3bf31946d848a70e19" name="+_1" x="1456" y="336">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/gain" uuid="62b1c1a6337c7c8f6aec96408a432477b113cfa0" name="gain_2" x="1162" y="350">
      <params>
         <frac32.u.map name="amp" value="8.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_8" x="1666" y="378">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PB0 (ADC1_IN8)"/>
      </attribs>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_10" x="2590" y="378">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PC1 (ADC1_IN11)"/>
      </attribs>
   </obj>
   <obj type="kfilter/lowpass" uuid="4f0d68b39b6f6b1c1d371b028d84391d14062d68" name="lowpass_4" x="742" y="392">
      <params>
         <frac32.s.map name="freq" value="-64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="midi/intern/cc thin" uuid="fd6026be5e7a856b804776c5d7d4df1a4480795e" name="cc_1" x="2772" y="392">
      <params/>
      <attribs>
         <spinner attributeName="channel" value="1"/>
         <spinner attributeName="cc" value="15"/>
      </attribs>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_3" x="28" y="406">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PC2 (ADC1_IN12)"/>
      </attribs>
   </obj>
   <obj type="conv/unipolar2bipolar" uuid="efc8ee28c508740c5edf7995eaaa07a6d6818e5e" name="unipolar2bipolar_2" x="196" y="420">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="c16a625a661f40e4b359db604dcd00b3befcdbe3" name="*_1" x="1946" y="420">
      <params/>
      <attribs/>
   </obj>
   <obj type="spat/pan m" uuid="f6c6c0d7224841d9d76962e64d7f779d8194b7f9" name="pan_1" x="2086" y="434">
      <params/>
      <attribs/>
   </obj>
   <obj type="kfilter/lowpass" uuid="4f0d68b39b6f6b1c1d371b028d84391d14062d68" name="lowpass_5" x="742" y="476">
      <params>
         <frac32.s.map name="freq" value="-64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/gain" uuid="62b1c1a6337c7c8f6aec96408a432477b113cfa0" name="gain_3" x="1176" y="504">
      <params>
         <frac32.u.map name="amp" value="8.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_2" x="434" y="518">
      <params/>
      <attribs>
         <combo attributeName="pad" selection="PB9"/>
         <combo attributeName="mode" selection="pulldown"/>
      </attribs>
   </obj>
   <obj type="conv/unipolar2bipolar" uuid="efc8ee28c508740c5edf7995eaaa07a6d6818e5e" name="unipolar2bipolar_3" x="2548" y="518">
      <params/>
      <attribs/>
   </obj>
   <obj type="sss/gain/vcaST" uuid="82f6d1d8-7fb6-413a-994e-96fdf4b98ee7" name="vcaST_1" x="2114" y="546">
      <params/>
      <attribs/>
   </obj>
   <obj type="mtyas/delay/long-delay" uuid="3d0cdcec-52ec-4b5f-9ed7-95a5c8f15244" name="obj_2" x="1526" y="560">
      <params>
         <frac32.s.map name="lowpass_1" value="-53.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="table/alloc 16b sdram" uuid="6d8eb0fd68f404cb5d14e7d4c8c146c8ccf09da1" name="t1" x="294" y="574">
      <params/>
      <attribs>
         <combo attributeName="size" selection="2097152"/>
         <text attributeName="init">
            <sText><![CDATA[]]></sText>
         </text>
      </attribs>
   </obj>
   <patchobj type="patch/object" uuid="b0682c5d-374d-4701-85a9-4f14776b0fe0" name="sine_1" x="1960" y="588">
      <params>
         <frac32.s.map name="pitch" value="19.499999523162842"/>
      </params>
      <attribs>
         <combo attributeName="mode" selection="softclip"/>
      </attribs>
      <object id="patch/object" uuid="b0682c5d-374d-4701-85a9-4f14776b0fe0">
         <sDescription>sine wave oscillator</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>osc.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="input"/>
         </inlets>
         <outlets>
            <frac32buffer.bipolar name="out" description="output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map.pitch name="pitch" noLabel="true"/>
         </params>
         <attribs>
            <combo name="mode">
               <MenuEntries>
                  <string>osc test</string>
                  <string>passthru</string>
                  <string>sym hardclip</string>
                  <string>asym hardclip</string>
                  <string>softclip</string>
                  <string>sine ringmod</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>4</string>
                  <string>5</string>
               </CEntries>
            </combo>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint32_t Phase;

int64_t fir16down4(int16_t *in) {
	// int32_t in[8] really is packed int16_t in[16]
	// assuming it is word-aligned

	static const int taps = 16;

// half of 16 tap symmetrical filter
	static const int16_t f16coefs[taps/2]={
		-2229, -655, 1898, 5819,
		13320, 17997, 22052, 24381
	};
		
	int32_t *coeffPtr = (int32_t *)&f16coefs[0];
	int32_t *x_ptr = (int32_t *)&in[0];
	int32_t *x_rev_ptr = (int32_t *)&in[14];
	// symmetric 16 tap, 16 bit FIR
	int64_t sum0 = 0;
	int32_t c_0_1 = *coeffPtr++;
	int32_t c_2_3 = *coeffPtr++;
	int32_t x_0_1 = *x_ptr; x_ptr++;
	int32_t x_2_3 = *x_ptr; x_ptr++;
	int32_t x_14_15 = *x_rev_ptr; x_rev_ptr--;
	int32_t x_12_13 = *x_rev_ptr; x_rev_ptr--;
	sum0  = __SMLALD(x_0_1, c_0_1, sum0); 
	// sum0 = x0*c0 + x1*c1
	sum0  = __SMLALDX(x_14_15, c_0_1, sum0);
	// sum0 = x0*c0 + x1*c1 + x30*c1 + x31*c0
	sum0  = __SMLALD(x_2_3, c_2_3, sum0); 
	// sum0 = x0*c0 + x1*c1 + x14*c1 + x15*c0 + x2*c2 + x3*c3 
	sum0  = __SMLALDX(x_12_13, c_2_3, sum0);
	// sum0 = x0*c0 + x1*c1 + x14*c1 + x15*c0 + x2*c2 + x3*c3 + x28*c3 + x29*c2
	int32_t c_4_5 = *coeffPtr++;
	int32_t c_6_7 = *coeffPtr++;
	int32_t x_4_5 = *x_ptr; x_ptr++;
	int32_t x_6_7 = *x_ptr; x_ptr++;
	int32_t x_10_11 = *x_rev_ptr; x_rev_ptr--;
	int32_t x_8_9 = *x_rev_ptr; x_rev_ptr--;
	sum0  = __SMLALD(x_4_5, c_4_5, sum0);
	sum0  = __SMLALDX(x_10_11, c_4_5, sum0);
	sum0  = __SMLALD(x_6_7, c_6_7, sum0);
	sum0  = __SMLALDX(x_8_9, c_6_7, sum0);
/*
	LogTextMessage("c0 : %08x",x_0_1);
	LogTextMessage("c2 : %08x",x_2_3);
	LogTextMessage("c4 : %08x",x_4_5);
	LogTextMessage("c6 : %08x",x_6_7);
	LogTextMessage("c8 : %08x",x_8_9);
	LogTextMessage("c10 : %08x",x_10_11);
	LogTextMessage("c12 : %08x",x_12_13);
	LogTextMessage("c14 : %08x",x_14_15);
*/
	return sum0;
}

void fir16up4(int16_t *in, int32_t *out){
// 4-way polyphase

	static const int16_t f16p_coefs[16] = {
		5185, 16838, 8692, -2053,
		2352, 15191, 12264, 572,
		572, 12264, 15191, 2352,
		-2053, 8692, 16838, 5185
	};
	int32_t *x_ptr = (int32_t *)&in[0];
	int32_t *coeffPtr = (int32_t *)&f16p_coefs[0];
	int32_t x_0_1 = *x_ptr++;
	int32_t x_2_3 = *x_ptr++;
	int64_t sum0, sum1, sum2, sum3;
	int32_t c_0_1 = *coeffPtr++;
	sum0 = __SMUAD(x_0_1, c_0_1);
	int32_t c_2_3 = *coeffPtr++;
	sum0 = __SMLALD(x_2_3, c_2_3, sum0);
	int32_t c_4_5 = *coeffPtr++;
	sum1 = __SMUAD(x_0_1, c_4_5);
	int32_t c_6_7 = *coeffPtr++;
	sum1 = __SMLALD(x_2_3, c_6_7, sum1);
	int32_t c_8_9 = *coeffPtr++;
	sum2 = __SMUAD(x_0_1, c_8_9);
	int32_t c_10_11 = *coeffPtr++;
	sum2 = __SMLALD(x_2_3, c_10_11, sum2);
	int32_t c_12_13 = *coeffPtr++;
	sum3 = __SMUAD(x_0_1, c_12_13);
	int32_t c_14_15 = *coeffPtr++;
	sum3 = __SMLALD(x_2_3, c_14_15, sum3);
	// 16 taps, ~22 cycles, 1.38 cycles/tap
	*out = sum0; out++;
	*out = sum1; out++;
	*out = sum2; out++;
	*out = sum3; out++;
}

void test(){

	int16_t buf[64];
	int i;
	for(i=0;i<64;i++){
		buf[i]=0;
	}
	buf[9] = 1;
/*
	for(i=0;i<40;i++){
		int32_t r = fir16down4(&buf[i]);
		LogTextMessage("%d : %d",i,r);
	}
*/
	int32_t r4[4];
	for(i=0;i<10;i++){
		fir16up4(&buf[i],&r4[0]);
		LogTextMessage("%d : %d",i,r4[0]);
		LogTextMessage("%d : %d",i,r4[1]);
		LogTextMessage("%d : %d",i,r4[2]);
		LogTextMessage("%d : %d",i,r4[3]);
	}
	
}

int16_t buf_in[BUFSIZE+4];
int32_t buf_x4[BUFSIZE*4];
int16_t buf_x4_processed[BUFSIZE*4 + BUFSIZE];]]></code.declaration>
         <code.init><![CDATA[Phase = 0;
test();]]></code.init>
         <code.krate><![CDATA[int32_t freq;
   MTOFEXTENDED(param_pitch,freq);

freq = freq>>2;

int i;
// archive 4 samples of input history for upsampling filter
for(i=0;i<4;i++){
	buf_in[i]=buf_in[BUFSIZE+i];
}
// reduce to 16bit/sample
for(i=0;i<BUFSIZE;i++){
	buf_in[i+4] = __SSAT(inlet_in[i]>>12,16); 
}
// upsample
for(i=0;i<BUFSIZE;i++){
	fir16up4(&buf_in[i], &buf_x4[i*4]);
}
// archive 16 samples of history for downsampling filter
for(i=0;i<16;i++){
	buf_x4_processed[i]=buf_x4_processed[BUFSIZE*4+i];
}

int16_t *out_x4_p = &buf_x4_processed[16];
int32_t *buf_x4_p = &buf_x4[0];
// now process at 4x samplerate
for(i=0;i<4*BUFSIZE;i++){
	int32_t in_x4 = *buf_x4_p++;

	// oscillator test
	if (attr_mode == 0) {
		Phase += freq;
		int32_t r;
		int32_t p2 = Phase;
		SINE2TINTERP(p2,r)
		*out_x4_p++ = r>>16;
	} else if (attr_mode == 1) {
	// passthrough
		*out_x4_p++ = in_x4>>16;
	} else if (attr_mode == 2) {
	// symmetric hard clip distortion
		*out_x4_p++ = __SSAT(in_x4,26)>>12;
	} else if (attr_mode == 3) {
	// asymmetric hard clip distortion
		*out_x4_p++ = __USAT(in_x4,25)>>11;
	} else if (attr_mode == 4) {
	// softclip
		int32_t ts = __SSAT(in_x4,28);
		int32_t tsq31 = ts<<3;
		int32_t tsq31p3 = ___SMMUL(tsq31,___SMMUL(tsq31,tsq31));
		*out_x4_p++ = (ts + (ts>>1) - (tsq31p3))>>13;
	} else if (attr_mode == 5) {
	// sine ringmod
		Phase += freq;
		int32_t r;
		int32_t p2 = Phase;
		SINE2TINTERP(p2,r)
		*out_x4_p++ = ___SMMUL(r,in_x4)>>16;
	}
}

for(i=0;i<BUFSIZE;i++){
	outlet_out[i] = fir16down4(&buf_x4_processed[i*4])>>5;
//	fir16up4(&buf_in[i], &buf_x4[16 + i*4]);
}]]></code.krate>
      </object>
   </patchobj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_1" x="2464" y="602">
      <params>
         <frac32.u.map name="value" value="25.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_9" x="2674" y="602">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PB1 (ADC1_IN9)"/>
      </attribs>
   </obj>
   <obj type="stomps/reverb1" uuid="b04f96f4-eb29-44ff-850e-de398c72c9cb" name="obj_3" x="1820" y="616">
      <params>
         <bool32.tgl name="on" value="1"/>
         <frac32.u.map name="*c_1" value="57.5"/>
         <frac32.u.map name="decay" value="12.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_1" x="84" y="644">
      <params/>
      <attribs>
         <combo attributeName="pad" selection="PB7"/>
         <combo attributeName="mode" selection="pulldown"/>
      </attribs>
   </obj>
   <obj type="mix/mix 3" uuid="8be16f2156012a4a8974804178cece51555f272b" name="mix_1" x="2114" y="658">
      <params>
         <frac32.u.map name="gain1" value="16.0"/>
         <frac32.u.map name="gain2" value="64.0"/>
         <frac32.u.map name="gain3" value="30.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="mtyas/delay/long-delay" uuid="3d0cdcec-52ec-4b5f-9ed7-95a5c8f15244" name="obj_1" x="1526" y="672">
      <params>
         <frac32.s.map name="lowpass_1" value="-53.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_2" x="2478" y="686">
      <params>
         <frac32.u.map name="value" value="5.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="sss/gain/vcaST" uuid="82f6d1d8-7fb6-413a-994e-96fdf4b98ee7" name="vcaST_2" x="2758" y="700">
      <params/>
      <attribs/>
   </obj>
   <obj type="table/record" uuid="2f8909f3691be093f0b8cf6532d4acff2dcb1a9f" name="record_1" x="924" y="714">
      <params/>
      <attribs>
         <objref attributeName="table" obj="t1"/>
      </attribs>
   </obj>
   <obj type="wave/play fn" uuid="25910f7130532e4934eed3cf2a934324790d0f00" name="play_3" x="546" y="728">
      <params/>
      <attribs>
         <file attributeName="fn" file="..\..\..\WaveTables\McKenna1.raw"/>
      </attribs>
   </obj>
   <obj type="math/gain" uuid="62b1c1a6337c7c8f6aec96408a432477b113cfa0" name="gain_1" x="770" y="728">
      <params>
         <frac32.u.map name="amp" value="6.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_4" x="1134" y="728">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PA4 (ADC1_IN4)"/>
      </attribs>
   </obj>
   <obj type="sss/dyn/limiter" uuid="d2ff4e06-be1a-43ac-bcaa-3833d25d4fae" name="limiter_1" x="2590" y="728">
      <params/>
      <attribs/>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_11" x="56" y="770">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PA0 (ADC1_IN0)"/>
      </attribs>
   </obj>
   <obj type="math/half" uuid="d3aa9c64dbf1ec7871bbc3e2d8905f8e443c9823" name="half_1" x="1442" y="770">
      <params/>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_3" x="2478" y="770">
      <params>
         <frac32.u.map name="value" value="11.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_5" x="1134" y="784">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PA5 (ADC1_IN5)"/>
      </attribs>
   </obj>
   <patchobj type="patch/object" uuid="b0682c5d-374d-4701-85a9-4f14776b0fe0" name="sine_2" x="1946" y="826">
      <params>
         <frac32.s.map name="pitch" value="19.499999523162842"/>
      </params>
      <attribs>
         <combo attributeName="mode" selection="softclip"/>
      </attribs>
      <object id="patch/object" uuid="b0682c5d-374d-4701-85a9-4f14776b0fe0">
         <sDescription>sine wave oscillator</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>osc.axh</helpPatch>
         <inlets>
            <frac32buffer name="in" description="input"/>
         </inlets>
         <outlets>
            <frac32buffer.bipolar name="out" description="output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.s.map.pitch name="pitch" noLabel="true"/>
         </params>
         <attribs>
            <combo name="mode">
               <MenuEntries>
                  <string>osc test</string>
                  <string>passthru</string>
                  <string>sym hardclip</string>
                  <string>asym hardclip</string>
                  <string>softclip</string>
                  <string>sine ringmod</string>
               </MenuEntries>
               <CEntries>
                  <string>0</string>
                  <string>1</string>
                  <string>2</string>
                  <string>3</string>
                  <string>4</string>
                  <string>5</string>
               </CEntries>
            </combo>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[uint32_t Phase;

int64_t fir16down4(int16_t *in) {
	// int32_t in[8] really is packed int16_t in[16]
	// assuming it is word-aligned

	static const int taps = 16;

// half of 16 tap symmetrical filter
	static const int16_t f16coefs[taps/2]={
		-2229, -655, 1898, 5819,
		13320, 17997, 22052, 24381
	};
		
	int32_t *coeffPtr = (int32_t *)&f16coefs[0];
	int32_t *x_ptr = (int32_t *)&in[0];
	int32_t *x_rev_ptr = (int32_t *)&in[14];
	// symmetric 16 tap, 16 bit FIR
	int64_t sum0 = 0;
	int32_t c_0_1 = *coeffPtr++;
	int32_t c_2_3 = *coeffPtr++;
	int32_t x_0_1 = *x_ptr; x_ptr++;
	int32_t x_2_3 = *x_ptr; x_ptr++;
	int32_t x_14_15 = *x_rev_ptr; x_rev_ptr--;
	int32_t x_12_13 = *x_rev_ptr; x_rev_ptr--;
	sum0  = __SMLALD(x_0_1, c_0_1, sum0); 
	// sum0 = x0*c0 + x1*c1
	sum0  = __SMLALDX(x_14_15, c_0_1, sum0);
	// sum0 = x0*c0 + x1*c1 + x30*c1 + x31*c0
	sum0  = __SMLALD(x_2_3, c_2_3, sum0); 
	// sum0 = x0*c0 + x1*c1 + x14*c1 + x15*c0 + x2*c2 + x3*c3 
	sum0  = __SMLALDX(x_12_13, c_2_3, sum0);
	// sum0 = x0*c0 + x1*c1 + x14*c1 + x15*c0 + x2*c2 + x3*c3 + x28*c3 + x29*c2
	int32_t c_4_5 = *coeffPtr++;
	int32_t c_6_7 = *coeffPtr++;
	int32_t x_4_5 = *x_ptr; x_ptr++;
	int32_t x_6_7 = *x_ptr; x_ptr++;
	int32_t x_10_11 = *x_rev_ptr; x_rev_ptr--;
	int32_t x_8_9 = *x_rev_ptr; x_rev_ptr--;
	sum0  = __SMLALD(x_4_5, c_4_5, sum0);
	sum0  = __SMLALDX(x_10_11, c_4_5, sum0);
	sum0  = __SMLALD(x_6_7, c_6_7, sum0);
	sum0  = __SMLALDX(x_8_9, c_6_7, sum0);
/*
	LogTextMessage("c0 : %08x",x_0_1);
	LogTextMessage("c2 : %08x",x_2_3);
	LogTextMessage("c4 : %08x",x_4_5);
	LogTextMessage("c6 : %08x",x_6_7);
	LogTextMessage("c8 : %08x",x_8_9);
	LogTextMessage("c10 : %08x",x_10_11);
	LogTextMessage("c12 : %08x",x_12_13);
	LogTextMessage("c14 : %08x",x_14_15);
*/
	return sum0;
}

void fir16up4(int16_t *in, int32_t *out){
// 4-way polyphase

	static const int16_t f16p_coefs[16] = {
		5185, 16838, 8692, -2053,
		2352, 15191, 12264, 572,
		572, 12264, 15191, 2352,
		-2053, 8692, 16838, 5185
	};
	int32_t *x_ptr = (int32_t *)&in[0];
	int32_t *coeffPtr = (int32_t *)&f16p_coefs[0];
	int32_t x_0_1 = *x_ptr++;
	int32_t x_2_3 = *x_ptr++;
	int64_t sum0, sum1, sum2, sum3;
	int32_t c_0_1 = *coeffPtr++;
	sum0 = __SMUAD(x_0_1, c_0_1);
	int32_t c_2_3 = *coeffPtr++;
	sum0 = __SMLALD(x_2_3, c_2_3, sum0);
	int32_t c_4_5 = *coeffPtr++;
	sum1 = __SMUAD(x_0_1, c_4_5);
	int32_t c_6_7 = *coeffPtr++;
	sum1 = __SMLALD(x_2_3, c_6_7, sum1);
	int32_t c_8_9 = *coeffPtr++;
	sum2 = __SMUAD(x_0_1, c_8_9);
	int32_t c_10_11 = *coeffPtr++;
	sum2 = __SMLALD(x_2_3, c_10_11, sum2);
	int32_t c_12_13 = *coeffPtr++;
	sum3 = __SMUAD(x_0_1, c_12_13);
	int32_t c_14_15 = *coeffPtr++;
	sum3 = __SMLALD(x_2_3, c_14_15, sum3);
	// 16 taps, ~22 cycles, 1.38 cycles/tap
	*out = sum0; out++;
	*out = sum1; out++;
	*out = sum2; out++;
	*out = sum3; out++;
}

void test(){

	int16_t buf[64];
	int i;
	for(i=0;i<64;i++){
		buf[i]=0;
	}
	buf[9] = 1;
/*
	for(i=0;i<40;i++){
		int32_t r = fir16down4(&buf[i]);
		LogTextMessage("%d : %d",i,r);
	}
*/
	int32_t r4[4];
	for(i=0;i<10;i++){
		fir16up4(&buf[i],&r4[0]);
		LogTextMessage("%d : %d",i,r4[0]);
		LogTextMessage("%d : %d",i,r4[1]);
		LogTextMessage("%d : %d",i,r4[2]);
		LogTextMessage("%d : %d",i,r4[3]);
	}
	
}

int16_t buf_in[BUFSIZE+4];
int32_t buf_x4[BUFSIZE*4];
int16_t buf_x4_processed[BUFSIZE*4 + BUFSIZE];]]></code.declaration>
         <code.init><![CDATA[Phase = 0;
test();]]></code.init>
         <code.krate><![CDATA[int32_t freq;
   MTOFEXTENDED(param_pitch,freq);

freq = freq>>2;

int i;
// archive 4 samples of input history for upsampling filter
for(i=0;i<4;i++){
	buf_in[i]=buf_in[BUFSIZE+i];
}
// reduce to 16bit/sample
for(i=0;i<BUFSIZE;i++){
	buf_in[i+4] = __SSAT(inlet_in[i]>>12,16); 
}
// upsample
for(i=0;i<BUFSIZE;i++){
	fir16up4(&buf_in[i], &buf_x4[i*4]);
}
// archive 16 samples of history for downsampling filter
for(i=0;i<16;i++){
	buf_x4_processed[i]=buf_x4_processed[BUFSIZE*4+i];
}

int16_t *out_x4_p = &buf_x4_processed[16];
int32_t *buf_x4_p = &buf_x4[0];
// now process at 4x samplerate
for(i=0;i<4*BUFSIZE;i++){
	int32_t in_x4 = *buf_x4_p++;

	// oscillator test
	if (attr_mode == 0) {
		Phase += freq;
		int32_t r;
		int32_t p2 = Phase;
		SINE2TINTERP(p2,r)
		*out_x4_p++ = r>>16;
	} else if (attr_mode == 1) {
	// passthrough
		*out_x4_p++ = in_x4>>16;
	} else if (attr_mode == 2) {
	// symmetric hard clip distortion
		*out_x4_p++ = __SSAT(in_x4,26)>>12;
	} else if (attr_mode == 3) {
	// asymmetric hard clip distortion
		*out_x4_p++ = __USAT(in_x4,25)>>11;
	} else if (attr_mode == 4) {
	// softclip
		int32_t ts = __SSAT(in_x4,28);
		int32_t tsq31 = ts<<3;
		int32_t tsq31p3 = ___SMMUL(tsq31,___SMMUL(tsq31,tsq31));
		*out_x4_p++ = (ts + (ts>>1) - (tsq31p3))>>13;
	} else if (attr_mode == 5) {
	// sine ringmod
		Phase += freq;
		int32_t r;
		int32_t p2 = Phase;
		SINE2TINTERP(p2,r)
		*out_x4_p++ = ___SMMUL(r,in_x4)>>16;
	}
}

for(i=0;i<BUFSIZE;i++){
	outlet_out[i] = fir16down4(&buf_x4_processed[i*4])>>5;
//	fir16up4(&buf_in[i], &buf_x4[16 + i*4]);
}]]></code.krate>
      </object>
   </patchobj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_6" x="1134" y="840">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PA6 (ADC1_IN6)"/>
      </attribs>
   </obj>
   <obj type="sss/dyn/limiter" uuid="d2ff4e06-be1a-43ac-bcaa-3833d25d4fae" name="limiter_2" x="2590" y="840">
      <params/>
      <attribs/>
   </obj>
   <obj type="drj/audio/out_stereo_vol" uuid="awca1a567f535acc21055669829101d3ee7f0189" name="out_stereo_vol_1" x="2912" y="840">
      <params>
         <frac32.u.map name="volume" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="mix/mix 3" uuid="8be16f2156012a4a8974804178cece51555f272b" name="mix_2" x="2114" y="854">
      <params>
         <frac32.u.map name="gain1" value="16.0"/>
         <frac32.u.map name="gain2" value="64.0"/>
         <frac32.u.map name="gain3" value="30.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_4" x="2478" y="854">
      <params>
         <frac32.u.map name="value" value="15.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_12" x="56" y="882">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PC0 (ADC1_IN10)"/>
      </attribs>
   </obj>
   <obj type="math/&gt;c" uuid="99f2934d97d62b715a829979ef6c8abef35dcdb2" name="&gt;c_1" x="994" y="882">
      <params>
         <frac32.u.map name="c" value="1.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_7" x="1428" y="896">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PA7 (ADC1_IN7)"/>
      </attribs>
   </obj>
   <obj type="env/follower" uuid="356ce1d18ac6b51704833f94dac5dea823fb8223" name="follower_1" x="896" y="910">
      <params/>
      <attribs>
         <combo attributeName="time" selection="1.3ms"/>
      </attribs>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_5" x="2478" y="938">
      <params>
         <frac32.u.map name="value" value="3.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gpio/out/digital" uuid="320eed040f6c55bb24c56416596ac2e67d0c82bc" name="digital_3" x="1162" y="966">
      <params/>
      <attribs>
         <combo attributeName="pad" selection="PB6"/>
         <combo attributeName="mode" selection="Push pull"/>
      </attribs>
   </obj>
   <nets>
      <net>
         <source obj="analog_1" outlet="out"/>
         <dest obj="unipolar2bipolar_1" inlet="i"/>
      </net>
      <net>
         <source obj="play_3" outlet="out"/>
         <dest obj="gain_1" inlet="in"/>
      </net>
      <net>
         <source obj="analog_3" outlet="out"/>
         <dest obj="unipolar2bipolar_2" inlet="i"/>
      </net>
      <net>
         <source obj="digital_1" outlet="out"/>
         <dest obj="and_1" inlet="i2"/>
         <dest obj="record_1" inlet="start"/>
      </net>
      <net>
         <source obj="unipolar2bipolar_1" outlet="o"/>
         <dest obj="smooth_1" inlet="in"/>
      </net>
      <net>
         <source obj="obj_1" outlet="outlet_1"/>
         <dest obj="obj_3" inlet="inR"/>
         <dest obj="sine_2" inlet="in"/>
         <dest obj="mix_2" inlet="in2"/>
      </net>
      <net>
         <source obj="analog_4" outlet="out"/>
         <dest obj="obj_2" inlet="feedback"/>
         <dest obj="obj_1" inlet="feedback"/>
      </net>
      <net>
         <source obj="analog_5" outlet="out"/>
         <dest obj="obj_2" inlet="speed"/>
         <dest obj="half_1" inlet="in"/>
      </net>
      <net>
         <source obj="analog_6" outlet="out"/>
         <dest obj="obj_2" inlet="amount"/>
         <dest obj="obj_1" inlet="amount"/>
      </net>
      <net>
         <source obj="half_1" outlet="out"/>
         <dest obj="obj_1" inlet="speed"/>
      </net>
      <net>
         <source obj="digital_2" outlet="out"/>
         <dest obj="play_3" inlet="start"/>
         <dest obj="and_1" inlet="i1"/>
      </net>
      <net>
         <source obj="analog_7" outlet="out"/>
         <dest obj="vcaST_1" inlet="v"/>
      </net>
      <net>
         <source obj="and_1" outlet="o"/>
         <dest obj="and_2" inlet="i1"/>
      </net>
      <net>
         <source obj="keyb_2" outlet="gate"/>
         <dest obj="and_2" inlet="i2"/>
      </net>
      <net>
         <source obj="and_2" outlet="o"/>
         <dest obj="load_1" inlet="trig"/>
      </net>
      <net>
         <source obj="analog_2" outlet="out"/>
         <dest obj="smooth_2" inlet="in"/>
      </net>
      <net>
         <source obj="obj_2" outlet="outlet_1"/>
         <dest obj="obj_3" inlet="inL"/>
         <dest obj="sine_1" inlet="in"/>
         <dest obj="mix_1" inlet="in2"/>
      </net>
      <net>
         <source obj="patcher_1" outlet="outlet_2"/>
         <dest obj="gain_3" inlet="in"/>
      </net>
      <net>
         <source obj="obj_3" outlet="outL"/>
         <dest obj="vcaST_1" inlet="a1"/>
      </net>
      <net>
         <source obj="obj_3" outlet="outR"/>
         <dest obj="vcaST_1" inlet="a2"/>
      </net>
      <net>
         <source obj="sine_2" outlet="out"/>
         <dest obj="mix_2" inlet="in1"/>
      </net>
      <net>
         <source obj="sine_1" outlet="out"/>
         <dest obj="mix_1" inlet="in1"/>
      </net>
      <net>
         <source obj="vcaST_1" outlet="o1"/>
         <dest obj="mix_1" inlet="in3"/>
      </net>
      <net>
         <source obj="vcaST_1" outlet="o2"/>
         <dest obj="mix_2" inlet="in3"/>
      </net>
      <net>
         <source obj="*_1" outlet="result"/>
         <dest obj="pan_1" inlet="i1"/>
      </net>
      <net>
         <source obj="phaser_32_mod_1" outlet="out"/>
         <dest obj="*_1" inlet="a"/>
      </net>
      <net>
         <source obj="analog_8" outlet="out"/>
         <dest obj="*_1" inlet="b"/>
      </net>
      <net>
         <source obj="vcaST_2" outlet="o1"/>
         <dest obj="out_stereo_vol_1" inlet="left"/>
      </net>
      <net>
         <source obj="vcaST_2" outlet="o2"/>
         <dest obj="out_stereo_vol_1" inlet="right"/>
      </net>
      <net>
         <source obj="mix_2" outlet="out"/>
         <dest obj="limiter_2" inlet="in"/>
      </net>
      <net>
         <source obj="analog_9" outlet="out"/>
         <dest obj="vcaST_2" inlet="v"/>
      </net>
      <net>
         <source obj="analog_10" outlet="out"/>
         <dest obj="cc_1" inlet="v"/>
         <dest obj="unipolar2bipolar_3" inlet="i"/>
      </net>
      <net>
         <source obj="lowpass_1" outlet="out"/>
         <dest obj="patcher_1" inlet="pos"/>
      </net>
      <net>
         <source obj="lowpass_2" outlet="out"/>
         <dest obj="patcher_1" inlet="posvar"/>
      </net>
      <net>
         <source obj="lowpass_3" outlet="out"/>
         <dest obj="patcher_1" inlet="pitchvar"/>
      </net>
      <net>
         <source obj="lowpass_4" outlet="out"/>
         <dest obj="patcher_1" inlet="pitch"/>
      </net>
      <net>
         <source obj="lowpass_5" outlet="out"/>
         <dest obj="patcher_1" inlet="size"/>
      </net>
      <net>
         <source obj="patcher_1" outlet="outlet_1"/>
         <dest obj="gain_2" inlet="in"/>
      </net>
      <net>
         <source obj="smooth_2" outlet="out"/>
         <dest obj="lowpass_1" inlet="in"/>
      </net>
      <net>
         <source obj="smooth_1" outlet="out"/>
         <dest obj="lowpass_4" inlet="in"/>
      </net>
      <net>
         <source obj="unipolar2bipolar_2" outlet="o"/>
         <dest obj="lowpass_5" inlet="in"/>
      </net>
      <net>
         <source obj="analog_11" outlet="out"/>
         <dest obj="lowpass_3" inlet="in"/>
      </net>
      <net>
         <source obj="analog_12" outlet="out"/>
         <dest obj="lowpass_2" inlet="in"/>
      </net>
      <net>
         <source obj="gain_1" outlet="out"/>
         <dest obj="record_1" inlet="wave"/>
         <dest obj="follower_1" inlet="in"/>
      </net>
      <net>
         <source obj="gain_2" outlet="out"/>
         <dest obj="obj_2" inlet="inlet_1"/>
         <dest obj="+_1" inlet="in1"/>
      </net>
      <net>
         <source obj="gain_3" outlet="out"/>
         <dest obj="obj_1" inlet="inlet_1"/>
         <dest obj="+_1" inlet="in2"/>
      </net>
      <net>
         <source obj="+_1" outlet="out"/>
         <dest obj="phaser_32_mod_1" inlet="in"/>
      </net>
      <net>
         <source obj="pan_1" outlet="left"/>
         <dest obj="mix_1" inlet="bus_in"/>
      </net>
      <net>
         <source obj="pan_1" outlet="right"/>
         <dest obj="mix_2" inlet="bus_in"/>
      </net>
      <net>
         <source obj="limiter_1" outlet="out"/>
         <dest obj="vcaST_2" inlet="a1"/>
      </net>
      <net>
         <source obj="mix_1" outlet="out"/>
         <dest obj="limiter_1" inlet="in"/>
      </net>
      <net>
         <source obj="limiter_2" outlet="out"/>
         <dest obj="vcaST_2" inlet="a2"/>
      </net>
      <net>
         <source obj="dial_1" outlet="out"/>
         <dest obj="limiter_1" inlet="gainAdd"/>
         <dest obj="limiter_2" inlet="gainAdd"/>
      </net>
      <net>
         <source obj="dial_2" outlet="out"/>
         <dest obj="limiter_1" inlet="threshold"/>
         <dest obj="limiter_2" inlet="threshold"/>
      </net>
      <net>
         <source obj="dial_3" outlet="out"/>
         <dest obj="limiter_2" inlet="rate"/>
         <dest obj="limiter_1" inlet="rate"/>
      </net>
      <net>
         <source obj="dial_4" outlet="out"/>
         <dest obj="limiter_2" inlet="goal"/>
         <dest obj="limiter_1" inlet="goal"/>
      </net>
      <net>
         <source obj="dial_5" outlet="out"/>
         <dest obj="limiter_2" inlet="expander"/>
         <dest obj="limiter_1" inlet="expander"/>
      </net>
      <net>
         <source obj="unipolar2bipolar_3" outlet="o"/>
         <dest obj="pan_1" inlet="c"/>
      </net>
      <net>
         <source obj="follower_1" outlet="amp"/>
         <dest obj="&gt;c_1" inlet="in"/>
      </net>
      <net>
         <source obj="&gt;c_1" outlet="out"/>
         <dest obj="digital_3" inlet="in"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>-8</x>
      <y>-8</y>
      <width>1936</width>
      <height>1096</height>
   </windowPos>
</patch-1.0>