<patch-1.0 appVersion="1.0.12">
   <patcher type="patch/patcher" uuid="eae8430e-4f16-4a59-934d-fba14cd2552f" name="patcher_1" x="70" y="98">
      <params>
         <frac32.u.map name="mix_1:gain1" value="64.0"/>
      </params>
      <attribs>
         <combo attributeName="poly" selection="7"/>
      </attribs>
      <subpatch appVersion="1.0.12">
         <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_1" x="0" y="0">
            <params/>
            <attribs>
               <combo attributeName="pad" selection="PB9"/>
               <combo attributeName="mode" selection="pulldown"/>
            </attribs>
         </obj>
         <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_2" x="98" y="0">
            <params/>
            <attribs>
               <combo attributeName="pad" selection="PB7"/>
               <combo attributeName="mode" selection="pulldown"/>
            </attribs>
         </obj>
         <patchobj type="patch/object" uuid="97a2b03c-61b7-47b1-b680-5fe62d4e3e48" name="mpe_1" x="0" y="84">
            <params/>
            <attribs/>
            <object id="patch/object" uuid="97a2b03c-61b7-47b1-b680-5fe62d4e3e48">
               <sDescription>Controller input for MIDI Polyphonic Expression (tailored to Linnstrument)</sDescription>
               <author>Johannes Elliesen</author>
               <license>BSD</license>
               <helpPatch>mpe.axh</helpPatch>
               <inlets/>
               <outlets>
                  <frac32.bipolar name="note" description="midi note number (-64..63)"/>
                  <bool32 name="gate" description="key pressed, no retrigger legato"/>
                  <bool32 name="gate2" description="key pressed, retrigger on legato"/>
                  <frac32.positive name="velocity" description="note-on velocity"/>
                  <frac32.positive name="releaseVelocity" description="note-off velocity"/>
                  <frac32.positive name="pressure" description="continuous pressure"/>
                  <frac32 name="bend" description="continuous pitchbend (-64..63)"/>
                  <frac32 name="timbre" description="continuous timbre (-64..63)"/>
                  <frac32 name="pitch" description="pitch including pitchbend"/>
               </outlets>
               <displays/>
               <params/>
               <attribs/>
               <includes/>
               <code.declaration><![CDATA[int8_t _note;
int32_t _gate;
int32_t _gate2;
uint32_t _velo;
uint32_t _rvelo;
uint32_t _pressure;
int32_t _bend;
int32_t _timbre;
uint8_t _lastRPN_LSB;
uint8_t _lastRPN_MSB;
uint8_t _bendRange;
int32_t _pitch;
int32_t _xl,_yl,_zl;static const uint8_t xccl = 85;static const uint8_t yccl = 87;static const uint8_t zccl = 86;]]></code.declaration>
               <code.init><![CDATA[_gate = 0;
_note = 0;
_pressure = 0;
_bend = 0;
_timbre = 0;
_bendRange = 48;
_xl=_yl=_zl=0;]]></code.init>
               <code.krate><![CDATA[outlet_note= _note<<21;
outlet_gate= _gate;
outlet_gate2= _gate2;
_gate2 = _gate;
outlet_velocity= _velo;
outlet_releaseVelocity= _rvelo;
outlet_pressure = _pressure;
outlet_bend = _bend;
outlet_timbre = _timbre;
outlet_pitch = _pitch;]]></code.krate>
               <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + attr_midichannel) && (data2)) {
  _bend = 0;
  _velo = data2<<20;
  _note = data1-64;
  _gate = 1<<27;
  _gate2 = 0;
  _pitch = (_note << 21) + ((_bend >> 6)* _bendRange );
} else if (((status == MIDI_NOTE_ON + attr_midichannel) && (!data2))||
          (status == MIDI_NOTE_OFF + attr_midichannel)) {
  if (_note == data1-64) {
    _rvelo = data2<<20;
    _gate = 0;
    _pressure = 0;
  }
} else if (status == attr_midichannel + MIDI_CHANNEL_PRESSURE) {
  _pressure = (data1<<20) + _zl;
} else if (status == attr_midichannel + MIDI_PITCH_BEND) {
  _bend = (((int)((data2<<7)+data1)-0x2000)<<14) + _xl;
  _pitch = (_note << 21) + ((_bend >> 6)* _bendRange );
} else if (status == attr_midichannel + MIDI_CONTROL_CHANGE) {
  if (data1 == MIDI_C_TIMBRE) {
    _timbre = (((int)(data2<<7)-0x2000)<<14) + _yl;
  } else if (data1 == zccl) {
   _zl = data2 << 13;  } else if (data1 == xccl) {
   _xl = data2 << 7;  } else if (data1 == yccl) {
   _yl = data2 << 14;  } else if(data1 == MIDI_C_ALL_NOTES_OFF) {
    _gate = 0;
  } else if (data1 == MIDI_C_RPN_MSB || data1 == MIDI_C_RPN_LSB || data1 == MIDI_C_DATA_ENTRY) {
    switch(data1) {
         case MIDI_C_RPN_LSB: _lastRPN_LSB = data2; break;
         case MIDI_C_RPN_MSB: _lastRPN_MSB = data2; break;
         case MIDI_C_DATA_ENTRY: {
              if (_lastRPN_LSB == 0 && _lastRPN_MSB == 0) {
                _bendRange = data2;
              }
            }
            break;
        default: break;
    }
  }
}]]></code.midihandler>
            </object>
         </patchobj>
         <obj type="hug/math/octaveShift" uuid="fdfd3e78-2e1b-4942-b027-65c98f6f7e87" name="octaveShift_2" x="140" y="84">
            <params/>
            <attribs/>
         </obj>
         <obj type="mix/mix 2 g" uuid="a68d65dda222bc916b36b283cc06d2edd719bf3b" name="mix_1" x="266" y="84">
            <params>
               <frac32.u.map name="gain1" onParent="true" value="32.0"/>
               <frac32.u.map name="gain2" value="64.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="osc/brds/bowed" uuid="c914df2f-e44b-4918-be05-2c194020cca9" name="bowed_1" x="378" y="84">
            <params>
               <frac32.s.map name="pitch" value="0.0"/>
               <frac32.u.map name="timbre" value="0.0"/>
               <frac32.u.map name="color" value="0.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_1" x="560" y="112">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet a" uuid="abd8c5fd3b0524a6630f65cad6dc27f6c58e2a3e" name="outlet_1" x="644" y="112">
            <params/>
            <attribs/>
         </obj>
         <nets>
            <net>
               <source obj="mpe_1" outlet="bend"/>
               <dest obj="mix_1" inlet="in1"/>
            </net>
            <net>
               <source obj="mpe_1" outlet="gate2"/>
               <dest obj="bowed_1" inlet="strike"/>
            </net>
            <net>
               <source obj="mix_1" outlet="out"/>
               <dest obj="bowed_1" inlet="pitch"/>
            </net>
            <net>
               <source obj="mpe_1" outlet="pressure"/>
               <dest obj="vca_1" inlet="v"/>
               <dest obj="bowed_1" inlet="timbre"/>
            </net>
            <net>
               <source obj="bowed_1" outlet="wave"/>
               <dest obj="vca_1" inlet="a"/>
            </net>
            <net>
               <source obj="vca_1" outlet="o"/>
               <dest obj="outlet_1" inlet="outlet"/>
            </net>
            <net>
               <source obj="digital_1" outlet="out"/>
               <dest obj="octaveShift_2" inlet="up"/>
            </net>
            <net>
               <source obj="digital_2" outlet="out"/>
               <dest obj="octaveShift_2" inlet="down"/>
            </net>
            <net>
               <source obj="mpe_1" outlet="note"/>
               <dest obj="mix_1" inlet="bus_in"/>
            </net>
            <net>
               <source obj="octaveShift_2" outlet="result"/>
               <dest obj="mix_1" inlet="in2"/>
            </net>
            <net>
               <source obj="mpe_1" outlet="velocity"/>
               <dest obj="bowed_1" inlet="color"/>
            </net>
         </nets>
         <settings>
            <subpatchmode>polyexpression</subpatchmode>
            <MidiChannel>1</MidiChannel>
            <NPresets>8</NPresets>
            <NPresetEntries>32</NPresetEntries>
            <NModulationSources>8</NModulationSources>
            <NModulationTargetsPerSource>8</NModulationTargetsPerSource>
            <Author></Author>
         </settings>
         <notes><![CDATA[]]></notes>
         <windowPos>
            <x>281</x>
            <y>166</y>
            <width>879</width>
            <height>527</height>
         </windowPos>
      </subpatch>
   </patcher>
   <obj type="fx/rngs/reverb" uuid="bb0fb9e0-aafe-4501-ba83-897f2530751d" name="reverb_1" x="490" y="140">
      <params>
         <frac32.u.map name="amount" value="19.0"/>
         <frac32.u.map name="time" value="30.5"/>
         <frac32.u.map name="diffusion" value="49.5"/>
         <frac32.u.map name="gain" value="14.0"/>
         <frac32.u.map name="lowpass" value="24.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="audio/out stereo" uuid="a1ca7a567f535acc21055669829101d3ee7f0189" name="out_1" x="686" y="154">
      <params/>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="reverb_1" outlet="r"/>
         <dest obj="out_1" inlet="right"/>
      </net>
      <net>
         <source obj="reverb_1" outlet="l"/>
         <dest obj="out_1" inlet="left"/>
      </net>
      <net>
         <source obj="patcher_1" outlet="outlet_1"/>
         <dest obj="reverb_1" inlet="r"/>
         <dest obj="reverb_1" inlet="l"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>382</x>
      <y>400</y>
      <width>947</width>
      <height>839</height>
   </windowPos>
</patch-1.0>