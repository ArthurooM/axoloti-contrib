<patch-1.0 appVersion="1.0.12">
   <patcher type="patch/patcher" uuid="94ea03b0-d64d-4051-9ff8-0a602eba96cc" name="ScaryMovieSubPatch_1" x="14" y="0">
      <params>
         <frac32.u.map name="pitchwobble" value="9.5"/>
         <frac32.u.map name="mix_3:gain3" value="24.0"/>
         <frac32.s.map name="filter:pitch" value="9.0">
            <modulators>
               <modulation sourceName="mod_brightness" modName="" value="64.0"/>
            </modulators>
         </frac32.s.map>
         <frac32.s.map name="pwm_speed1" value="-25.0"/>
         <frac32.u.map name="pwm_amnt" value="1.0"/>
         <frac32.s.map name="pwm_speed2" value="-26.0"/>
         <frac32.u.map name="pwm_amnt2" value="0.8999996185302734"/>
      </params>
      <attribs>
         <combo attributeName="poly" selection="5"/>
      </attribs>
      <subpatch appVersion="1.0.12">
         <obj type="patch/inlet f" uuid="5c585d2dcd9c05631e345ac09626a22a639d7c13" name="pitch_fluct" x="28" y="14">
            <params/>
            <attribs/>
         </obj>
         <obj type="math/&gt;&gt;" uuid="d883beaf50b7aae4803ed9941e8f123e87e1e3aa" name="&gt;&gt;_1" x="112" y="14">
            <params/>
            <attribs>
               <spinner attributeName="shift" value="5"/>
            </attribs>
         </obj>
         <obj type="mix/mix 1 g" uuid="2065eeca525a4691f1bc08a7dc5468871de651b7" name="pitchwobble" x="210" y="14">
            <params>
               <frac32.u.map name="gain1" onParent="true" value="5.5"/>
            </params>
            <attribs/>
         </obj>
         <obj type="osc/pwm" uuid="a6b40ff63f161d8bac8ea2eba5b0dbffcf49b472" name="pwm_1" x="350" y="28">
            <params>
               <frac32.s.map name="pitch" value="12.020000457763672"/>
            </params>
            <attribs/>
         </obj>
         <obj type="mix/mix 3 g" uuid="efc0bdb8ca0ec2184330951eff5203ff487e35a9" name="mix_3" x="490" y="42">
            <params>
               <frac32.u.map name="gain1" value="12.0"/>
               <frac32.u.map name="gain2" value="12.0"/>
               <frac32.u.map name="gain3" onParent="true" value="16.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_1" x="784" y="42">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet a" uuid="abd8c5fd3b0524a6630f65cad6dc27f6c58e2a3e" name="outlet_1" x="854" y="42">
            <params/>
            <attribs/>
         </obj>
         <obj type="filter/vcf3" uuid="92455c652cd098cbb682a5497baa18abbf2ef865" name="filter" x="644" y="56">
            <params>
               <frac32.s.map name="pitch" onParent="true" value="0.0"/>
               <frac32.u.map name="reso" value="14.5"/>
            </params>
            <attribs/>
         </obj>
         <obj type="midi/ctrl/mpe" uuid="94323477e6476a10b9332922e5dfcd2705641af1" name="mpe_1" x="28" y="84">
            <params/>
            <attribs/>
         </obj>
         <obj type="osc/pwm" uuid="a6b40ff63f161d8bac8ea2eba5b0dbffcf49b472" name="pwm_2" x="350" y="126">
            <params>
               <frac32.s.map name="pitch" value="11.979999542236328"/>
            </params>
            <attribs/>
         </obj>
         <obj type="env/adsr m" uuid="98bd39fb828c392b28126d259cb5175e6f6ea34b" name="adsr_1" x="700" y="210">
            <params>
               <frac32.s.map name="a" value="42.0"/>
               <frac32.s.map name="d" value="0.0"/>
               <frac32.u.map name="s" value="64.0"/>
               <frac32.s.map name="r" value="25.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="osc/tri" uuid="905879afa8256b0ca207557d656949e476ca6f16" name="tri_1" x="350" y="224">
            <params>
               <frac32.s.map name="pitch" value="0.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="math/inv" uuid="565521d3699b36d8095aa1c79b9ad0046fb133ce" name="inv_1" x="630" y="280">
            <params/>
            <attribs/>
         </obj>
         <patchobj type="patch/object" uuid="b25b432e-4499-4b1d-aecc-241f132db7f7" name="pwm_speed1" x="126" y="308">
            <params>
               <frac32.s.map name="pitch" onParent="true" value="-21.0"/>
            </params>
            <attribs/>
            <object id="patch/object" uuid="b25b432e-4499-4b1d-aecc-241f132db7f7">
               <sDescription>triangle wave LFO, pitch input</sDescription>
               <author>Peter Witzel</author>
               <license>CC0</license>
               <inlets>
                  <frac32.bipolar name="pitch" description="pitch"/>
                  <bool32.rising name="reset" description="reset phase"/>
               </inlets>
               <outlets>
                  <frac32.bipolar name="wave" description="triangle wave"/>
               </outlets>
               <displays/>
               <params>
                  <frac32.s.map.lfopitch name="pitch" noLabel="true"/>
               </params>
               <attribs/>
               <includes/>
               <code.declaration><![CDATA[int32_t phase;
uint32_t r;
]]></code.declaration>
               <code.init><![CDATA[phase = 3<<30;
   r = 1;
]]></code.init>
               <code.krate><![CDATA[   {
      if (inlet_reset && r) {
         phase = 3<<30;
         r = 0;
      } else {
         if (!inlet_reset) r = 1;
         uint32_t freq;
         MTOFEXTENDED(param_pitch + inlet_pitch,freq);
         phase += freq>>2;
      }
      if (phase>0){
         outlet_wave = ((1<<30)-(phase))>>3;
      } else {
         outlet_wave = (phase+(1<<30))>>3;
      }
   }]]></code.krate>
            </object>
         </patchobj>
         <obj type="math/gain" uuid="6b4dd3da49f98e54900f6c20031f38f4624fa364" name="pwm_amnt" x="238" y="322">
            <params>
               <frac32.u.map name="amp" onParent="true" value="0.5"/>
            </params>
            <attribs/>
         </obj>
         <obj type="math/smooth2" uuid="9ba3ddec912512e6b63211080e89cb25b6d84834" name="smooth2_1" x="364" y="322">
            <params>
               <frac32.u.map name="risetime" value="18.5"/>
               <frac32.u.map name="falltime" value="53.0"/>
            </params>
            <attribs/>
         </obj>
         <obj type="mix/mix 2 g" uuid="a68d65dda222bc916b36b283cc06d2edd719bf3b" name="mix_2" x="476" y="322">
            <params>
               <frac32.u.map name="gain1" value="64.0"/>
               <frac32.u.map name="gain2" value="32.0"/>
            </params>
            <attribs/>
         </obj>
         <patchobj type="patch/object" uuid="5ccec52e-098f-4600-ad96-b7d2d2d325ac" name="pwm_speed2" x="126" y="420">
            <params>
               <frac32.s.map name="pitch" onParent="true" value="-22.0"/>
            </params>
            <attribs/>
            <object id="patch/object" uuid="5ccec52e-098f-4600-ad96-b7d2d2d325ac">
               <sDescription>triangle wave LFO, pitch input</sDescription>
               <author>Peter Witzel</author>
               <license>CC0</license>
               <inlets>
                  <frac32.bipolar name="pitch" description="pitch"/>
                  <bool32.rising name="reset" description="reset phase"/>
               </inlets>
               <outlets>
                  <frac32.bipolar name="wave" description="triangle wave"/>
               </outlets>
               <displays/>
               <params>
                  <frac32.s.map.lfopitch name="pitch" noLabel="true"/>
               </params>
               <attribs/>
               <includes/>
               <code.declaration><![CDATA[int32_t phase;
uint32_t r;
]]></code.declaration>
               <code.init><![CDATA[phase = 3<<30;
   r = 1;
]]></code.init>
               <code.krate><![CDATA[   {
      if (inlet_reset && r) {
         phase = 3<<30;
         r = 0;
      } else {
         if (!inlet_reset) r = 1;
         uint32_t freq;
         MTOFEXTENDED(param_pitch + inlet_pitch,freq);
         phase += freq>>2;
      }
      if (phase>0){
         outlet_wave = ((1<<30)-(phase))>>3;
      } else {
         outlet_wave = (phase+(1<<30))>>3;
      }
   }]]></code.krate>
            </object>
         </patchobj>
         <obj type="math/gain" uuid="6b4dd3da49f98e54900f6c20031f38f4624fa364" name="pwm_amnt2" x="238" y="420">
            <params>
               <frac32.u.map name="amp" onParent="true" value="0.5"/>
            </params>
            <attribs/>
         </obj>
         <nets>
            <net>
               <source obj="pwm_speed2" outlet="wave"/>
               <dest obj="pwm_amnt2" inlet="in"/>
            </net>
            <net>
               <source obj="pwm_speed1" outlet="wave"/>
               <dest obj="pwm_amnt" inlet="in"/>
            </net>
            <net>
               <source obj="pwm_amnt" outlet="out"/>
               <dest obj="pwm_1" inlet="pw"/>
            </net>
            <net>
               <source obj="pwm_amnt2" outlet="out"/>
               <dest obj="pwm_2" inlet="pw"/>
            </net>
            <net>
               <source obj="filter" outlet="out"/>
               <dest obj="vca_1" inlet="a"/>
            </net>
            <net>
               <source obj="vca_1" outlet="o"/>
               <dest obj="outlet_1" inlet="outlet"/>
            </net>
            <net>
               <source obj="mpe_1" outlet="gate"/>
               <dest obj="adsr_1" inlet="gate"/>
            </net>
            <net>
               <source obj="adsr_1" outlet="env"/>
               <dest obj="vca_1" inlet="v"/>
            </net>
            <net>
               <source obj="mpe_1" outlet="pressure"/>
               <dest obj="smooth2_1" inlet="in"/>
            </net>
            <net>
               <source obj="smooth2_1" outlet="out"/>
               <dest obj="mix_2" inlet="in2"/>
            </net>
            <net>
               <source obj="mix_2" outlet="out"/>
               <dest obj="filter" inlet="pitch"/>
            </net>
            <net>
               <source obj="pwm_1" outlet="wave"/>
               <dest obj="mix_3" inlet="in1"/>
            </net>
            <net>
               <source obj="pwm_2" outlet="wave"/>
               <dest obj="mix_3" inlet="in2"/>
            </net>
            <net>
               <source obj="tri_1" outlet="wave"/>
               <dest obj="mix_3" inlet="in3"/>
            </net>
            <net>
               <source obj="mix_3" outlet="out"/>
               <dest obj="filter" inlet="in"/>
            </net>
            <net>
               <source obj="mpe_1" outlet="velocity"/>
               <dest obj="inv_1" inlet="in"/>
            </net>
            <net>
               <source obj="inv_1" outlet="out"/>
               <dest obj="adsr_1" inlet="a"/>
            </net>
            <net>
               <source obj="pitchwobble" outlet="out"/>
               <dest obj="mix_2" inlet="in1"/>
               <dest obj="pwm_2" inlet="pitch"/>
               <dest obj="pwm_1" inlet="pitch"/>
               <dest obj="tri_1" inlet="pitch"/>
            </net>
            <net>
               <source obj="mpe_1" outlet="pitch"/>
               <dest obj="pitchwobble" inlet="bus_in"/>
            </net>
            <net>
               <source obj="pitch_fluct" outlet="inlet"/>
               <dest obj="&gt;&gt;_1" inlet="a"/>
            </net>
            <net>
               <source obj="&gt;&gt;_1" outlet="result"/>
               <dest obj="pitchwobble" inlet="in1"/>
            </net>
         </nets>
         <settings>
            <subpatchmode>polychannel</subpatchmode>
            <MidiChannel>1</MidiChannel>
            <NPresets>8</NPresets>
            <NPresetEntries>32</NPresetEntries>
            <NModulationSources>8</NModulationSources>
            <NModulationTargetsPerSource>8</NModulationTargetsPerSource>
         </settings>
         <notes><![CDATA[]]></notes>
         <windowPos>
            <x>181</x>
            <y>89</y>
            <width>1109</width>
            <height>651</height>
         </windowPos>
      </subpatch>
   </patcher>
   <patchobj type="patch/object" uuid="6eac885d-6574-4e53-88bd-e8b69e42634d" name="chorus_1" x="154" y="0">
      <params>
         <frac32.u.map name="time" value="33.5"/>
         <frac32.s.map name="tspread" value="10.0"/>
         <frac32.u.map name="lfoamt" value="16.0"/>
         <frac32.s.map name="lfofreq" value="-3.0"/>
         <frac32.s.map name="fspread" value="3.0"/>
         <frac32.u.map name="mix" value="33.0"/>
         <int32 name="voices" value="4"/>
      </params>
      <attribs>
         <combo attributeName="wordsize" selection="32 bit"/>
         <combo attributeName="interp" selection="On"/>
         <combo attributeName="delaysize" selection="4096 (85.33ms)"/>
         <spinner attributeName="maxvoices" value="4"/>
      </attribs>
      <object id="patch/object" uuid="6eac885d-6574-4e53-88bd-e8b69e42634d">
         <sDescription>Chorus</sDescription>
         <author>Are Leistad</author>
         <license>BSD</license>
         <inlets>
            <frac32buffer.bipolar name="in" description="Input"/>
         </inlets>
         <outlets>
            <frac32buffer.bipolar name="out" description="Output"/>
         </outlets>
         <displays/>
         <params>
            <frac32.u.map name="time" description="Delay time" noLabel="false"/>
            <frac32.s.map name="tspread" description="Time spread" noLabel="false"/>
            <frac32.u.map.squaregain name="lfoamt" description="LFO amount" noLabel="false"/>
            <frac32.s.map.lfopitch name="lfofreq" description="LFO frequency" noLabel="false"/>
            <frac32.s.map name="fspread" description="Frequency spread" noLabel="false"/>
            <frac32.u.map name="mix" description="Dry/wet mix" noLabel="false"/>
            <int32 name="voices" description="Number of voices, 1..maxvoices, 0 for disable" noLabel="false">
               <MinValue i="0"/>
               <MaxValue i="8"/>
            </int32>
         </params>
         <attribs>
            <combo name="wordsize">
               <MenuEntries>
                  <string>32 bit</string>
                  <string>16 bit</string>
                  <string>12 bit</string>
                  <string>8 bit</string>
                  <string>4 bit</string>
               </MenuEntries>
               <CEntries>
                  <string>32</string>
                  <string>16</string>
                  <string>12</string>
                  <string>8</string>
                  <string>4</string>
               </CEntries>
            </combo>
            <combo name="interp">
               <MenuEntries>
                  <string>On</string>
                  <string>Off</string>
               </MenuEntries>
               <CEntries>
                  <string>1</string>
                  <string>0</string>
               </CEntries>
            </combo>
            <combo name="delaysize">
               <MenuEntries>
                  <string>256 (5.33ms)</string>
                  <string>512 (10.66ms)</string>
                  <string>1024 (21.33ms)</string>
                  <string>2048 (42.66ms)</string>
                  <string>4096 (85.33ms)</string>
                  <string>8192 (170ms)</string>
                  <string>16384 (341ms)</string>
                  <string>32768 (682ms)</string>
                  <string>65536 (1.36s)</string>
                  <string>131072 (2.73s)</string>
                  <string>262144 (5.46s)</string>
                  <string>524288 (10.9s)</string>
                  <string>1048576 (21.8s)</string>
                  <string>2097152 (43.7s)</string>
               </MenuEntries>
               <CEntries>
                  <string>8</string>
                  <string>9</string>
                  <string>10</string>
                  <string>11</string>
                  <string>12</string>
                  <string>13</string>
                  <string>14</string>
                  <string>15</string>
                  <string>16</string>
                  <string>17</string>
                  <string>18</string>
                  <string>19</string>
                  <string>20</string>
                  <string>21</string>
               </CEntries>
            </combo>
            <spinner name="maxvoices" MinValue="1" MaxValue="8" DefaultValue="4"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[

      #define WORDSIZE attr_wordsize
      #define INTERPOLATE attr_interp
      #define CHORUS_USE_SDRAM
      //attr_storage

      static const uint32_t LENGTHPOW = (attr_delaysize);
      static const uint32_t LENGTH = (1<<attr_delaysize);
      static const uint32_t LENGTHMASK = ((1<<attr_delaysize)-1);
      static const uint32_t WORDLENGTH = attr_wordsize;

    #ifdef CHORUS_USE_SDRAM
      #if WORDSIZE == 32
        int32_t *array;
      #elif WORDSIZE == 16
        int16_t *array;
      #elif WORDSIZE == 12
        int16_t *array;
      #elif WORDSIZE == 8
        int8_t *array;
      #elif WORDSIZE == 4
        int8_t *array;
      #endif
    #else
      #if WORDSIZE == 32
        int32_t array[LENGTH];
      #elif WORDSIZE == 16
        int16_t array[LENGTH];
      #elif WORDSIZE == 12
        int16_t array[LENGTH];
      #elif WORDSIZE == 8
        int8_t array[LENGTH];
      #elif WORDSIZE == 4
        int8_t array[LENGTH];
      #endif
    #endif

      int32_t  nvoices;
      int32_t  old_nvoices;
      int32_t  voice_vol;
      int32_t  time[attr_maxvoices];
      int32_t  lfo_prev[attr_maxvoices];
      int32_t  lfo_step[attr_maxvoices];
      int32_t  lfo_i[attr_maxvoices];
      uint32_t lfo_phase[attr_maxvoices];
      uint32_t writepos;

    ]]></code.declaration>
         <code.init><![CDATA[

    #ifdef CHORUS_USE_SDRAM
      #if WORDSIZE == 32
        static int32_t _array[attr_poly][LENGTH] __attribute__ ((section (".sdram")));
      #elif WORDSIZE == 16
        static int16_t _array[attr_poly][LENGTH] __attribute__ ((section (".sdram")));
      #elif WORDSIZE == 12
        static int16_t _array[attr_poly][LENGTH] __attribute__ ((section (".sdram")));
      #elif WORDSIZE == 8
        static int8_t _array[attr_poly][LENGTH] __attribute__ ((section (".sdram")));
      #elif WORDSIZE == 4
        static int8_t _array[attr_poly][LENGTH] __attribute__ ((section (".sdram")));
      #endif
      array = &_array[parent->polyIndex][0];
    #endif

      for( int i = 0; i < LENGTH; ++i )
        {
          array[i]   = 0;
        }

      for( int v = 0; v < attr_maxvoices; ++v )
        {
          lfo_phase[v] = 0;
          lfo_prev[v]  = 0;
          lfo_step[v]  = 0;
          lfo_i[v]     = 0;
        }

      nvoices     = 0;
      old_nvoices = -1;
      voice_vol   = (1<<30);
      writepos    = 0;

    ]]></code.init>
         <code.krate><![CDATA[

      // Voice scaling
      if( param_voices != old_nvoices )
        {
          nvoices = param_voices <= attr_maxvoices ? param_voices : attr_maxvoices;
          if( nvoices > 0 )
            {
              voice_vol = (int32_t) ((1<<30) * 1.0f /_VSQRTF(nvoices));
              //voice_vol = (int32_t) ((1<<30) * 1.0f / pow( nvoices, 0.4f ));  // for a bit more oomph with more voices
            }
          old_nvoices = nvoices;
        }

      // Modulation
      int32_t spread = 0;
      for( int v = 0; v < nvoices; ++v )
        {
                  time[v]  = ___SMMLA( param_tspread<<3, spread, param_time );
          int32_t lfo_freq = ___SMMLA( param_fspread<<3, spread, param_lfofreq );
          spread += (1<<27); // 0, 16, 32, 48, shifted for scaling in ___SMMUL
          int32_t lfo_out;

          MTOFEXTENDED( lfo_freq, lfo_freq );
          lfo_phase[v] += lfo_freq>>2;
          SINE2TINTERP( lfo_phase[v], lfo_out )
          lfo_out = ___SMMUL( param_lfoamt>>1, lfo_out );

          // LFO smoothing
          lfo_step[v]   = (lfo_out - lfo_prev[v])>>4;
          lfo_i[v]      = lfo_prev[v];
          lfo_prev[v]   = lfo_out;
        }

      // Delay line write
      for( int buffer_index = 0; buffer_index < BUFSIZE; ++buffer_index )
        {
          // Delay line write
          writepos = (writepos + 1)&LENGTHMASK;

          #if WORDSIZE == 32
            array[writepos] = __SSAT( inlet_in[buffer_index],     28);
          #elif WORDSIZE == 16
            array[writepos] = __SSAT( inlet_in[buffer_index]>>12, 16);
          #elif WORDSIZE == 12
            array[writepos] = __SSAT( inlet_in[buffer_index]>>16, 12);
          #elif WORDSIZE == 8
            array[writepos] = __SSAT( inlet_in[buffer_index]>>20,  8);
          #elif WORDSIZE == 4
            array[writepos] = __SSAT( inlet_in[buffer_index]>>24,  4);
          #endif
        }

      // Voices
      for( int buffer_index = 0; buffer_index < BUFSIZE; ++buffer_index )
        {
          int32_t chorus_out = 0;
          for( int v = 0; v < nvoices; ++v )
            {
              // LFO smoothing
              int32_t lfo_out_interp = lfo_i[v];
              lfo_i[v] += lfo_step[v];

            #if INTERPOLATE == 0

              int32_t  time_mod;
              uint32_t tmp_d;
              uint32_t tmp_di;
              int32_t  tmp_r;

              time_mod = ___SMMUL( time[v], lfo_out_interp );
              tmp_d = __USAT( time[v] + time_mod, 27 );
              uint32_t tmp_d_limited = tmp_d>>(27 -LENGTHPOW);
              if( tmp_d_limited > LENGTHMASK - BUFSIZE )
                {
                  tmp_d_limited = LENGTHMASK - BUFSIZE;
                  tmp_d = 0;
                }
              tmp_di = writepos - tmp_d_limited - BUFSIZE + buffer_index -1;

              //uint32_t delay1 = writepos - (__USAT(param_time + inlet_time,27)>>(27-LENGTHPOW)) - BUFSIZE + buffer_index;
              //outlet_out = array[tmp_di & LENGTHMASK]<<14;
              #if WORDSIZE == 32
                tmp_r = array[tmp_di&LENGTHMASK]<<2;
              #elif WORDSIZE == 16
                tmp_r = array[tmp_di&LENGTHMASK]<<14;
              #elif WORDSIZE == 12
                tmp_r = array[tmp_di&LENGTHMASK]<<18;
              #elif WORDSIZE == 8
                tmp_r = array[tmp_di&LENGTHMASK]<<22;
              #elif WORDSIZE == 4
                tmp_r = array[tmp_di&LENGTHMASK]<<26;
              #endif

              chorus_out = ___SMMLA( voice_vol, tmp_r, chorus_out );

            #else

              int32_t  time_mod;
              uint32_t tmp_d;
              uint32_t tmp_di;
              uint32_t tmp_w1;
              uint32_t tmp_w2;
              int32_t  tmp_a1;
              int32_t  tmp_a2;
              int32_t  tmp_r;

              time_mod = ___SMMUL( time[v], lfo_out_interp );
              tmp_d = __USAT( time[v] + time_mod, 27 );
              uint32_t tmp_d_limited = tmp_d>>(27 -LENGTHPOW);
              if( tmp_d_limited > LENGTHMASK - BUFSIZE )
                {
                  tmp_d_limited = LENGTHMASK - BUFSIZE;
                  tmp_d = 0;
                }
              tmp_di = writepos - tmp_d_limited - BUFSIZE + buffer_index -1;
              tmp_w1 = (tmp_d<<( LENGTHPOW+3)) & 0x3FFFFFFF;
              tmp_w2 = (1<<30) - tmp_w1;
              #if WORDSIZE == 32
                tmp_a1 = array[tmp_di&LENGTHMASK]<<2;
                tmp_a2 = array[(tmp_di+1)&LENGTHMASK]<<2;
              #elif WORDSIZE == 16
                tmp_a1 = array[tmp_di&LENGTHMASK]<<14;
                tmp_a2 = array[(tmp_di+1)&LENGTHMASK]<<14;
              #elif WORDSIZE == 12
                tmp_a1 = array[tmp_di&LENGTHMASK]<<18;
                tmp_a2 = array[(tmp_di+1)&LENGTHMASK]<<18;
              #elif WORDSIZE == 8
                tmp_a1 = array[tmp_di&LENGTHMASK]<<22;
                tmp_a2 = array[(tmp_di+1)&LENGTHMASK]<<22;
              #elif WORDSIZE == 4
                tmp_a1 = array[tmp_di&LENGTHMASK]<<26;
                tmp_a2 = array[(tmp_di+1)&LENGTHMASK]<<26;
              #endif
              tmp_r  = ___SMMUL(tmp_a1,tmp_w1);
              tmp_r  = ___SMMLA(tmp_a2,tmp_w2,tmp_r);

              chorus_out = ___SMMLA( voice_vol, tmp_r<<2, chorus_out );

            #endif
            }
          chorus_out  = ___SMMUL(          param_mix<<3,  chorus_out<<2 );
          chorus_out  = ___SMMLA( ((1<<27)-param_mix)<<3, inlet_in[buffer_index]<<2, chorus_out );
          outlet_out[buffer_index] = __SSAT( chorus_out, 28 );
        }
    ]]></code.krate>
      </object>
   </patchobj>
   <obj type="fx/lmnts/reverb" uuid="8027561C-A0B5-4DF8-A10E-3ED1274F2980" name="reverb_1" x="294" y="0">
      <params>
         <frac32.u.map name="amount" value="0.0"/>
         <frac32.u.map name="time" value="0.0"/>
         <frac32.u.map name="diffusion" value="0.0"/>
         <frac32.u.map name="gain" value="0.0"/>
         <frac32.u.map name="lowpass" value="0.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="filter/lp m" uuid="1aa1bc51da479ed92429af700591f9d7b9f45f22" name="lp_1" x="476" y="0">
      <params>
         <frac32.s.map name="pitch" value="45.0"/>
         <frac32.u.map name="reso" value="16.5"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="e1011a3f-e435-41dd-acc5-d8bead5164a2" name="saturatorSt_1" x="602" y="0">
      <params>
         <frac32.u.map name="amp" value="3.0"/>
         <frac32.u.map name="strength" value="8.0"/>
         <frac32.u.map name="max" value="45.0"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="e1011a3f-e435-41dd-acc5-d8bead5164a2">
         <sDescription>inverse exponential saturator/hard limiter
non-linear response</sDescription>
         <author>Remco van der Most</author>
         <license>BSD</license>
         <inlets>
            <frac32buffer name="inL"/>
            <frac32buffer name="inR"/>
         </inlets>
         <outlets>
            <frac32buffer name="outL"/>
            <frac32buffer name="outR"/>
         </outlets>
         <displays/>
         <params>
            <frac32.u.map.gain16 name="amp"/>
            <frac32.u.map name="strength"/>
            <frac32.u.map name="max"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int i;]]></code.declaration>
         <code.srate><![CDATA[int32_t In=___SMMUL(param_amp,inlet_inL<<4)<<1;
int32_t in=__SSAT(In,28);
int32_t pos=in>0?in:-in;
int32_t dir=in>0?1:-1;
int32_t ccomp=(1<<27)-pos;
int32_t temp=param_strength;
int32_t itemp=(1<<27)-temp;
temp=___SMMUL(temp<<3,ccomp<<2);
itemp=itemp+temp;
ccomp=___SMMUL(ccomp<<3,itemp<<2);
ccomp=___SMMUL(ccomp<<3,itemp<<2);
pos=(1<<27)-ccomp;
outlet_outL=___SMMUL(param_max<<3,___SMMUL(ccomp<<3,In<<1)+___SMMUL(pos<<2,(dir<<27)<<2)<<3);

In=___SMMUL(param_amp,inlet_inR<<4)<<1;
in=__SSAT(In,28);
pos=in>0?in:-in;
dir=in>0?1:-1;
ccomp=(1<<27)-pos;
temp=param_strength;
itemp=(1<<27)-temp;
temp=___SMMUL(temp<<3,ccomp<<2);
itemp=itemp+temp;
ccomp=___SMMUL(ccomp<<3,itemp<<2);
ccomp=___SMMUL(ccomp<<3,itemp<<2);
pos=(1<<27)-ccomp;
outlet_outR=___SMMUL(param_max<<3,___SMMUL(ccomp<<3,In<<1)+___SMMUL(pos<<2,(dir<<27)<<2)<<3);]]></code.srate>
      </object>
   </patchobj>
   <patchobj type="patch/object" uuid="31b92706-63fc-4519-9a63-c19b62942844" name="out_stereo_vol_1" x="714" y="0">
      <params>
         <frac32.u.map name="volume" value="0.0">
            <modulators>
               <modulation sourceName="mod_vol" modName="" value="48.0"/>
            </modulators>
         </frac32.u.map>
      </params>
      <attribs/>
      <object id="patch/object" uuid="31b92706-63fc-4519-9a63-c19b62942844">
         <sDescription>Audio output, stereo, volume control, 12dB gain</sDescription>
         <author>Are Leistad</author>
         <license>BSD</license>
         <inlets>
            <frac32buffer.bipolar name="left" description="Left channel"/>
            <frac32buffer.bipolar name="right" description="Right channel"/>
         </inlets>
         <outlets/>
         <displays>
            <frac32.vu name="vuLeft"/>
            <frac32.vu name="vuRight"/>
         </displays>
         <params>
            <frac32.u.map.squaregain name="volume"/>
         </params>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[
      int j,l,r;
      for( j = 0; j < BUFSIZE; ++j )
        {
          l = ___SMMUL( param_volume, inlet_left[j]) <<2;
          r = ___SMMUL( param_volume, inlet_right[j])<<2;
          AudioOutputLeft[j]  += __SSAT(l,28);
          AudioOutputRight[j] += __SSAT(r,28);
        }
      disp_vuLeft  = l;
      disp_vuRight = r;
    ]]></code.krate>
      </object>
   </patchobj>
   <obj type="ctrl/toggle" uuid="42b8134fa729d54bfc8d62d6ef3fa99498c1de99" name="toggle_MPE" x="910" y="14">
      <params>
         <bool32.tgl name="b" value="1"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="558226ad-9ef8-4826-88eb-fd6344a39727" name="Blocks_SeaboardConfig_1" x="994" y="14">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="558226ad-9ef8-4826-88eb-fd6344a39727">
         <sDescription>Sends CCs to configure a Roli Seaboard Block running a corresponding Littlefoot script</sDescription>
         <author>Kai Drange</author>
         <license>BSD</license>
         <inlets>
            <bool32.risingfalling name="MPE" description="MPE mode on"/>
            <bool32.risingfalling name="Piano" description="Piano mode on"/>
            <int32.positive name="SingleChannelNo" description="Midi channel for non-MPE mode"/>
         </inlets>
         <outlets/>
         <displays>
            <bool32 name="mpe"/>
            <bool32 name="piano"/>
         </displays>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[int ccChannel = 80;
int ccPiano = 81;

bool prevMPEState = false;;
bool prevPianoState = false;
int prevChannel = 1;
bool initialStateSent = false;]]></code.declaration>
         <code.krate><![CDATA[if (!initialStateSent) {
	prevMPEState = inlet_MPE ? false : true;
	prevPianoState = inlet_Piano ? false : true;
	prevChannel = inlet_SingleChannelNo - 1;
	initialStateSent = true;
}
else {
	if (inlet_MPE && !prevMPEState) {
		disp_mpe = true;
		MidiSend3(MIDI_DEVICE_USB_HOST, 1, 11 << 4, ccChannel, 0);
	}
	else if (!inlet_MPE && prevMPEState) {
		MidiSend3(MIDI_DEVICE_USB_HOST, 1, 11 << 4, ccChannel, inlet_SingleChannelNo);
		disp_mpe = false;
	}
	else if (inlet_SingleChannelNo != prevChannel) {
		MidiSend3(MIDI_DEVICE_USB_HOST, 1, 11 << 4, ccChannel, inlet_SingleChannelNo);
		disp_mpe = false;
	}
	
	if (inlet_Piano && !prevPianoState) {
		MidiSend3(MIDI_DEVICE_USB_HOST, 1, 11 << 4, ccPiano, 1);
	  	disp_piano = true;
	}
	else if (!inlet_Piano && prevPianoState) {
		MidiSend3(MIDI_DEVICE_USB_HOST, 1, 11 << 4, ccPiano, 0);
		disp_piano = false;
	}
	
	prevMPEState = inlet_MPE ? true : false;
	prevPianoState = inlet_Piano ? true : false;
	prevChannel = inlet_SingleChannelNo;
}]]></code.krate>
      </object>
   </patchobj>
   <obj type="filter/lp m" uuid="1aa1bc51da479ed92429af700591f9d7b9f45f22" name="lp_2" x="476" y="140">
      <params>
         <frac32.s.map name="pitch" value="45.0"/>
         <frac32.u.map name="reso" value="16.5"/>
      </params>
      <attribs/>
   </obj>
   <patcher type="patch/patcher" uuid="1bd551ee-d905-45e2-8d2c-c6bfa70bf7ef" name="BlocksControls_1" x="742" y="154">
      <params/>
      <attribs/>
      <subpatch appVersion="1.0.12">
         <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_1" x="0" y="0">
            <params/>
            <attribs>
               <combo attributeName="channel" selection="PA0 (ADC1_IN0)"/>
            </attribs>
         </obj>
         <obj type="drj/math/inv_pos" uuid="ae23d42592d86ae7d7f2202cb1124490774d118a" name="inv_pos_4" x="140" y="0">
            <params/>
            <attribs/>
         </obj>
         <obj type="conv/unipolar2bipolar" uuid="efc8ee28c508740c5edf7995eaaa07a6d6818e5e" name="unipolar2bipolar_3" x="252" y="0">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet f" uuid="d18a9a550bcaaebac94e25983bd0e27dbfd7233c" name="A" x="392" y="0">
            <params/>
            <attribs/>
         </obj>
         <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_2" x="0" y="56">
            <params/>
            <attribs>
               <combo attributeName="channel" selection="PA1 (ADC1_IN1)"/>
            </attribs>
         </obj>
         <obj type="drj/math/inv_pos" uuid="ae23d42592d86ae7d7f2202cb1124490774d118a" name="inv_pos_5" x="140" y="56">
            <params/>
            <attribs/>
         </obj>
         <obj type="conv/unipolar2bipolar" uuid="efc8ee28c508740c5edf7995eaaa07a6d6818e5e" name="unipolar2bipolar_4" x="252" y="56">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet f" uuid="d18a9a550bcaaebac94e25983bd0e27dbfd7233c" name="B" x="392" y="56">
            <params/>
            <attribs/>
         </obj>
         <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_3" x="0" y="112">
            <params/>
            <attribs>
               <combo attributeName="channel" selection="PA2 (ADC1_IN2)"/>
            </attribs>
         </obj>
         <obj type="drj/math/inv_pos" uuid="ae23d42592d86ae7d7f2202cb1124490774d118a" name="inv_pos_3" x="140" y="112">
            <params/>
            <attribs/>
         </obj>
         <obj type="conv/unipolar2bipolar" uuid="efc8ee28c508740c5edf7995eaaa07a6d6818e5e" name="unipolar2bipolar_2" x="252" y="112">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet f" uuid="d18a9a550bcaaebac94e25983bd0e27dbfd7233c" name="C" x="392" y="112">
            <params/>
            <attribs/>
         </obj>
         <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_4" x="0" y="168">
            <params/>
            <attribs>
               <combo attributeName="channel" selection="PA3 (ADC1_IN3)"/>
            </attribs>
         </obj>
         <obj type="drj/math/inv_pos" uuid="ae23d42592d86ae7d7f2202cb1124490774d118a" name="inv_pos_2" x="140" y="168">
            <params/>
            <attribs/>
         </obj>
         <obj type="conv/unipolar2bipolar" uuid="efc8ee28c508740c5edf7995eaaa07a6d6818e5e" name="unipolar2bipolar_1" x="252" y="168">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet f" uuid="d18a9a550bcaaebac94e25983bd0e27dbfd7233c" name="D" x="392" y="168">
            <params/>
            <attribs/>
         </obj>
         <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_5" x="0" y="224">
            <params/>
            <attribs>
               <combo attributeName="channel" selection="PA4 (ADC1_IN4)"/>
            </attribs>
         </obj>
         <obj type="drj/math/inv_pos" uuid="ae23d42592d86ae7d7f2202cb1124490774d118a" name="inv_pos_1" x="140" y="224">
            <params/>
            <attribs/>
         </obj>
         <obj type="math/exp" uuid="3f0e6db61bc98c04b42a940e7a93abbf8a178317" name="exp_1" x="252" y="224">
            <params/>
            <attribs/>
         </obj>
         <obj type="patch/outlet f" uuid="d18a9a550bcaaebac94e25983bd0e27dbfd7233c" name="Vol" x="322" y="224">
            <params/>
            <attribs/>
         </obj>
         <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_3" x="42" y="434">
            <params/>
            <attribs>
               <combo attributeName="pad" selection="PB8"/>
               <combo attributeName="mode" selection="pulldown"/>
            </attribs>
         </obj>
         <obj type="patch/outlet b" uuid="191792f616d4835dba0b55375474a12942e5bcbd" name="PB3" x="168" y="434">
            <params/>
            <attribs/>
         </obj>
         <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_4" x="42" y="504">
            <params/>
            <attribs>
               <combo attributeName="pad" selection="PB9"/>
               <combo attributeName="mode" selection="pulldown"/>
            </attribs>
         </obj>
         <obj type="patch/outlet b" uuid="191792f616d4835dba0b55375474a12942e5bcbd" name="PB4" x="168" y="504">
            <params/>
            <attribs/>
         </obj>
         <nets>
            <net>
               <source obj="digital_3" outlet="out"/>
               <dest obj="PB3" inlet="outlet"/>
            </net>
            <net>
               <source obj="digital_4" outlet="out"/>
               <dest obj="PB4" inlet="outlet"/>
            </net>
            <net>
               <source obj="inv_pos_1" outlet="out"/>
               <dest obj="exp_1" inlet="a"/>
            </net>
            <net>
               <source obj="exp_1" outlet="result"/>
               <dest obj="Vol" inlet="outlet"/>
            </net>
            <net>
               <source obj="analog_5" outlet="out"/>
               <dest obj="inv_pos_1" inlet="in"/>
            </net>
            <net>
               <source obj="unipolar2bipolar_1" outlet="o"/>
               <dest obj="D" inlet="outlet"/>
            </net>
            <net>
               <source obj="analog_4" outlet="out"/>
               <dest obj="inv_pos_2" inlet="in"/>
            </net>
            <net>
               <source obj="inv_pos_2" outlet="out"/>
               <dest obj="unipolar2bipolar_1" inlet="i"/>
            </net>
            <net>
               <source obj="inv_pos_3" outlet="out"/>
               <dest obj="unipolar2bipolar_2" inlet="i"/>
            </net>
            <net>
               <source obj="inv_pos_4" outlet="out"/>
               <dest obj="unipolar2bipolar_3" inlet="i"/>
            </net>
            <net>
               <source obj="inv_pos_5" outlet="out"/>
               <dest obj="unipolar2bipolar_4" inlet="i"/>
            </net>
            <net>
               <source obj="analog_1" outlet="out"/>
               <dest obj="inv_pos_4" inlet="in"/>
            </net>
            <net>
               <source obj="unipolar2bipolar_3" outlet="o"/>
               <dest obj="A" inlet="outlet"/>
            </net>
            <net>
               <source obj="analog_2" outlet="out"/>
               <dest obj="inv_pos_5" inlet="in"/>
            </net>
            <net>
               <source obj="unipolar2bipolar_4" outlet="o"/>
               <dest obj="B" inlet="outlet"/>
            </net>
            <net>
               <source obj="analog_3" outlet="out"/>
               <dest obj="inv_pos_3" inlet="in"/>
            </net>
            <net>
               <source obj="unipolar2bipolar_2" outlet="o"/>
               <dest obj="C" inlet="outlet"/>
            </net>
         </nets>
         <settings>
            <subpatchmode>no</subpatchmode>
         </settings>
         <notes><![CDATA[]]></notes>
         <windowPos>
            <x>534</x>
            <y>66</y>
            <width>746</width>
            <height>685</height>
         </windowPos>
      </subpatch>
   </patcher>
   <obj type="TSG/patch/modsource auto" uuid="4ab1c80f-6017-44dc-aba7-1b9ad3949c81" name="mod_brightness" x="980" y="154">
      <params/>
      <attribs/>
   </obj>
   <obj type="conv/bipolar2unipolar" uuid="f6f63d71053d572d3c795f83c7ec11dfbbce82dd" name="bipolar2unipolar_1" x="840" y="196">
      <params/>
      <attribs/>
   </obj>
   <obj type="TSG/patch/modsource auto" uuid="4ab1c80f-6017-44dc-aba7-1b9ad3949c81" name="mod_noise" x="980" y="196">
      <params/>
      <attribs/>
   </obj>
   <obj type="TSG/patch/modsource auto" uuid="4ab1c80f-6017-44dc-aba7-1b9ad3949c81" name="mod_revtime" x="980" y="238">
      <params/>
      <attribs/>
   </obj>
   <obj type="TSG/patch/modsource auto" uuid="4ab1c80f-6017-44dc-aba7-1b9ad3949c81" name="mod_revamnt" x="980" y="280">
      <params/>
      <attribs/>
   </obj>
   <obj type="lfo/sine" uuid="75f7330c26a13953215dccc3b7b9008545c9daa9" name="sine_1" x="406" y="294">
      <params>
         <frac32.s.map name="pitch" value="-64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/&gt;&gt;" uuid="d883beaf50b7aae4803ed9941e8f123e87e1e3aa" name="&gt;&gt;_1" x="518" y="294">
      <params/>
      <attribs>
         <spinner attributeName="shift" value="2"/>
      </attribs>
   </obj>
   <patchobj type="patch/object" uuid="e59f2c52-f162-4deb-89d4-6d512bc2af6a" name="sum4_1" x="616" y="294">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="e59f2c52-f162-4deb-89d4-6d512bc2af6a">
         <sDescription>Sum 4 values at k-rate</sDescription>
         <author>Are Leistad</author>
         <license>BSD</license>
         <inlets>
            <frac32.bipolar name="in1" description="Input 1"/>
            <frac32.bipolar name="in2" description="Input 2"/>
            <frac32.bipolar name="in3" description="Input 3"/>
            <frac32.bipolar name="in4" description="Input 4"/>
         </inlets>
         <outlets>
            <frac32.bipolar name="out" description="Output"/>
         </outlets>
         <displays/>
         <params/>
         <attribs/>
         <includes/>
         <code.krate><![CDATA[
      outlet_out = inlet_in1 + inlet_in2 + inlet_in3 + inlet_in4;
    ]]></code.krate>
      </object>
   </patchobj>
   <obj type="TSG/patch/modsource auto" uuid="4ab1c80f-6017-44dc-aba7-1b9ad3949c81" name="mod_vol" x="980" y="322">
      <params/>
      <attribs/>
   </obj>
   <obj type="noise/pink" uuid="72c03a2468ee865f248733fcf9b12d4cf42b5a61" name="pink_1" x="14" y="364">
      <params/>
      <attribs/>
   </obj>
   <obj type="filter/lp1" uuid="1b1fd7085e44d2b7b80b59b8d68796b909c1b2cc" name="lp1_1" x="98" y="364">
      <params>
         <frac32.s.map name="freq" value="22.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/gain" uuid="62b1c1a6337c7c8f6aec96408a432477b113cfa0" name="gain_1" x="210" y="364">
      <params>
         <frac32.u.map name="amp" value="0.0">
            <modulators>
               <modulation sourceName="mod_noise" modName="" value="3.0"/>
            </modulators>
         </frac32.u.map>
      </params>
      <attribs/>
   </obj>
   <obj type="lfo/sine" uuid="75f7330c26a13953215dccc3b7b9008545c9daa9" name="sine_2" x="406" y="378">
      <params>
         <frac32.s.map name="pitch" value="-61.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/&gt;&gt;" uuid="d883beaf50b7aae4803ed9941e8f123e87e1e3aa" name="&gt;&gt;_2" x="518" y="378">
      <params/>
      <attribs>
         <spinner attributeName="shift" value="2"/>
      </attribs>
   </obj>
   <obj type="lfo/sine" uuid="75f7330c26a13953215dccc3b7b9008545c9daa9" name="sine_3" x="406" y="462">
      <params>
         <frac32.s.map name="pitch" value="-57.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/&gt;&gt;" uuid="d883beaf50b7aae4803ed9941e8f123e87e1e3aa" name="&gt;&gt;_3" x="518" y="462">
      <params/>
      <attribs>
         <spinner attributeName="shift" value="2"/>
      </attribs>
   </obj>
   <obj type="lfo/sine" uuid="75f7330c26a13953215dccc3b7b9008545c9daa9" name="sine_4" x="406" y="546">
      <params>
         <frac32.s.map name="pitch" value="-54.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/&gt;&gt;" uuid="d883beaf50b7aae4803ed9941e8f123e87e1e3aa" name="&gt;&gt;_4" x="518" y="546">
      <params/>
      <attribs>
         <spinner attributeName="shift" value="2"/>
      </attribs>
   </obj>
   <nets>
      <net>
         <source obj="BlocksControls_1" outlet="Vol"/>
         <dest obj="mod_vol" inlet="v"/>
      </net>
      <net>
         <source obj="ScaryMovieSubPatch_1" outlet="outlet_1"/>
         <dest obj="chorus_1" inlet="in"/>
      </net>
      <net>
         <source obj="gain_1" outlet="out"/>
         <dest obj="lp_1" inlet="pitch"/>
         <dest obj="lp_2" inlet="pitch"/>
      </net>
      <net>
         <source obj="pink_1" outlet="out"/>
         <dest obj="lp1_1" inlet="in"/>
      </net>
      <net>
         <source obj="lp1_1" outlet="out"/>
         <dest obj="gain_1" inlet="in"/>
      </net>
      <net>
         <source obj="lp_1" outlet="out"/>
         <dest obj="saturatorSt_1" inlet="inL"/>
      </net>
      <net>
         <source obj="lp_2" outlet="out"/>
         <dest obj="saturatorSt_1" inlet="inR"/>
      </net>
      <net>
         <source obj="saturatorSt_1" outlet="outL"/>
         <dest obj="out_stereo_vol_1" inlet="left"/>
      </net>
      <net>
         <source obj="saturatorSt_1" outlet="outR"/>
         <dest obj="out_stereo_vol_1" inlet="right"/>
      </net>
      <net>
         <source obj="BlocksControls_1" outlet="D"/>
         <dest obj="mod_revamnt" inlet="v"/>
      </net>
      <net>
         <source obj="BlocksControls_1" outlet="C"/>
         <dest obj="mod_revtime" inlet="v"/>
      </net>
      <net>
         <source obj="BlocksControls_1" outlet="A"/>
         <dest obj="mod_brightness" inlet="v"/>
      </net>
      <net>
         <source obj="BlocksControls_1" outlet="B"/>
         <dest obj="bipolar2unipolar_1" inlet="i"/>
      </net>
      <net>
         <source obj="bipolar2unipolar_1" outlet="o"/>
         <dest obj="mod_noise" inlet="v"/>
      </net>
      <net>
         <source obj="toggle_MPE" outlet="o"/>
         <dest obj="Blocks_SeaboardConfig_1" inlet="MPE"/>
      </net>
      <net>
         <source obj="sine_4" outlet="wave"/>
         <dest obj="&gt;&gt;_4" inlet="a"/>
      </net>
      <net>
         <source obj="sine_3" outlet="wave"/>
         <dest obj="&gt;&gt;_3" inlet="a"/>
      </net>
      <net>
         <source obj="sine_2" outlet="wave"/>
         <dest obj="&gt;&gt;_2" inlet="a"/>
      </net>
      <net>
         <source obj="sine_1" outlet="wave"/>
         <dest obj="&gt;&gt;_1" inlet="a"/>
      </net>
      <net>
         <source obj="&gt;&gt;_1" outlet="result"/>
         <dest obj="sum4_1" inlet="in1"/>
      </net>
      <net>
         <source obj="&gt;&gt;_2" outlet="result"/>
         <dest obj="sum4_1" inlet="in2"/>
      </net>
      <net>
         <source obj="&gt;&gt;_3" outlet="result"/>
         <dest obj="sum4_1" inlet="in3"/>
      </net>
      <net>
         <source obj="&gt;&gt;_4" outlet="result"/>
         <dest obj="sum4_1" inlet="in4"/>
      </net>
      <net>
         <source obj="sum4_1" outlet="out"/>
         <dest obj="ScaryMovieSubPatch_1" inlet="pitch_fluct"/>
      </net>
      <net>
         <source obj="chorus_1" outlet="out"/>
         <dest obj="reverb_1" inlet="l"/>
         <dest obj="reverb_1" inlet="r"/>
      </net>
      <net>
         <source obj="reverb_1" outlet="l"/>
         <dest obj="lp_1" inlet="in"/>
      </net>
      <net>
         <source obj="reverb_1" outlet="r"/>
         <dest obj="lp_2" inlet="in"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>90</x>
      <y>31</y>
      <width>1158</width>
      <height>737</height>
   </windowPos>
</patch-1.0>